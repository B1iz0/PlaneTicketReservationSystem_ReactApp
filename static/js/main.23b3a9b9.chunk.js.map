{"version":3,"sources":["constants/index.js","components/Admin/AdminPanel/AdminPanel.js","components/Admin/AdminPanel/index.js","redux/tokenSlice.js","redux/customerInfoSlice.js","redux/notificationsSlice.js","redux/store.js","api/index.js","services/token-service.js","components/shared/Profile/ProfileDropdownMenu.js","components/shared/Profile/index.js","components/shared/Profile/Profile.js","components/shared/Header/Header.js","components/shared/Header/index.js","components/shared/Footer/index.js","components/shared/Footer/Footer.js","services/authorizationValidation.js","components/Authorization/SignIn/SignIn.js","components/Authorization/SignIn/index.js","components/Authorization/SignUp/SignUp.js","components/Authorization/SignUp/index.js","api/userRequests.js","components/AccountPage/AccountPage.js","components/AccountPage/index.js","api/companyRequests.js","components/shared/Table/CustomFooter.js","components/shared/Table/Table.js","components/shared/Table/index.js","components/shared/Filter/Filter.js","components/shared/Filter/index.js","components/shared/CustomDialog/CustomDialog.js","components/shared/CustomDialog/index.js","api/locationRequests.js","api/airportRequests.js","components/shared/Dialogs/AirportCreateDialog/AirportCreateDialogContent.js","components/shared/Dialogs/AirportCreateDialog/AirportCreateDialog.js","components/shared/Dialogs/AirportCreateDialog/index.js","components/shared/Dialogs/AirportEditDialog/AirportEditDialogContent.js","components/shared/Dialogs/AirportEditDialog/AirportEditDialog.js","components/shared/Dialogs/AirportEditDialog/index.js","api/searchHintsRequests.js","constants/searchHintsUrl.js","components/MyCompanyPage/tables/CompanyAirportsTable.js","api/priceRequests.js","components/shared/PlacesPriceEditableTable/PlacesPriceEditableTable.js","components/shared/PlacesPriceEditableTable/index.js","components/shared/Dialogs/PlacesPriceDialog/PlacesPriceDialogContent.js","components/shared/Dialogs/PlacesPriceDialog/PlacesPriceDialog.js","components/shared/Dialogs/PlacesPriceDialog/index.js","api/airplaneRequests.js","components/MyCompanyPage/tables/CompanyAirplanesTable.js","components/MyCompanyPage/MyCompanyPage.js","components/MyCompanyPage/index.js","api/flightRequests.js","components/FlightsPage/FlightsItemInfo.js","components/FlightsPage/FlightsItem.js","components/FlightsPage/FlightsList.js","components/FlightsPage/index.js","components/FlightsPage/FlightsPage.js","components/shared/FormTextField/index.js","components/shared/FormTextField/FormTextField.js","components/shared/Dialogs/UserCreateDialog/AdminUserCreationForm.js","components/shared/Dialogs/UserCreateDialog/UserCreateDialogContent.js","components/shared/Dialogs/UserCreateDialog/UserCreateDialog.js","components/Admin/AdminPages/AdminUsersPage/AdminUsersPage.js","components/Admin/AdminPages/AdminUsersPage/index.js","components/shared/DeleteConfirmDialog/index.js","components/shared/DeleteConfirmDialog/DeleteConfirmDialog.js","components/Admin/AdminPages/AdminCompaniesPage/CompanyEditDialogContent.js","components/Admin/AdminPages/AdminCompaniesPage/CompanyCreateDialogContent.js","components/Admin/AdminPages/AdminCompaniesPage/CompanyManagersDialogContent/ManagersList/ManagersListItem.js","components/Admin/AdminPages/AdminCompaniesPage/CompanyManagersDialogContent/ManagersList/ManagersList.js","components/Admin/AdminPages/AdminCompaniesPage/CompanyManagersDialogContent/ManagersList/index.js","components/Admin/AdminPages/AdminCompaniesPage/CompanyManagersDialogContent/ManagerAdding.js","components/Admin/AdminPages/AdminCompaniesPage/CompanyManagersDialogContent/index.js","components/Admin/AdminPages/AdminCompaniesPage/CompanyManagersDialogContent/CompanyManagersDialogContent.js","components/Admin/AdminPages/AdminCompaniesPage/AdminCompaniesPage.js","components/Admin/AdminPages/AdminCompaniesPage/index.js","components/shared/PriceTable/PriceTable.js","components/shared/PriceTable/index.js","components/Admin/AdminPages/AdminFlightsPage/FlightInfoDialogContent/FlightInfoDialogContent.js","components/Admin/AdminPages/AdminFlightsPage/FlightInfoDialogContent/index.js","components/Admin/AdminPages/AdminFlightsPage/FlightEditDialogContent/FlightEditDialogContent.js","components/Admin/AdminPages/AdminFlightsPage/FlightEditDialogContent/index.js","components/Admin/AdminPages/AdminFlightsPage/FlightCreateDialogContent/FlightCreateDialogContent.js","components/Admin/AdminPages/AdminFlightsPage/FlightCreateDialogContent/index.js","components/Admin/AdminPages/AdminFlightsPage/AdminFlightsPage.js","components/Admin/AdminPages/AdminFlightsPage/index.js","components/AirplaneCreationPage/AirplaneCreationStepper/steps/AirplaneCreationStep.js","api/placeRequests.js","components/AirplaneCreationPage/AirplaneCreationStepper/steps/FulfillAirplanesStep/AirplaneTypesAutocomplete.js","components/AirplaneCreationPage/AirplaneCreationStepper/steps/FulfillAirplanesStep/FulfillAirplaneStep.js","components/AirplaneCreationPage/AirplaneCreationStepper/steps/PricesCreationStep.js","components/AirplaneCreationPage/AirplaneCreationStepper/AirplaneCreationStepper.js","components/AirplaneCreationPage/AirplaneCreationStepper/index.js","components/AirplaneCreationPage/index.js","components/AirplaneCreationPage/AirplaneCreationPage.js","api/bookingRequests.js","components/FlightReservationPage/FlightReservationStepper/steps/SelectedFlightStep.js","components/FlightReservationPage/FlightReservationStepper/steps/PlaceSelectionStep/PlaceItem.js","components/FlightReservationPage/FlightReservationStepper/steps/PlaceSelectionStep/BaggageRegistration.js","components/FlightReservationPage/FlightReservationStepper/steps/PlaceSelectionStep/PlaceSelectionStep.js","components/FlightReservationPage/FlightReservationStepper/steps/PlaceSelectionStep/index.js","components/FlightReservationPage/FlightReservationStepper/steps/ContactDetailsStep.js","services/bookingPlacesService.js","components/FlightReservationPage/FlightReservationStepper/steps/FinalPriceStep.js","components/FlightReservationPage/FlightReservationStepper/FlightReservationStepper.js","components/FlightReservationPage/FlightReservationStepper/index.js","components/FlightReservationPage/index.js","components/FlightReservationPage/FlightReservationPage.js","components/shared/Alert/index.js","components/shared/Alert/Alert.js","components/Notifications/SuccessNotification.js","components/Notifications/BookingCreationNotification.js","components/Notifications/index.js","components/Notifications/Notifications.js","components/Admin/AdminPages/AdminAirplanesPage/AdminAirplanesPage.js","constants/appRoles.js","components/shared/CustomRoute/index.js","components/shared/CustomRoute/CustomRoute.js","components/App/App.js","components/App/index.js","index.js"],"names":["allAirplanesEndPoint","airportsEndPoint","flightsEndPoint","usersEndPoint","companiesEndPoint","placesEndPoint","pricesEndPoint","useStyles","makeStyles","theme","drawer","width","drawerPaper","active","background","title","padding","spacing","AdminPanel","classes","history","useHistory","location","useLocation","menuItems","text","icon","Group","color","path","BusinessCenter","Flight","FlightTakeoff","Drawer","className","variant","anchor","paper","Typography","List","map","item","ListItem","button","onClick","push","pathname","ListItemIcon","ListItemText","primary","tokenSlice","createSlice","name","initialState","jwtToken","localStorage","getItem","refreshToken","reducers","setJwtToken","state","action","payload","removeJwtToken","setRefreshToken","removeRefreshToken","actions","customerInfoSlice","firstName","value","isValid","lastName","email","phone","setFirstName","setFirstNameValid","setLastName","setLastNameValid","setEmail","setEmailValid","setPhone","notificationsSlice","simpleSuccessNotificationText","isSimpleSuccessNotificationActive","failedNotificationText","isFailedNotificationActive","isBookingCreationActive","isCompanyCreationActive","setSimpleSuccessNotificationText","setIsSimpleSuccessNotificationActive","setFailedNotificationText","setIsFailedNotificationActive","setIsBookingCreationActive","setIsCompanyCreationActive","configureStore","reducer","token","tokenReducer","customerInfo","customerInfoReducer","notifications","notificationsReducer","instanse","axios","create","baseURL","responseType","interceptors","request","use","config","error","Promise","reject","response","originalRequest","url","removeToken","window","href","status","_retry","refreshCurrentToken","store","getState","then","headers","Authorization","bearerAuthorization","getEmail","JSON","parse","atob","split","getRole","role","getId","id","getCompanyId","companyId","setToken","a","setItem","dispatch","removeItem","API","post","data","catch","console","log","root","display","zIndex","marginRight","accountIcon","ProfileDropdownMenu","userEmail","useSelector","useState","open","setOpen","anchorRef","useRef","useDispatch","setRole","useEffect","handleClose","event","current","contains","target","handleLogout","handleMyProfileCLick","handleMyCompanyClick","handleListKeyDown","key","preventDefault","prevOpen","focus","Button","ref","aria-controls","undefined","aria-haspopup","Popper","anchorEl","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","MenuItem","Profile","flexGrow","appBar","position","Header","setUserEmail","AppBar","Toolbar","Link","underline","Footer","checkEmail","result","isNotValid","errorMessage","test","checkPassword","password","checkRepeatedPassword","repeatedPassword","checkFirstName","checkLastName","marginTop","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","errorSignIn","SignIn","setPassword","isEmailNotValid","setEmailNotValid","isPasswordNotValid","setPasswordNotValid","setErrorMessage","emailErrorMessage","setEmailErrorMessage","passwordErrorMessage","setPasswordErrorMessage","e","emailValidationResult","passwordValidationResult","message","Container","maxWidth","component","TextField","required","fullWidth","label","autoComplete","onChange","autoFocus","helperText","type","Grid","container","SignUp","setRepeatedPassword","isRepeatedPasswordNotValid","setRepeatedPasswordNotValid","isFirstNameNotValid","setFirstNameNotValid","isLastNameNotValid","setLastNameNotValid","repeatedPasswordErrorMessage","setRepeatedPasswordErrorMessage","firstNameErrorMessage","setFirstNameErrorMessage","lastNameErrorMessage","setLastNameErrorMessage","repeatedPasswordValidationResult","firstNameValidationResult","lastNameValidationResult","postUser","user","getUserInfo","get","getFreeUsers","getManagers","assignCompanyToUser","userId","getFilteredUsers","offset","emailFilter","firstNameFilter","lastNameFilter","params","limit","getFilteredUsersCount","largeAvatar","height","alignSelf","userEmailText","fontSize","userName","userNameText","bookingsTable","minHeight","AccountPage","setUser","rows","setRows","fetchData","currentRows","bookings","flightNumber","flight","airplaneModel","airplane","model","departureAirport","from","arrivalAirport","to","departureTime","arrivalTime","gutterBottom","justify","lg","Avatar","alt","columns","field","headerName","pageSize","checkboxSelection","disableColumnMenu","disableSelectionOnClick","getAllCompanies","getFilteredCompanies","companyNameFilter","countryNameFilter","companyName","countryName","getCompaniesCount","getCompanies","getCompany","postCompany","company","countryId","putCompany","put","deleteCompany","delete","tableFooter","addButton","CustomFooter","onAddClick","rowCount","page","onPageChange","IconButton","size","TablePagination","count","rowsPerPage","rowsPerPageOptions","onChangePage","tableHeader","justifyContent","grid","Table","handlePageChange","newPage","components","searchButton","Filter","fields","fieldsOptions","onFilterConfirmed","onSearchClick","disableOptions","selectedValues","setSelectedValues","slice","Autocomplete","freeSolo","options","getOptionLabel","option","inputValue","onInputChange","newInputValue","renderInput","closeButton","right","top","grey","PaperComponent","props","handle","cancel","CustomDialog","isOpened","closeDialog","DialogContent","Dialog","onClose","aria-labelledby","getCountries","getCities","getAllAirports","airports","getFilteredAirports","filters","airportName","airport","cityName","city","country","getFilteredAirportsCount","postAirport","cityId","putAirport","AirportCreateDialogContent","cities","setCities","companies","setCompanies","setAirportName","airportCity","setAirportCity","airportCompany","setAirportCompany","isAirportNameValid","setIsAirportNameValid","isAirportCityValid","setIsAirportCityValid","isRequestError","setIsRequestError","requestErrorMessage","setRequestErrorMessage","citiesResponse","companiesResponse","handleCreateClick","airportError","xs","newValue","disabled","DialogActions","AirportCreateDialog","AirportEditDialogContent","handleSaveClick","getOptionSelected","AirportEditDialog","getUserSearchHints","filter","getFlightSearchHints","departureCity","arrivalCity","getCompanySearchHints","getAirplaneSearchHints","airplaneType","getAirportSearchHints","airportsTable","airportsFilter","marginBottom","CompanyAirportsTable","timer","airportNameHints","setAirportNameHints","cityNameHints","setCityNameHints","countryNameHints","setCountryNameHints","setOffset","setPage","airportFilter","setAirportFilter","cityFilter","setCityFilter","countryFilter","setCountryFilter","setAirports","airportsCount","setAirportsCount","isAirportCreateDialogOpened","setIsAirportCreateDialogOpened","selectedAirport","setSelectedAirport","isAirportEditDialogOpened","setIsAirportEditDialogOpened","renderCell","row","Tooltip","handleEditClick","fetchAirports","airportsResponse","airportsCountResponse","fetchHints","hints","airportNames","cityNames","countryNames","Set","values","clearTimeout","setTimeout","getAirplanePlacePrices","airplaneId","putAirplanePrices","prices","PlacesPriceEditableTable","handleCellEdit","flex","editable","valueFormatter","onEditCellChange","pricesDialogContent","minWidth","PlacesPriceDialogContent","initialPrices","setInitialPrices","setPrices","isPricesValid","setIsPricesValid","newPrices","x","forEach","price","ticketPrice","pricesForUpdate","placeTypeId","parseInt","i","length","PlacesPriceDialog","getAirplaneTypes","getAirplanes","airplaneTypeFilter","companyFilter","modelFilter","addAirplane","airplaneTypeId","registrationNumber","baggageCapacity","baggageCapacityInKilograms","parseFloat","deleteAirplane","getFreeAirplanes","airplanes","getAirplanesCount","airplanesTable","airplanesFilter","CompanyAirplanesTable","airplaneTypeHints","setAirplaneTypeHints","modelHints","setModelHints","setModelFilter","setAirplaneTypeFilter","setAirplanes","airplanesCount","setAirplanesCount","selectedAirplane","setSelectedAirplane","isPlacesPriceDialogOpened","setIsPlacesPriceDialogOpened","openPlacesPriceDialog","typeName","fetchAirplanes","airplanesResponse","airplaneTypes","models","companyInfo","TabPanel","children","index","other","hidden","Box","p","MyCompanyPage","setCompany","currentTab","setCurrentTab","companyResponse","elevation","Tabs","centered","indicatorColor","textColor","aria-label","Tab","getFilteredFlights","departureCityFilter","arrivalCityFilter","getFlightsCount","getFlight","flightId","postFlight","departureAirportId","arrivalAirportId","departureTimeWithoutTZ","arrivalTimeWithoutTZ","freeBaggageLimit","overweightPrice","fromId","toId","toJSON","freeBaggageLimitInKilograms","putFlight","airplaneIcon","transform","airplaneInfo","FlightsItemInfo","align","direction","flightInfo","bookButton","marginLeft","dividedLine","FlightsItem","Card","flightList","pagination","FlightsList","amountOfPages","setPagesAmount","flights","setFlights","setDepartureCity","setArrivalCity","departureCityHints","setDepartureCityHints","arrivalCityHints","setArrivalCityHints","fetchFlights","flightsCount","Math","ceil","departureCities","arrivalCities","Pagination","shape","FlightsPage","FormTextField","useField","meta","touched","AdminUserCreationForm","onSubmit","onSubmitRegistration","errorRegistration","initialValues","passwordConfirm","validationSchema","Yup","max","min","matches","oneOf","handleSubmit","handleReset","dialogContent","UserCreateDialogContent","UserCreateDialog","usersGrid","AdminUsersPage","users","setUsers","totalUsersNumber","setTotalUsersNumber","emailHints","setEmailHints","firstNameHints","setFirstNameHints","lastNameHints","setLastNameHints","setEmailFilter","setFirstNameFilter","setLastNameFilter","isCreateDialogOpened","setIsCreateDialogOpened","fetchUsers","usersCount","emails","firstNames","lastNames","DeleteConfirmDialog","handleConfirmation","handleRejection","DialogTitle","DialogContentText","countryNameField","CompanyEditDialogContent","countries","setCountries","currentCompanyName","setCurrentCompanyName","currentCompanyCountry","setCurrentCompanyCountry","isCurrentCompanyNameValid","setIsCurrentCompanyNameValid","isCurrentCompanyCountryValid","setIsCurrentCompanyCountryValid","countriesResponse","updateCompanyVersion","inputField","CompanyCreateDialogContent","setCompanyName","companyCountry","setCompanyCountry","isCompanyNameValid","setIsCompanyNameValid","isCompanyCountryValid","setIsCompanyCountryValid","isErrorResponse","setIsErrorResponse","errorHelperText","setErrorHelperText","createdCompany","creationError","gridItem","deleteButton","red","ManagersListItem","manager","handleDeleteManager","noWrap","phoneNumber","managersListPaper","ManagersList","managers","managerAdding","ManagerAdding","freeUsers","handleAddManager","newManager","setNewManager","isNewManagerValid","setIsNewManagerValid","startIcon","CompanyManagersDialogContent","setManagers","setFreeUsers","freeUsersResponse","managersResponse","newFreeUsers","newManagers","companiesGrid","AdminCompaniesPage","companyHints","setCompanyHints","countryHints","setCountryHints","totalCompaniesNumber","setTotalCompaniesNumber","setCompanyNameFilter","setCountryNameFilter","isEditDialogOpened","setIsEditDialogOpened","isManagersDialogOpened","setIsManagersDialogOpened","isDeleteConfirmDialogOpened","setIsDeleteConfirmDialogOpened","setCompanyId","companyForEditing","setCompanyForEditing","openEditDialog","openManagersDialog","openDeleteConfirmDialog","fetchCompanies","companiesCount","closeCreateDialog","handleDeleteConfirmation","table","PriceTable","TableContainer","TableHead","TableRow","TableCell","TableBody","scope","placeType","infoDialog","paddingTop","infoPaper","loading","FlightInfoDialogContent","setFlight","flightTitle","CircularProgress","FlightEditDialogContent","flightForEditing","freeAirplanes","setFreeAirplanes","setFlightNumber","setAirplaneId","fromAirportId","setFromAirportId","toAirportId","setToAirportId","Date","departureDate","setDepartureDate","arrivalDate","setArrivalDate","setAirplane","fromAirportName","setDepartureAirport","toAirportName","setArrivalAirport","allAirports","saveFlight","hoursDiff","getHours","getTimezoneOffset","setHours","onSaveClick","FormControl","InputLabel","Select","child","input","OutlinedInput","utils","DateFnsUtils","DateTimePicker","inputVariant","disableElevation","formField","FlightCreateDialogContent","setDepartureAirportId","setArrivalAirportId","setDepartureTime","setArrivalTime","setFreeBaggageLimit","setOverweightPrice","createFlight","handleCreate","disablePast","InputProps","startAdornment","InputAdornment","flightsGrid","AdminFlightsPage","totalFlightsNumber","setTotalFlightsNumber","setDepartureCityFilter","setArrivalCityFilter","setFlightForEditing","flightIdEdit","setFlightIdInfo","isMoreInfoDialogOpened","setIsMoreInfoDialogOpened","openEditInfoDialog","openMoreInfoDialog","moreInfoIcon","airplaneRegistartionNumber","closeCreateFlightDialog","airplaneCreationForm","actionsContainer","AirplaneCreationStep","handleNext","handleAirplaneCreation","setAirplaneTypeId","setModel","setRegistrationNumber","rowsAmount","setRowsAmount","columnsAmount","setColumnsAmount","setBaggageCapacity","setAirplaneType","setAirplaneTypes","isModelValid","setIsModelValid","isRegistrationNumberValid","setIsRegistrationNumberValid","isAirplaneTypeValid","setIsAirplaneTypeValid","isRowsNumberValid","setIsRowsNumberValid","isColumnsNumberValid","setIsColumnsNumberValid","isBaggageCapacityValid","setIsBaggageCapacityValid","isCompanyValid","setIsCompanyValid","serverError","setServerError","handleSave","createdAirplane","FormHelperText","getPlaceTypes","postPlacesList","requestModel","blockPlace","placeId","unblockPlace","createFilterOptions","AirplaneTypesAutocomplete","handleChange","placeTypes","setPlaceTypes","selectedPlaceType","setSelectedPlaceType","isDialogOpen","setIsDialogOpen","placeTypeName","dialogValue","setDialogValue","prevType","amount","isTypeValid","isAmountValid","filterOptions","filtered","selectOnFocus","clearOnBlur","renderOption","textField","FulfillAirplaneStep","handleFulfillAirplane","newPlaceTypes","isValidValue","requestPlaces","placeAmount","places","handleChangeSomePlaceType","updatePlaceTypes","handleChangeAmountOfPlaces","PricesCreationStep","handleBackToAdminTable","handlePricesSave","getStepContent","step","createdAirplaneId","AirplaneCreationStepper","activeStep","setActiveStep","steps","setCreatedAirplaneId","setCreatedAirplane","prevActiveStep","goBack","Stepper","orientation","Step","StepLabel","StepContent","AirplaneCreationPage","postBooking","booking","selectedFlightPaper","SelectedFlightStep","selectedFlight","placeButton","PlaceItem","selectedPlaces","place","handlePlaceSelection","handlePlaceRejection","isSelected","selectedPlace","isFree","setSelectedPlace","bookingId","lastBlockedByUserId","baggageService","baggageWeightField","baggageServices","BaggageRegistration","isBaggageServiceChecked","handleBaggageChecked","baggageWeight","handleBaggageWeightChange","isBaggageWeightValid","setIsBaggageWeightValid","baggageWeightHelperText","setBaggageWeightHelperText","FormControlLabel","control","Checkbox","checked","defaultValue","onePersonBaggageLimitInKilograms","inputProps","placeSelectionPapper","placesSection","PlaceSelectionStep","dataGridRows","column","contactDetailsPaper","contactDetailsField","ContactDetailsStep","handleFirstNameChange","handleLastNameChange","handleEmailChange","validationResult","setEmailErrorHelperText","handlePhoneChange","emailErrorHelperText","getPlacePrice","getAmountOfIdenticalPlaces","currentPlace","finalPricePaper","FinalPriceStep","placesTotalPrice","baggageTotalPrice","uniquePlacesInfo","isAlreadyMarked","element","amountOfIdenticalPlaces","onePlacePrice","totalPrice","getUniquePlacesInfo","resetContainer","placeSelectionStepTitle","contactDetailsStepTitle","FlightReservationStepper","React","setPlacesTotalPrice","setSelectedPlaces","setBaggageWeight","setIsBaggageServiceChecked","isReservationValid","setIsReservationValid","setBaggageTotalPrice","newSelectedPlaces","isCustomInfoValid","handleBack","handleFinish","placesId","baggageWeightInKilograms","customerFirstName","customerLastName","customerEmail","customerPhone","createdBookingId","FLightReservationPage","responseFlight","Alert","SuccessNotification","autoHide","severity","BookingCreationNotification","autoHideDuration","Notifications","AdminAirplanesPage","airplaneIdToDelete","setAirplaneIdToDelete","companyNameHints","setCompanyNameHints","setCompanyFilter","companyNames","AdminApp","Admin","CustomRoute","requiredRoles","includes","mainPage","toolBar","mixins","toolbar","AdminAppOpportunities","AdminOpportunities","UserOportunities","App","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23b3a9b9.chunk.js","sourcesContent":["export const reservationSystemURL = 'https://ptrbackend.herokuapp.com';\r\n\r\nexport const allAirplanesEndPoint = 'api/airplanes';\r\nexport const freeAirplanesEndPoint = 'api/airplanes/free';\r\nexport const allAirplanesCountEndPoint = 'api/airplanes/count';\r\n\r\nexport const allAirplaneTypesEndPoint = 'api/airplaneTypes';\r\n\r\nexport const allAirportsEndPoint = 'api/airports/all';\r\nexport const airportsEndPoint = 'api/airports';\r\nexport const airportsCountEndPoint = 'api/airports/count';\r\n\r\nexport const flightsEndPoint = 'api/flights';\r\nexport const flightsCountEndPoint = 'api/flights/count';\r\n\r\nexport const allCtitesEndPoint = 'api/cities';\r\n\r\nexport const usersEndPoint = 'api/users';\r\nexport const usersCountEndPoint = 'api/users/count';\r\n\r\nexport const allCompaniesEndPoint = 'api/companies/all';\r\nexport const companiesEndPoint = 'api/companies';\r\nexport const allCompaniesCountEndPoint = 'api/companies/count';\r\n\r\nexport const countriesEndPoint = 'api/countries';\r\n\r\nexport const placeTypesEndPoint = 'api/placeTypes';\r\n\r\nexport const placesEndPoint = 'api/places';\r\n\r\nexport const pricesEndPoint = 'api/prices';\r\n\r\nexport const bookingsEndPoint = 'api/bookings';\r\n\r\nexport const flightsOnPage = 4;\r\n\r\nexport const elementsOnAdminTable = 5;\r\n\r\nexport const drawerWidth = 240;\r\n","import React from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {\r\n  BusinessCenter,\r\n  Flight,\r\n  FlightTakeoff,\r\n  Group,\r\n} from '@material-ui/icons';\r\n\r\nimport { drawerWidth } from 'constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  active: {\r\n    background: '#f4f4f4',\r\n  },\r\n  title: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst AdminPanel = () => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n\r\n  const menuItems = [\r\n    {\r\n      text: 'Users',\r\n      icon: <Group color=\"primary\" />,\r\n      path: '/admin/users',\r\n    },\r\n    {\r\n      text: 'Companies',\r\n      icon: <BusinessCenter color=\"primary\" />,\r\n      path: '/admin/companies',\r\n    },\r\n    {\r\n      text: 'Airplanes',\r\n      icon: <Flight color=\"primary\" />,\r\n      path: '/admin/airplanes',\r\n    },\r\n    {\r\n      text: 'Flights',\r\n      icon: <FlightTakeoff color=\"primary\" />,\r\n      path: '/admin/flights',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Drawer\r\n      className={classes.drawer}\r\n      variant=\"permanent\"\r\n      anchor=\"left\"\r\n      classes={{ paper: classes.drawerPaper }}\r\n    >\r\n      <div>\r\n        <Typography variant=\"h5\" className={classes.title}>\r\n          Admin panel\r\n        </Typography>\r\n      </div>\r\n\r\n      <List>\r\n        {menuItems.map((item) => (\r\n          <ListItem\r\n            button\r\n            key={item.text}\r\n            onClick={() => history.push(item.path)}\r\n            className={location.pathname === item.path ? classes.active : null}\r\n          >\r\n            <ListItemIcon>{item.icon}</ListItemIcon>\r\n            <ListItemText primary={item.text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import AdminPanel from './AdminPanel';\nexport default AdminPanel;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const tokenSlice = createSlice({\n  name: 'token',\n  initialState: {\n    jwtToken: localStorage.getItem('jwtToken'),\n    refreshToken: localStorage.getItem('refreshToken'),\n  },\n  reducers: {\n    setJwtToken: (state, action) => {\n      state.jwtToken = action.payload;\n    },\n    removeJwtToken: (state) => {\n      state.jwtToken = '';\n    },\n    setRefreshToken: (state, action) => {\n      state.refreshToken = action.payload;\n    },\n    removeRefreshToken: (state) => {\n      state.refreshToken = '';\n    },\n  },\n});\n\nexport const {\n  setJwtToken,\n  removeJwtToken,\n  setRefreshToken,\n  removeRefreshToken,\n} = tokenSlice.actions;\n\nexport default tokenSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const customerInfoSlice = createSlice({\r\n  name: 'customerInfo',\r\n  initialState: {\r\n    firstName: {\r\n      value: '',\r\n      isValid: true,\r\n    },\r\n    lastName: {\r\n      value: '',\r\n      isValid: true,\r\n    },\r\n    email: {\r\n      value: '',\r\n      isValid: true,\r\n    },\r\n    phone: '',\r\n  },\r\n  reducers: {\r\n    setFirstName: (state, action) => {\r\n      state.firstName.value = action.payload;\r\n    },\r\n    setFirstNameValid: (state, action) => {\r\n      state.firstName.isValid = action.payload;\r\n    },\r\n    setLastName: (state, action) => {\r\n      state.lastName.value = action.payload;\r\n    },\r\n    setLastNameValid: (state, action) => {\r\n      state.lastName.isValid = action.payload;\r\n    },\r\n    setEmail: (state, action) => {\r\n      state.email.value = action.payload;\r\n    },\r\n    setEmailValid: (state, action) => {\r\n      state.email.isValid = action.payload;\r\n    },\r\n    setPhone: (state, action) => {\r\n      state.phone = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setFirstName,\r\n  setFirstNameValid,\r\n  setLastName,\r\n  setLastNameValid,\r\n  setEmail,\r\n  setEmailValid,\r\n  setPhone,\r\n} = customerInfoSlice.actions;\r\n\r\nexport default customerInfoSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const notificationsSlice = createSlice({\r\n  name: 'notifications',\r\n  initialState: {\r\n    simpleSuccessNotificationText: '',\r\n    isSimpleSuccessNotificationActive: false,\r\n    failedNotificationText: '',\r\n    isFailedNotificationActive: false,\r\n    isBookingCreationActive: false,\r\n    isCompanyCreationActive: false,\r\n  },\r\n  reducers: {\r\n    setSimpleSuccessNotificationText: (state, action) => {\r\n      state.simpleSuccessNotificationText = action.payload;\r\n    },\r\n    setIsSimpleSuccessNotificationActive: (state, action) => {\r\n      state.isSimpleSuccessNotificationActive = action.payload;\r\n    },\r\n    setFailedNotificationText: (state, action) => {\r\n      state.failedNotificationText = action.payload;\r\n    },\r\n    setIsFailedNotificationActive: (state, action) => {\r\n      state.isFailedNotificationActive = action.payload;\r\n    },\r\n    setIsBookingCreationActive: (state, action) => {\r\n      state.isBookingCreationActive = action.payload;\r\n    },\r\n    setIsCompanyCreationActive: (state, action) => {\r\n      state.isCompanyCreationActive = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setSimpleSuccessNotificationText,\r\n  setIsSimpleSuccessNotificationActive,\r\n  setFailedNotificationText,\r\n  setIsFailedNotificationActive,\r\n  setIsBookingCreationActive,\r\n  setIsCompanyCreationActive,\r\n} = notificationsSlice.actions;\r\n\r\nexport default notificationsSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport tokenReducer from './tokenSlice';\r\nimport customerInfoReducer from './customerInfoSlice';\r\nimport notificationsReducer from './notificationsSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    token: tokenReducer,\r\n    customerInfo: customerInfoReducer,\r\n    notifications: notificationsReducer,\r\n  },\r\n});\r\n","import axios from 'axios';\r\nimport store from 'reduxStore/store';\r\n\r\nimport { refreshCurrentToken, removeToken } from 'services/token-service';\r\nimport { usersEndPoint } from 'constants';\r\nimport { reservationSystemURL } from 'constants';\r\n\r\nconst instanse = axios.create({\r\n  baseURL: reservationSystemURL,\r\n  responseType: 'json',\r\n});\r\n\r\ninstanse.interceptors.request.use(\r\n  (config) => {\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\ninstanse.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    if (originalRequest.url === `${usersEndPoint}/refresh-token`) {\r\n      removeToken();\r\n      window.location.href = '#/SignIn';\r\n    }\r\n\r\n    if (error.response.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n      return refreshCurrentToken(store.getState().token.refreshToken).then(\r\n        () => {\r\n          originalRequest.headers.Authorization = `Bearer ${\r\n            store.getState().token.jwtToken\r\n          }`;\r\n          return axios(originalRequest);\r\n        }\r\n      );\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst bearerAuthorization = (jwtToken) => {\r\n  return {\r\n    headers: {\r\n      Authorization: `Bearer ${jwtToken}`,\r\n    },\r\n  };\r\n};\r\n\r\nexport { bearerAuthorization };\r\n\r\nexport default instanse;\r\n","import API from 'api';\r\nimport {\r\n  setJwtToken,\r\n  removeJwtToken,\r\n  setRefreshToken,\r\n  removeRefreshToken,\r\n} from 'reduxStore/tokenSlice';\r\nimport store from 'reduxStore/store';\r\nimport { usersEndPoint } from 'constants';\r\n\r\nconst getEmail = (token) => {\r\n  try {\r\n    return JSON.parse(atob(token.split('.')[1])).email;\r\n  } catch {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst getRole = (token) => {\r\n  try {\r\n    return JSON.parse(atob(token.split('.')[1])).role;\r\n  } catch {\r\n    return 'User';\r\n  }\r\n};\r\n\r\nconst getId = (token) => {\r\n  try {\r\n    return JSON.parse(atob(token.split('.')[1])).id;\r\n  } catch {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst getCompanyId = (token) => {\r\n  try {\r\n    return JSON.parse(atob(token.split('.')[1])).companyId;\r\n  } catch {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst setToken = async (token) => {\r\n  localStorage.setItem('jwtToken', token.jwtToken);\r\n  localStorage.setItem('refreshToken', token.refreshToken);\r\n  store.dispatch(setJwtToken(token.jwtToken));\r\n  store.dispatch(setRefreshToken(token.refreshToken));\r\n};\r\n\r\nconst removeToken = () => {\r\n  localStorage.removeItem('jwtToken');\r\n  localStorage.removeItem('refreshToken');\r\n  store.dispatch(removeJwtToken());\r\n  store.dispatch(removeRefreshToken());\r\n};\r\n\r\nconst refreshCurrentToken = async (refreshToken) => {\r\n  await API.post(`${usersEndPoint}/refresh-token`, {\r\n    refreshToken: refreshToken,\r\n  })\r\n    .then((response) => response.data)\r\n    .then(async (data) => {\r\n      await setToken(data);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport {\r\n  getEmail,\r\n  getRole,\r\n  getId,\r\n  getCompanyId,\r\n  refreshCurrentToken,\r\n  setToken,\r\n  removeToken,\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { removeJwtToken, removeRefreshToken } from 'reduxStore/tokenSlice';\r\nimport { getRole } from 'services/token-service';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    zIndex: 5,\r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  accountIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst ProfileDropdownMenu = ({ userEmail }) => {\r\n  const token = useSelector((state) => state.token);\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const anchorRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [role, setRole] = useState('');\r\n\r\n  useEffect(() => {\r\n    setRole(getRole(token.jwtToken));\r\n  }, [token.jwtToken]);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleLogout = (event) => {\r\n    localStorage.removeItem('jwtToken');\r\n    localStorage.removeItem('refreshToken');\r\n    dispatch(removeJwtToken());\r\n    dispatch(removeRefreshToken());\r\n    handleClose(event);\r\n    history.push('/');\r\n  };\r\n\r\n  const handleMyProfileCLick = (event) => {\r\n    handleClose(event);\r\n    history.push('/account');\r\n  };\r\n\r\n  const handleMyCompanyClick = (event) => {\r\n    handleClose(event);\r\n    history.push('/myCompany');\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  const prevOpen = useRef(open);\r\n\r\n  useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button\r\n        ref={anchorRef}\r\n        aria-controls={open ? 'menu-list-grow' : undefined}\r\n        aria-haspopup=\"true\"\r\n        onClick={handleToggle}\r\n      >\r\n        <AccountCircleIcon className={classes.accountIcon} />\r\n        {userEmail}\r\n      </Button>\r\n      <Popper\r\n        open={open}\r\n        anchorEl={anchorRef.current}\r\n        role={undefined}\r\n        transition\r\n        disablePortal\r\n      >\r\n        {({ TransitionProps, placement }) => (\r\n          <Grow\r\n            {...TransitionProps}\r\n            style={{\r\n              transformOrigin:\r\n                placement === 'bottom' ? 'center top' : 'center bottom',\r\n            }}\r\n          >\r\n            <Paper>\r\n              <ClickAwayListener onClickAway={handleClose}>\r\n                <MenuList\r\n                  autoFocusItem={open}\r\n                  id=\"menu-list-grow\"\r\n                  onKeyDown={handleListKeyDown}\r\n                >\r\n                  <MenuItem onClick={handleMyProfileCLick}>My profile</MenuItem>\r\n                  {role === 'Admin' ? (\r\n                    <MenuItem onClick={handleMyCompanyClick}>\r\n                      My company\r\n                    </MenuItem>\r\n                  ) : null}\r\n                  <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n                </MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Grow>\r\n        )}\r\n      </Popper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileDropdownMenu;\r\n","import Profile from './Profile';\nexport default Profile;\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport ProfileDropdownMenu from './ProfileDropdownMenu';\r\n\r\nconst Profile = ({ userEmail }) => {\r\n  return userEmail ? (\r\n    <ProfileDropdownMenu userEmail={userEmail} />\r\n  ) : (\r\n    <Button href=\"#/SignIn\" variant=\"contained\" color=\"primary\">\r\n      Sign in\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Toolbar, Link } from '@material-ui/core/';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { getEmail, getRole } from 'services/token-service';\r\nimport { drawerWidth } from 'constants';\r\n\r\nimport Profile from '../Profile';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    width: ({ role }) => {\r\n      if (role === 'AdminApp') {\r\n        return `calc(100% - ${drawerWidth}px)`;\r\n      } else {\r\n        return '100%';\r\n      }\r\n    },\r\n    position: 'fixed',\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const token = useSelector((state) => state.token);\r\n\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [role, setRole] = useState('User');\r\n\r\n  const classes = useStyles({ role });\r\n\r\n  useEffect(() => {\r\n    setUserEmail(getEmail(token.jwtToken));\r\n    setRole(getRole(token.jwtToken));\r\n  }, [token.jwtToken]);\r\n\r\n  return (\r\n    <AppBar color=\"default\" className={classes.appBar}>\r\n      <Toolbar>\r\n        <Link\r\n          variant=\"h5\"\r\n          href=\"#/\"\r\n          color=\"inherit\"\r\n          underline=\"none\"\r\n          className={classes.title}\r\n        >\r\n          Plane ticket reservation\r\n        </Link>\r\n        <Profile userEmail={userEmail} />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import Header from './Header';\nexport default Header;\n","import Footer from './Footer';\nexport default Footer;\n","import React from 'react';\n\nconst Footer = () => {\n  return <footer></footer>;\n};\n\nexport default Footer;\n","const checkEmail = (email) => {\n  let result = {\n    isNotValid: true,\n    errorMessage: '',\n  };\n  if (email === '') {\n    result.isNotValid = true;\n    result.errorMessage = 'Email is required.';\n    return result;\n  }\n  if (email === 'admin') {\n    result.isNotValid = false;\n    return result;\n  }\n  if (\n    /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/.test(\n      email\n    )\n  ) {\n    result.isNotValid = false;\n    return result;\n  }\n  result.isNotValid = true;\n  result.errorMessage = 'Incorrect entry.';\n  return result;\n};\n\nconst checkPassword = (password) => {\n  let result = {\n    isNotValid: true,\n    errorMessage: '',\n  };\n  if (password === '') {\n    result.isNotValid = true;\n    result.errorMessage = 'Password is required.';\n    return result;\n  }\n  if (/(?=.*[0-9])(?=.*[a-zA-Z]){6,}/.test(password)) {\n    result.isNotValid = false;\n    return result;\n  } else {\n    result.isNotValid = true;\n    result.errorMessage =\n      'At least 6 characters (both Latin letter and digit).';\n    return result;\n  }\n};\n\nconst checkRepeatedPassword = (repeatedPassword, password) => {\n  let result = {\n    isNotValid: true,\n    errorMessage: '',\n  };\n  if (repeatedPassword !== password) {\n    result.isNotValid = true;\n    result.errorMessage = 'Password do not match.';\n    return result;\n  }\n  result.isNotValid = false;\n  return result;\n};\n\nconst checkFirstName = (firstName) => {\n  let result = {\n    isNotValid: true,\n    errorMessage: '',\n  };\n  if (firstName === '') {\n    result.isNotValid = true;\n    result.errorMessage = 'First name is required.';\n    return result;\n  }\n  result.isNotValid = false;\n  return result;\n};\n\nconst checkLastName = (lastName) => {\n  let result = {\n    isNotValid: true,\n    errorMessage: '',\n  };\n  if (lastName === '') {\n    result.isNotValid = true;\n    result.errorMessage = 'Last name is required.';\n    return result;\n  }\n  result.isNotValid = false;\n  return result;\n};\n\nexport {\n  checkEmail,\n  checkPassword,\n  checkFirstName,\n  checkLastName,\n  checkRepeatedPassword,\n};\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport API from 'api';\r\nimport { usersEndPoint } from 'constants';\r\nimport { setToken } from 'services/token-service';\r\nimport { checkEmail, checkPassword } from 'services/authorizationValidation';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  errorSignIn: {\r\n    color: '#ff0000',\r\n  },\r\n}));\r\n\r\nconst SignIn = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isEmailNotValid, setEmailNotValid] = useState(false);\r\n  const [isPasswordNotValid, setPasswordNotValid] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [emailErrorMessage, setEmailErrorMessage] =\r\n    useState('Email is required.');\r\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState(\r\n    'Password is required.'\r\n  );\r\n\r\n  async function formSubmitButtonClickHandler(e) {\r\n    e.preventDefault();\r\n\r\n    let emailValidationResult = await checkEmail(email);\r\n    setEmailNotValid(emailValidationResult.isNotValid);\r\n    setEmailErrorMessage(emailValidationResult.errorMessage);\r\n\r\n    let passwordValidationResult = await checkPassword(password);\r\n    setPasswordNotValid(passwordValidationResult.isNotValid);\r\n    setPasswordErrorMessage(passwordValidationResult.errorMessage);\r\n\r\n    if (emailValidationResult.isNotValid || passwordValidationResult.isNotValid)\r\n      return;\r\n\r\n    await API.post(`${usersEndPoint}/authenticate`, {\r\n      email: email,\r\n      password: password,\r\n    })\r\n      .then((response) => {\r\n        setToken(response.data);\r\n        history.push('/');\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          console.log(error.response.data);\r\n          setErrorMessage(error.response.data.message);\r\n        }\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form}>\r\n          <TextField\r\n            error={isEmailNotValid}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            autoFocus\r\n            helperText={isEmailNotValid ? emailErrorMessage : ''}\r\n          />\r\n          <TextField\r\n            error={isPasswordNotValid}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            helperText={isPasswordNotValid ? passwordErrorMessage : ''}\r\n          />\r\n          <label className={classes.errorSignIn}>{errorMessage}</label>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={formSubmitButtonClickHandler}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link href=\"#/SignUp\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import SignIn from './SignIn';\nexport default SignIn;\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport API from 'api';\r\nimport { usersEndPoint } from 'constants';\r\nimport { setToken } from 'services/token-service';\r\nimport {\r\n  checkEmail,\r\n  checkPassword,\r\n  checkRepeatedPassword,\r\n  checkFirstName,\r\n  checkLastName,\r\n} from 'services/authorizationValidation';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst SignUp = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [repeatedPassword, setRepeatedPassword] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n\r\n  const [isEmailNotValid, setEmailNotValid] = useState(false);\r\n  const [isPasswordNotValid, setPasswordNotValid] = useState(false);\r\n  const [isRepeatedPasswordNotValid, setRepeatedPasswordNotValid] =\r\n    useState(false);\r\n  const [isFirstNameNotValid, setFirstNameNotValid] = useState(false);\r\n  const [isLastNameNotValid, setLastNameNotValid] = useState(false);\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [emailErrorMessage, setEmailErrorMessage] =\r\n    useState('Email is required.');\r\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState(\r\n    'Password is required.'\r\n  );\r\n  const [repeatedPasswordErrorMessage, setRepeatedPasswordErrorMessage] =\r\n    useState('Repeat password.');\r\n  const [firstNameErrorMessage, setFirstNameErrorMessage] = useState(\r\n    'First name is required.'\r\n  );\r\n  const [lastNameErrorMessage, setLastNameErrorMessage] = useState(\r\n    'Last name is required.'\r\n  );\r\n\r\n  async function formSubmitButtonClickHandler(e) {\r\n    e.preventDefault();\r\n\r\n    let emailValidationResult = await checkEmail(email);\r\n    setEmailNotValid(emailValidationResult.isNotValid);\r\n    setEmailErrorMessage(emailValidationResult.errorMessage);\r\n\r\n    let passwordValidationResult = await checkPassword(password);\r\n    setPasswordNotValid(passwordValidationResult.isNotValid);\r\n    setPasswordErrorMessage(passwordValidationResult.errorMessage);\r\n\r\n    let repeatedPasswordValidationResult = await checkRepeatedPassword(\r\n      repeatedPassword,\r\n      password\r\n    );\r\n    setRepeatedPasswordNotValid(repeatedPasswordValidationResult.isNotValid);\r\n    setRepeatedPasswordErrorMessage(\r\n      repeatedPasswordValidationResult.errorMessage\r\n    );\r\n\r\n    let firstNameValidationResult = await checkFirstName(firstName);\r\n    setFirstNameNotValid(firstNameValidationResult.isNotValid);\r\n    setFirstNameErrorMessage(firstNameValidationResult.errorMessage);\r\n\r\n    let lastNameValidationResult = await checkLastName(lastName);\r\n    setLastNameNotValid(lastNameValidationResult.isNotValid);\r\n    setLastNameErrorMessage(lastNameValidationResult.errorMessage);\r\n\r\n    if (\r\n      emailValidationResult.isNotValid ||\r\n      passwordValidationResult.isNotValid ||\r\n      repeatedPasswordValidationResult.isNotValid ||\r\n      firstNameValidationResult.isNotValid ||\r\n      lastNameValidationResult.isNotValid\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    API.post(`${usersEndPoint}/registration`, {\r\n      email: email,\r\n      password: password,\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n    })\r\n      .then((response) => {\r\n        setToken(response.data);\r\n        history.push('/Flights');\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          console.log(error.response.data);\r\n          setErrorMessage(error.response.data.message);\r\n        }\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form}>\r\n          <TextField\r\n            error={isEmailNotValid}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            autoFocus\r\n            helperText={isEmailNotValid ? emailErrorMessage : ''}\r\n          />\r\n          <TextField\r\n            error={isPasswordNotValid}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            helperText={isPasswordNotValid ? passwordErrorMessage : ''}\r\n          />\r\n          <TextField\r\n            error={isRepeatedPasswordNotValid}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"repeatedPassword\"\r\n            label=\"Repeat Password\"\r\n            type=\"password\"\r\n            id=\"repeatedPassword\"\r\n            autoComplete=\"repeated-password\"\r\n            onChange={(e) => setRepeatedPassword(e.target.value)}\r\n            helperText={\r\n              isRepeatedPasswordNotValid ? repeatedPasswordErrorMessage : ''\r\n            }\r\n          />\r\n          <TextField\r\n            error={isFirstNameNotValid}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            id=\"firstname\"\r\n            label=\"First Name\"\r\n            name=\"firstName\"\r\n            required\r\n            onChange={(e) => setFirstName(e.target.value)}\r\n            helperText={isFirstNameNotValid ? firstNameErrorMessage : ''}\r\n          />\r\n          <TextField\r\n            error={isLastNameNotValid}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            id=\"lastName\"\r\n            label=\"Last Name\"\r\n            name=\"lastName\"\r\n            required\r\n            onChange={(e) => setLastName(e.target.value)}\r\n            helperText={isLastNameNotValid ? lastNameErrorMessage : ''}\r\n          />\r\n          <label className={classes.errorSignIn}>{errorMessage}</label>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={formSubmitButtonClickHandler}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link href=\"/SignIn\" variant=\"body2\">\r\n                {'Have an account? Sign In'}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import SignUp from './SignUp';\nexport default SignUp;\n","import API, { bearerAuthorization } from 'api';\r\nimport store from 'reduxStore/store';\r\n\r\nimport {\r\n  elementsOnAdminTable,\r\n  usersEndPoint,\r\n  usersCountEndPoint,\r\n} from 'constants';\r\n\r\nconst postUser = async (user) => {\r\n  return await API.post(`${usersEndPoint}/registration`, {\r\n    email: user.email,\r\n    password: user.password,\r\n    firstName: user.firstName,\r\n    lastName: user.lastName,\r\n  })\r\n    .then((response) => [response.data, null])\r\n    .catch((error) => [null, error]);\r\n};\r\n\r\nconst getUserInfo = async () => {\r\n  let token = store.getState().token;\r\n\r\n  return await API.get(\r\n    `${usersEndPoint}/myself`,\r\n    bearerAuthorization(token.jwtToken)\r\n  )\r\n    .then((response) => response.data)\r\n    .then((data) => data)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nconst getFreeUsers = async () => {\r\n  let token = store.getState().token;\r\n\r\n  return await API.get(\r\n    `${usersEndPoint}/free`,\r\n    bearerAuthorization(token.jwtToken)\r\n  )\r\n    .then((response) => [response.data, null])\r\n    .catch((error) => [null, error]);\r\n};\r\n\r\nconst getManagers = async (companyId) => {\r\n  let token = store.getState().token;\r\n\r\n  return await API.get(\r\n    `${usersEndPoint}/managers?companyId=${companyId}`,\r\n    bearerAuthorization(token.jwtToken)\r\n  )\r\n    .then((response) => [response.data, null])\r\n    .catch((error) => [null, error]);\r\n};\r\n\r\nconst putUser = async (user) => {\r\n  let token = store.getState().token;\r\n  await API.put(\r\n    `${usersEndPoint}/${user.id}`,\r\n    user,\r\n    bearerAuthorization(token.jwtToken)\r\n  );\r\n};\r\n\r\nconst assignCompanyToUser = async (userId, companyId) => {\r\n  let token = store.getState().token;\r\n\r\n  return await API.post(\r\n    `${usersEndPoint}/${userId}/assignCompany?companyId=${companyId}`,\r\n    {},\r\n    bearerAuthorization(token.jwtToken)\r\n  )\r\n    .then((response) => [response.data, null])\r\n    .catch((error) => [null, error]);\r\n};\r\n\r\nconst getFilteredUsers = async (\r\n  offset,\r\n  emailFilter,\r\n  firstNameFilter,\r\n  lastNameFilter\r\n) => {\r\n  let token = store.getState().token;\r\n  let headers = bearerAuthorization(token.jwtToken).headers;\r\n\r\n  return await API.get(`${usersEndPoint}`, {\r\n    params: {\r\n      offset: offset,\r\n      limit: elementsOnAdminTable,\r\n      email: emailFilter,\r\n      firstName: firstNameFilter,\r\n      lastName: lastNameFilter,\r\n    },\r\n    headers: headers,\r\n  })\r\n    .then((response) => response.data)\r\n    .then((data) => data)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nconst getFilteredUsersCount = async (\r\n  emailFilter,\r\n  firstNameFilter,\r\n  lastNameFilter\r\n) => {\r\n  let token = store.getState().token;\r\n  let headers = bearerAuthorization(token.jwtToken).headers;\r\n\r\n  return await API.get(`${usersCountEndPoint}`, {\r\n    params: {\r\n      email: emailFilter,\r\n      firstName: firstNameFilter,\r\n      lastName: lastNameFilter,\r\n    },\r\n    headers: headers,\r\n  })\r\n    .then((response) => response.data)\r\n    .then((data) => data)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nexport {\r\n  postUser,\r\n  getUserInfo,\r\n  getFreeUsers,\r\n  getManagers,\r\n  putUser,\r\n  assignCompanyToUser,\r\n  getFilteredUsers,\r\n  getFilteredUsersCount,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Grid } from '@material-ui/core';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nimport { elementsOnAdminTable } from 'constants';\r\nimport { getUserInfo } from 'api/userRequests';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  largeAvatar: {\r\n    width: theme.spacing(20),\r\n    height: theme.spacing(20),\r\n  },\r\n  userEmail: {\r\n    alignSelf: 'flex-end',\r\n  },\r\n  userEmailText: {\r\n    fontSize: 'large',\r\n  },\r\n  userName: {\r\n    alignSelf: 'flex-start',\r\n  },\r\n  userNameText: {\r\n    fontSize: 'large',\r\n  },\r\n  bookingsTable: {\r\n    minHeight: 400,\r\n  },\r\n}));\r\n\r\nconst AccountPage = () => {\r\n  const classes = useStyles();\r\n\r\n  const [user, setUser] = useState();\r\n  const [rows, setRows] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const user = await getUserInfo();\r\n      setUser(user);\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let currentRows = user?.bookings.map((item) => {\r\n      return {\r\n        id: item.id,\r\n        flightNumber: item.flight.flightNumber,\r\n        airplaneModel: item.flight.airplane.model,\r\n        departureAirport: item.flight.from.name,\r\n        arrivalAirport: item.flight.to.name,\r\n        departureTime: item.flight.departureTime,\r\n        arrivalTime: item.flight.arrivalTime,\r\n      };\r\n    });\r\n\r\n    setRows(() => {\r\n      if (currentRows) {\r\n        return currentRows;\r\n      } else {\r\n        return [];\r\n      }\r\n    });\r\n  }, [user]);\r\n\r\n  const columns = [\r\n    { field: 'flightNumber', headerName: 'Flight Number', width: 150 },\r\n    { field: 'airplaneModel', headerName: 'Airplane model', width: 200 },\r\n    { field: 'departureAirport', headerName: 'Departure airport', width: 200 },\r\n    { field: 'arrivalAirport', headerName: 'Arrival airport', width: 200 },\r\n    { field: 'departureTime', headerName: 'Departure time', width: 200 },\r\n    { field: 'arrivalTime', headerName: 'Arrival time', width: 200 },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Typography gutterBottom variant=\"h2\">\r\n        My profile\r\n      </Typography>\r\n      <div>\r\n        <Grid container justify=\"center\">\r\n          <Grid item lg={2}>\r\n            <Avatar alt={user?.lastName} className={classes.largeAvatar} />\r\n          </Grid>\r\n          <Grid item lg={6} container>\r\n            <Grid item lg={12} className={classes.userEmail}>\r\n              <Typography variant=\"overline\" className={classes.userEmailText}>\r\n                {user?.email}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item lg={12} className={classes.userName}>\r\n              <Typography variant=\"overline\" className={classes.userNameText}>\r\n                {user?.firstName} {user?.lastName}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <div>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          My bookings\r\n        </Typography>\r\n        <DataGrid\r\n          className={classes.bookingsTable}\r\n          columns={columns}\r\n          rows={rows}\r\n          pageSize={elementsOnAdminTable}\r\n          checkboxSelection={false}\r\n          disableColumnMenu\r\n          disableSelectionOnClick\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AccountPage;\r\n","import AccountPage from './AccountPage';\r\nexport default AccountPage;\r\n","import API, { bearerAuthorization } from 'api';\r\nimport store from 'reduxStore/store';\r\n\r\nimport {\r\n  elementsOnAdminTable,\r\n  allCompaniesEndPoint,\r\n  companiesEndPoint,\r\n  allCompaniesCountEndPoint,\r\n} from 'constants';\r\n\r\nconst getAllCompanies = async () => {\r\n  return await API.get(`${allCompaniesEndPoint}`)\r\n    .then((response) => response.data)\r\n    .then((data) => data)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nconst getFilteredCompanies = async (\r\n  offset,\r\n  companyNameFilter,\r\n  countryNameFilter\r\n) => {\r\n  return await API.get(`${companiesEndPoint}`, {\r\n    params: {\r\n      offset: offset,\r\n      limit: elementsOnAdminTable,\r\n      companyName: companyNameFilter,\r\n      countryName: countryNameFilter,\r\n    },\r\n  })\r\n    .then((response) => response.data)\r\n    .then((data) => data)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nconst getCompaniesCount = async (companyNameFilter, countryNameFilter) => {\r\n  return await API.get(`${allCompaniesCountEndPoint}`, {\r\n    params: {\r\n      companyName: companyNameFilter,\r\n      countryName: countryNameFilter,\r\n    },\r\n  })\r\n    .then((response) => response.data)\r\n    .then((data) => data)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nconst getCompanies = async () => {\r\n  return await API.get(`${companiesEndPoint}/all`)\r\n    .then((response) => [response.data, null])\r\n    .catch((error) => [null, error]);\r\n};\r\n\r\nconst getCompany = async (companyId) => {\r\n  let token = store.getState().token;\r\n\r\n  return await API.get(\r\n    `${companiesEndPoint}/${companyId}`,\r\n    bearerAuthorization(token.jwtToken)\r\n  )\r\n    .then((response) => [response.data, null])\r\n    .catch((error) => [null, error]);\r\n};\r\n\r\nconst postCompany = async (company) => {\r\n  let token = store.getState().token;\r\n\r\n  return await API.post(\r\n    `${companiesEndPoint}`,\r\n    {\r\n      name: company.name,\r\n      countryId: company.countryId,\r\n    },\r\n    bearerAuthorization(token.jwtToken)\r\n  )\r\n    .then((response) => [response.data, null])\r\n    .catch((error) => [null, error]);\r\n};\r\n\r\nconst putCompany = async (company) => {\r\n  let token = store.getState().token;\r\n\r\n  return await API.put(\r\n    `${companiesEndPoint}/${company.id}`,\r\n    {\r\n      name: company.name,\r\n      countryId: company.countryId,\r\n    },\r\n    bearerAuthorization(token.jwtToken)\r\n  )\r\n    .then((response) => [response.data, null])\r\n    .catch((error) => [null, error]);\r\n};\r\n\r\nconst deleteCompany = async (companyId) => {\r\n  let token = store.getState().token;\r\n\r\n  return await API.delete(\r\n    `${companiesEndPoint}/${companyId}`,\r\n    bearerAuthorization(token.jwtToken)\r\n  )\r\n    .then((response) => [response.data, null])\r\n    .catch((error) => [null, error]);\r\n};\r\n\r\nexport {\r\n  getAllCompanies,\r\n  getFilteredCompanies,\r\n  getCompaniesCount,\r\n  getCompanies,\r\n  getCompany,\r\n  postCompany,\r\n  putCompany,\r\n  deleteCompany,\r\n};\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport { elementsOnAdminTable } from 'constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tableFooter: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  addButton: {\r\n    height: theme.spacing(6),\r\n    width: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nconst CustomFooter = ({ onAddClick, rowCount, page, onPageChange }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.tableFooter}>\r\n      <Grid container justify=\"space-between\">\r\n        <Grid item>\r\n          <IconButton size=\"small\" color=\"primary\" onClick={() => onAddClick()}>\r\n            <AddCircleIcon className={classes.addButton} />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={rowCount}\r\n            page={page}\r\n            rowsPerPage={elementsOnAdminTable}\r\n            rowsPerPageOptions={[elementsOnAdminTable]}\r\n            onChangePage={(event, value) => onPageChange(event, value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomFooter;\r\n","import React from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nimport { elementsOnAdminTable } from 'constants';\r\nimport CustomFooter from './CustomFooter';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tableHeader: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  grid: {\r\n    minHeight: 400,\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst Table = ({ page, rows, columns, onPageChange, rowCount, onAddClick }) => {\r\n  const classes = useStyles();\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    onPageChange(newPage);\r\n  };\r\n\r\n  return (\r\n    <DataGrid\r\n      rows={rows}\r\n      columns={columns}\r\n      rowCount={rowCount}\r\n      pageSize={elementsOnAdminTable}\r\n      checkboxSelection={false}\r\n      disableColumnMenu={true}\r\n      disableSelectionOnClick={true}\r\n      className={classes.grid}\r\n      components={{\r\n        Footer: () => {\r\n          return (\r\n            <CustomFooter\r\n              onAddClick={onAddClick}\r\n              rowCount={rowCount}\r\n              page={page}\r\n              onPageChange={handlePageChange}\r\n            />\r\n          );\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import Table from './Table';\nexport default Table;\n","import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  field: {\r\n    width: 200,\r\n  },\r\n  searchButton: {\r\n    height: 40,\r\n  },\r\n}));\r\n\r\nconst Filter = ({\r\n  fields,\r\n  fieldsOptions,\r\n  onFilterConfirmed,\r\n  onSearchClick,\r\n  disableOptions = false,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [selectedValues, setSelectedValues] = useState(fields.map(() => ''));\r\n\r\n  useEffect(() => {\r\n    onFilterConfirmed(selectedValues);\r\n  }, [selectedValues]);\r\n\r\n  const searchClickHandle = () => {\r\n    onSearchClick(selectedValues);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1} alignItems=\"center\" justify=\"center\">\r\n        {fields.map((field, key) => {\r\n          return (\r\n            <Grid item key={key}>\r\n              {disableOptions ? (\r\n                <TextField\r\n                  label={field}\r\n                  variant=\"outlined\"\r\n                  onChange={(event) => {\r\n                    setSelectedValues([\r\n                      ...selectedValues.slice(0, key),\r\n                      event.target.value,\r\n                      ...selectedValues.slice(key + 1),\r\n                    ]);\r\n                  }}\r\n                />\r\n              ) : (\r\n                <Autocomplete\r\n                  freeSolo\r\n                  id={`filter${key}`}\r\n                  options={fieldsOptions[key]}\r\n                  getOptionLabel={(option) => option.name || option}\r\n                  className={classes.field}\r\n                  inputValue={selectedValues[key]}\r\n                  onInputChange={(event, newInputValue) => {\r\n                    setSelectedValues([\r\n                      ...selectedValues.slice(0, key),\r\n                      newInputValue,\r\n                      ...selectedValues.slice(key + 1),\r\n                    ]);\r\n                  }}\r\n                  renderInput={(params) => (\r\n                    <TextField {...params} label={field} variant=\"outlined\" />\r\n                  )}\r\n                />\r\n              )}\r\n            </Grid>\r\n          );\r\n        })}\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.searchButton}\r\n          onClick={searchClickHandle}\r\n        >\r\n          Search\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import Filter from './Filter';\r\nexport default Filter;\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Draggable from 'react-draggable';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n}));\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nconst CustomDialog = ({\r\n  isOpened,\r\n  closeDialog,\r\n  DialogContent,\r\n  title,\r\n  maxWidth = 'sm',\r\n  fullWidth = false,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={fullWidth}\r\n      maxWidth={maxWidth}\r\n      open={isOpened}\r\n      onClose={() => closeDialog()}\r\n      PaperComponent={PaperComponent}\r\n      aria-labelledby=\"draggable-dialog-title\"\r\n    >\r\n      <MuiDialogTitle>\r\n        {title}\r\n        <IconButton\r\n          className={classes.closeButton}\r\n          onClick={() => closeDialog()}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </MuiDialogTitle>\r\n      {DialogContent}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CustomDialog;\r\n","import CustomDialog from './CustomDialog';\nexport default CustomDialog;\n","import API from 'api';\r\n\r\nimport { countriesEndPoint, allCtitesEndPoint } from 'constants';\r\n\r\nconst getCountries = async () => {\r\n  return await API.get(`${countriesEndPoint}`)\r\n    .then((response) => [response.data, null])\r\n    .catch((error) => [null, error]);\r\n};\r\n\r\nconst getCities = async () => {\r\n  return await API.get(`${allCtitesEndPoint}`)\r\n    .then((response) => [response.data, null])\r\n    .catch((error) => [null, error]);\r\n};\r\n\r\nexport { getCountries, getCities };\r\n","import API, { bearerAuthorization } from 'api';\r\nimport store from 'reduxStore/store';\r\n\r\nimport {\r\n  elementsOnAdminTable,\r\n  allAirportsEndPoint,\r\n  airportsEndPoint,\r\n  airportsCountEndPoint,\r\n} from 'constants';\r\n\r\nconst getAllAirports = async () => {\r\n  return await API.get(`${allAirportsEndPoint}`)\r\n    .then((response) => response.data)\r\n    .then((airports) => airports)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nconst getFilteredAirports = async (offset, filters) => {\r\n  return await API.get(`${airportsEndPoint}`, {\r\n    params: {\r\n      companyName: filters.company,\r\n      airportName: filters.airport,\r\n      cityName: filters.city,\r\n      countryName: filters.country,\r\n      offset: offset,\r\n      limit: elementsOnAdminTable,\r\n    },\r\n  })\r\n    .then((response) => [response.data, null])\r\n    .catch((error) => [null, error]);\r\n};\r\n\r\nconst getFilteredAirportsCount = async (filters) => {\r\n  return await API.get(`${airportsCountEndPoint}`, {\r\n    params: {\r\n      companyName: filters.company,\r\n      airportName: filters.airport,\r\n      cityName: filters.city,\r\n      countryName: filters.country,\r\n    },\r\n  })\r\n    .then((response) => [response.data, null])\r\n    .catch((error) => [null, error]);\r\n};\r\n\r\nconst postAirport = async (airport) => {\r\n  let token = store.getState().token;\r\n\r\n  return await API.post(\r\n    `${airportsEndPoint}`,\r\n    {\r\n      name: airport.name,\r\n      cityId: airport.cityId,\r\n      companyId: airport.companyId,\r\n    },\r\n    bearerAuthorization(token.jwtToken)\r\n  )\r\n    .then((response) => [response.data, null])\r\n    .catch((error) => [null, error]);\r\n};\r\n\r\nconst putAirport = async (airport) => {\r\n  let token = store.getState().token;\r\n\r\n  return await API.put(\r\n    `${airportsEndPoint}/${airport.id}`,\r\n    {\r\n      name: airport.name,\r\n      cityId: airport.cityId,\r\n      companyId: airport.companyId,\r\n    },\r\n    bearerAuthorization(token.jwtToken)\r\n  )\r\n    .then((response) => [response.data, null])\r\n    .catch((error) => [null, error]);\r\n};\r\n\r\nexport {\r\n  getAllAirports,\r\n  getFilteredAirports,\r\n  getFilteredAirportsCount,\r\n  postAirport,\r\n  putAirport,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {\r\n  setIsSimpleSuccessNotificationActive,\r\n  setSimpleSuccessNotificationText,\r\n} from 'reduxStore/notificationsSlice';\r\nimport { getCities } from 'api/locationRequests';\r\nimport { postAirport } from 'api/airportRequests';\r\nimport { getCompanies } from 'api/companyRequests';\r\n\r\nconst AirportCreateDialogContent = ({ company, closeDialog }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [cities, setCities] = useState([]);\r\n  const [companies, setCompanies] = useState([]);\r\n\r\n  const [airportName, setAirportName] = useState('');\r\n  const [airportCity, setAirportCity] = useState(null);\r\n  const [airportCompany, setAirportCompany] = useState(null);\r\n\r\n  const [isAirportNameValid, setIsAirportNameValid] = useState(true);\r\n  const [isAirportCityValid, setIsAirportCityValid] = useState(true);\r\n\r\n  const [isRequestError, setIsRequestError] = useState(false);\r\n  const [requestErrorMessage, setRequestErrorMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const [citiesResponse, citiesError] = await getCities();\r\n      if (citiesResponse) setCities(citiesResponse);\r\n\r\n      const [companiesResponse, companiesError] = await getCompanies();\r\n      if (companiesResponse) setCompanies(companiesResponse);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleClearClick = () => {\r\n    setAirportName('');\r\n    setAirportCity(null);\r\n    setAirportCompany(null);\r\n  };\r\n\r\n  const handleCreateClick = async () => {\r\n    let isValid = true;\r\n    setIsRequestError(false);\r\n    setRequestErrorMessage('');\r\n\r\n    if (!airportName) {\r\n      setIsAirportNameValid(false);\r\n      isValid = false;\r\n    } else setIsAirportNameValid(true);\r\n    if (!airportCity) {\r\n      setIsAirportCityValid(false);\r\n      isValid = false;\r\n    } else setIsAirportCityValid(true);\r\n\r\n    if (isValid) {\r\n      const [createdAirport, airportError] = await postAirport({\r\n        name: airportName,\r\n        cityId: airportCity.id,\r\n        companyId: company?.id || airportCompany.id,\r\n      });\r\n\r\n      if (airportError) {\r\n        setIsRequestError(true);\r\n        setRequestErrorMessage(airportError.response?.data?.message);\r\n      } else {\r\n        dispatch(setIsSimpleSuccessNotificationActive(true));\r\n        dispatch(\r\n          setSimpleSuccessNotificationText(\r\n            'The airport was registered successfully!'\r\n          )\r\n        );\r\n        closeDialog();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Airport name\"\r\n              variant=\"outlined\"\r\n              value={airportName}\r\n              onChange={(event) => setAirportName(event.target.value)}\r\n              error={!isAirportNameValid}\r\n              helperText={!isAirportNameValid && 'This field is required'}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              value={airportCity}\r\n              onChange={(event, newValue) => setAirportCity(newValue)}\r\n              options={cities}\r\n              getOptionLabel={(option) => option.name}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"City\"\r\n                  variant=\"outlined\"\r\n                  error={!isAirportCityValid}\r\n                  helperText={!isAirportCityValid && 'This field is required'}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {company ? (\r\n              <TextField\r\n                fullWidth\r\n                value={company.name}\r\n                disabled\r\n                label=\"Company\"\r\n                variant=\"outlined\"\r\n              />\r\n            ) : (\r\n              <Autocomplete\r\n                value={airportCompany}\r\n                onChange={(event, newValue) => setAirportCompany(newValue)}\r\n                options={companies}\r\n                getOptionLabel={(option) => option.name}\r\n                renderInput={(params) => (\r\n                  <TextField {...params} label=\"Company\" variant=\"outlined\" />\r\n                )}\r\n              />\r\n            )}\r\n          </Grid>\r\n          {isRequestError && (\r\n            <Grid item>\r\n              <Typography color=\"error\">{requestErrorMessage}</Typography>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"outlined\" onClick={handleClearClick}>\r\n          Clear\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleCreateClick}>\r\n          Create\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AirportCreateDialogContent;\r\n","import React from 'react';\r\n\r\nimport CustomDialog from '../../CustomDialog';\r\nimport AirportCreateDialogContent from './AirportCreateDialogContent';\r\n\r\nconst AirportCreateDialog = ({ company, isOpened, closeDialog }) => {\r\n  return (\r\n    <CustomDialog\r\n      title=\"Airport registration\"\r\n      isOpened={isOpened}\r\n      closeDialog={closeDialog}\r\n      DialogContent={\r\n        <AirportCreateDialogContent\r\n          company={company}\r\n          closeDialog={closeDialog}\r\n        />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default AirportCreateDialog;\r\n","import AirportCreateDialog from './AirportCreateDialog';\r\nexport default AirportCreateDialog;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {\r\n  setIsSimpleSuccessNotificationActive,\r\n  setSimpleSuccessNotificationText,\r\n} from 'reduxStore/notificationsSlice';\r\nimport { getCities } from 'api/locationRequests';\r\nimport { putAirport } from 'api/airportRequests';\r\nimport { getCompanies } from 'api/companyRequests';\r\n\r\nconst AirportEditDialogContent = ({ airport, company, closeDialog }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [cities, setCities] = useState([]);\r\n  const [companies, setCompanies] = useState([]);\r\n\r\n  const [airportName, setAirportName] = useState(airport.name);\r\n  const [airportCity, setAirportCity] = useState(airport?.city);\r\n  const [airportCompany, setAirportCompany] = useState(airport?.company);\r\n\r\n  const [isAirportNameValid, setIsAirportNameValid] = useState(true);\r\n  const [isAirportCityValid, setIsAirportCityValid] = useState(true);\r\n\r\n  const [isRequestError, setIsRequestError] = useState(false);\r\n  const [requestErrorMessage, setRequestErrorMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const [citiesResponse] = await getCities();\r\n      if (citiesResponse) setCities(citiesResponse);\r\n\r\n      if (!company) {\r\n        const [companiesResponse] = await getCompanies();\r\n        if (companiesResponse) setCompanies(companiesResponse);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [company]);\r\n\r\n  const handleResetClick = () => {\r\n    setAirportName(airport.name);\r\n    setAirportCity(airport?.city);\r\n    setAirportCompany(airport?.company);\r\n    setIsAirportNameValid(true);\r\n    setIsAirportCityValid(true);\r\n  };\r\n\r\n  const handleSaveClick = async () => {\r\n    let isValid = true;\r\n    setIsRequestError(false);\r\n    setRequestErrorMessage('');\r\n\r\n    if (\r\n      airportName !== airport?.name ||\r\n      airportCity?.id !== airport?.city?.id ||\r\n      airportCompany?.id !== airport?.company?.id\r\n    ) {\r\n      if (!airportName) {\r\n        setIsAirportNameValid(false);\r\n        isValid = false;\r\n      } else setIsAirportNameValid(true);\r\n      if (!airportCity) {\r\n        setIsAirportCityValid(false);\r\n        isValid = false;\r\n      } else setIsAirportCityValid(true);\r\n\r\n      if (isValid) {\r\n        const [updatedAirport, airportError] = await putAirport({\r\n          id: airport.id,\r\n          name: airportName,\r\n          cityId: airportCity.id,\r\n          companyId: company?.id || airportCompany.id,\r\n        });\r\n\r\n        if (airportError) {\r\n          setIsRequestError(true);\r\n          setRequestErrorMessage(airportError.response?.data?.message);\r\n        } else {\r\n          dispatch(setIsSimpleSuccessNotificationActive(true));\r\n          dispatch(\r\n            setSimpleSuccessNotificationText(\r\n              'The airport was edited successfully!'\r\n            )\r\n          );\r\n          closeDialog();\r\n        }\r\n      }\r\n    } else closeDialog();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Airport name\"\r\n              variant=\"outlined\"\r\n              value={airportName}\r\n              onChange={(event) => setAirportName(event.target.value)}\r\n              error={!isAirportNameValid}\r\n              helperText={!isAirportNameValid && 'This field is required'}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              value={airportCity}\r\n              onChange={(event, newValue) => setAirportCity(newValue)}\r\n              options={cities}\r\n              getOptionLabel={(option) => option.name}\r\n              getOptionSelected={(option) => option.id === airportCity.id}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"City\"\r\n                  variant=\"outlined\"\r\n                  error={!isAirportCityValid}\r\n                  helperText={!isAirportCityValid && 'This field is required'}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {company ? (\r\n              <TextField\r\n                fullWidth\r\n                value={company.name}\r\n                disabled\r\n                label=\"Company\"\r\n                variant=\"outlined\"\r\n              />\r\n            ) : (\r\n              <Autocomplete\r\n                value={airportCompany}\r\n                onChange={(event, newValue) => setAirportCompany(newValue)}\r\n                options={companies}\r\n                getOptionLabel={(option) => option.name}\r\n                getOptionSelected={(option) => option.id === airportCompany.id}\r\n                renderInput={(params) => (\r\n                  <TextField {...params} label=\"Company\" variant=\"outlined\" />\r\n                )}\r\n              />\r\n            )}\r\n          </Grid>\r\n          {isRequestError && (\r\n            <Grid item>\r\n              <Typography color=\"error\">{requestErrorMessage}</Typography>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"outlined\" onClick={handleResetClick}>\r\n          Reset\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSaveClick}>\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AirportEditDialogContent;\r\n","import React from 'react';\r\n\r\nimport CustomDialog from '../../CustomDialog';\r\nimport AirportEditDialogContent from './AirportEditDialogContent';\r\n\r\nconst AirportEditDialog = ({ airport, company, isOpened, closeDialog }) => {\r\n  return (\r\n    <CustomDialog\r\n      title=\"Edit airport\"\r\n      isOpened={isOpened}\r\n      closeDialog={closeDialog}\r\n      DialogContent={\r\n        <AirportEditDialogContent\r\n          airport={airport}\r\n          company={company}\r\n          closeDialog={closeDialog}\r\n        />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default AirportEditDialog;\r\n","import AirportEditDialog from './AirportEditDialog';\r\nexport default AirportEditDialog;\r\n","import API from 'api';\r\n\r\nimport {\r\n  hintsAmount,\r\n  userHintsEndPoint,\r\n  flightHintsEndPoint,\r\n  companyHintsEndPoint,\r\n  airplaneHintsEndPoint,\r\n  airportHintsEndPoint,\r\n} from 'constants/searchHintsUrl';\r\n\r\nconst getUserSearchHints = async (filter) => {\r\n  return await API.get(`${userHintsEndPoint}`, {\r\n    params: {\r\n      email: filter.email,\r\n      firstName: filter.firstName,\r\n      lastName: filter.lastName,\r\n      limit: hintsAmount,\r\n    },\r\n  }).then((response) => response.data);\r\n};\r\n\r\nconst getFlightSearchHints = async (filter) => {\r\n  return await API.get(`${flightHintsEndPoint}`, {\r\n    params: {\r\n      departureCity: filter.departureCity,\r\n      arrivalCity: filter.arrivalCity,\r\n      departureTime: null,\r\n      arrivalTime: null,\r\n    },\r\n  }).then((response) => response.data);\r\n};\r\n\r\nconst getCompanySearchHints = async (filter) => {\r\n  return await API.get(`${companyHintsEndPoint}`, {\r\n    params: {\r\n      companyName: filter.companyName,\r\n      countryName: filter.countryName,\r\n    },\r\n  }).then((response) => response.data);\r\n};\r\n\r\nconst getAirplaneSearchHints = async (filter) => {\r\n  return await API.get(`${airplaneHintsEndPoint}`, {\r\n    params: {\r\n      airplaneType: filter.airplaneType,\r\n      companyName: filter.companyName,\r\n      model: filter.model,\r\n    },\r\n  }).then((response) => response.data);\r\n};\r\n\r\nconst getAirportSearchHints = async (filter) => {\r\n  return await API.get(`${airportHintsEndPoint}`, {\r\n    params: {\r\n      companyName: filter.companyName,\r\n      airportName: filter.airportName,\r\n      cityName: filter.cityName,\r\n      countryName: filter.countryName,\r\n    },\r\n  }).then((response) => response.data);\r\n};\r\n\r\nexport {\r\n  getUserSearchHints,\r\n  getFlightSearchHints,\r\n  getCompanySearchHints,\r\n  getAirplaneSearchHints,\r\n  getAirportSearchHints,\r\n};\r\n","export const hintsAmount = 6;\r\nexport const userHintsEndPoint = 'api/users/hints';\r\nexport const flightHintsEndPoint = 'api/flights/hints';\r\nexport const companyHintsEndPoint = 'api/companies/hints';\r\nexport const airplaneHintsEndPoint = 'api/airplanes/hints';\r\nexport const airportHintsEndPoint = 'api/airports/hints';\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport Table from 'components/shared/Table';\r\nimport Filter from 'shared/Filter';\r\nimport AirportCreateDialog from 'components/shared/Dialogs/AirportCreateDialog';\r\nimport AirportEditDialog from 'components/shared/Dialogs/AirportEditDialog';\r\nimport { elementsOnAdminTable } from 'constants';\r\nimport {\r\n  getFilteredAirports,\r\n  getFilteredAirportsCount,\r\n} from 'api/airportRequests';\r\nimport { getAirportSearchHints } from 'api/searchHintsRequests';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  airportsTable: {\r\n    minHeight: 400,\r\n  },\r\n  airportsFilter: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst CompanyAirportsTable = ({ company }) => {\r\n  const classes = useStyles();\r\n  let timer = null;\r\n\r\n  const [airportNameHints, setAirportNameHints] = useState([]);\r\n  const [cityNameHints, setCityNameHints] = useState([]);\r\n  const [countryNameHints, setCountryNameHints] = useState([]);\r\n\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [airportFilter, setAirportFilter] = useState('');\r\n  const [cityFilter, setCityFilter] = useState('');\r\n  const [countryFilter, setCountryFilter] = useState('');\r\n\r\n  const [airports, setAirports] = useState([]);\r\n  const [airportsCount, setAirportsCount] = useState(0);\r\n\r\n  const [isAirportCreateDialogOpened, setIsAirportCreateDialogOpened] =\r\n    useState(false);\r\n\r\n  const [selectedAirport, setSelectedAirport] = useState(null);\r\n  const [isAirportEditDialogOpened, setIsAirportEditDialogOpened] =\r\n    useState(false);\r\n\r\n  const columns = [\r\n    { field: 'name', headerName: 'Airport name', width: 200 },\r\n    { field: 'cityName', headerName: 'City', width: 200 },\r\n    { field: 'country', headerName: 'Country', width: 200 },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 200,\r\n      renderCell: (row) => {\r\n        return (\r\n          <>\r\n            <Tooltip title=\"Edit\">\r\n              <IconButton\r\n                color=\"primary\"\r\n                onClick={() => handleEditClick(row.row)}\r\n              >\r\n                <EditIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const rows = airports.map((value) => ({\r\n    id: value.id,\r\n    name: value.name,\r\n    cityName: value.city.name,\r\n    country: value.city.country.name,\r\n    city: value.city,\r\n    company: value.company,\r\n  }));\r\n\r\n  const fetchAirports = async () => {\r\n    if (company?.name) {\r\n      const filters = {\r\n        company: company.name,\r\n        airport: airportFilter,\r\n        city: cityFilter,\r\n        country: countryFilter,\r\n      };\r\n      const [airportsResponse, airportsError] = await getFilteredAirports(\r\n        offset,\r\n        filters\r\n      );\r\n      if (airportsResponse) setAirports(airportsResponse);\r\n      if (airportsError) {\r\n        // Handle error.\r\n      }\r\n      const [airportsCountResponse, airportsCountError] =\r\n        await getFilteredAirportsCount(filters);\r\n      if (airportsCountError) {\r\n        // Handle error.\r\n      } else {\r\n        setAirportsCount(airportsCountResponse);\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchHints = async () => {\r\n    const hints = await getAirportSearchHints({\r\n      companyName: company?.name,\r\n      airportName: airportFilter,\r\n      cityName: cityFilter,\r\n      countryName: countryFilter,\r\n    });\r\n    const airportNames = hints.map((value) => value.airportName);\r\n    const cityNames = hints.map((value) => value.cityName);\r\n    const countryNames = hints.map((value) => value.countryName);\r\n    setAirportNameHints([...new Set(airportNames)]);\r\n    setCityNameHints([...new Set(cityNames)]);\r\n    setCountryNameHints([...new Set(countryNames)]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAirports();\r\n  }, [\r\n    company,\r\n    page,\r\n    offset,\r\n    airportFilter,\r\n    cityFilter,\r\n    countryFilter,\r\n    isAirportCreateDialogOpened,\r\n    isAirportEditDialogOpened,\r\n  ]);\r\n\r\n  const onFilterConfirmed = (values) => {\r\n    clearTimeout(timer);\r\n    if (!values[0] && !values[1] && !values[2]) {\r\n      setAirportNameHints([]);\r\n      setCityNameHints([]);\r\n      setCountryNameHints([]);\r\n    }\r\n    if (values[0] || values[1] || values[2]) {\r\n      timer = setTimeout(() => fetchHints(), 500);\r\n    }\r\n  };\r\n\r\n  const onSearchClick = (values) => {\r\n    setAirportFilter(values[0]);\r\n    setCityFilter(values[1]);\r\n    setCountryFilter(values[2]);\r\n    setPage(0);\r\n    setOffset(0);\r\n  };\r\n\r\n  const onPageChange = (page) => {\r\n    setPage(page);\r\n    setOffset(page * elementsOnAdminTable);\r\n  };\r\n\r\n  const handleEditClick = (airport) => {\r\n    setSelectedAirport(airport);\r\n    setIsAirportEditDialogOpened(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.airportsFilter}>\r\n        <Filter\r\n          fields={['Airport name', 'City', 'Country']}\r\n          fieldsOptions={[airportNameHints, cityNameHints, countryNameHints]}\r\n          onFilterConfirmed={onFilterConfirmed}\r\n          onSearchClick={onSearchClick}\r\n        />\r\n      </div>\r\n      <AirportCreateDialog\r\n        company={company}\r\n        isOpened={isAirportCreateDialogOpened}\r\n        closeDialog={() => setIsAirportCreateDialogOpened(false)}\r\n      />\r\n      <AirportEditDialog\r\n        airport={selectedAirport}\r\n        company={company}\r\n        isOpened={isAirportEditDialogOpened}\r\n        closeDialog={() => setIsAirportEditDialogOpened(false)}\r\n      />\r\n      <Table\r\n        page={page}\r\n        rows={rows}\r\n        columns={columns}\r\n        onPageChange={onPageChange}\r\n        rowCount={airportsCount}\r\n        onAddClick={() => setIsAirportCreateDialogOpened(true)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CompanyAirportsTable;\r\n","import API, { bearerAuthorization } from 'api';\r\nimport store from 'reduxStore/store';\r\n\r\nimport { pricesEndPoint } from 'constants';\r\n\r\nconst getAirplanePlacePrices = async (airplaneId) => {\r\n  return await API.get(`${pricesEndPoint}/${airplaneId}`)\r\n    .then((response) => response.data)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nconst putAirplanePrices = async (prices) => {\r\n  let token = store.getState().token;\r\n\r\n  await API.put(\r\n    `${pricesEndPoint}`,\r\n    prices,\r\n    bearerAuthorization(token.jwtToken)\r\n  ).catch((error) => console.log(error));\r\n};\r\n\r\nexport { getAirplanePlacePrices, putAirplanePrices };\r\n","import React from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nimport { elementsOnAdminTable } from 'constants';\r\n\r\nconst PlacesPriceEditableTable = ({ prices, handleCellEdit }) => {\r\n  const columns = [\r\n    { field: 'placeType', headerName: 'Place type', flex: 1 },\r\n    {\r\n      field: 'ticketPrice',\r\n      headerName: 'Price',\r\n      flex: 1,\r\n      type: 'number',\r\n      editable: true,\r\n      valueFormatter: (params) => {\r\n        return `${params.value} $`;\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div style={{ height: 400, width: '100%' }}>\r\n      <DataGrid\r\n        rows={prices}\r\n        columns={columns}\r\n        pageSize={elementsOnAdminTable}\r\n        disableColumnMenu\r\n        onEditCellChange={(row) => handleCellEdit(row)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlacesPriceEditableTable;\r\n","import PlacesPriceEditableTable from './PlacesPriceEditableTable';\r\nexport default PlacesPriceEditableTable;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {\r\n  setIsSimpleSuccessNotificationActive,\r\n  setSimpleSuccessNotificationText,\r\n} from 'reduxStore/notificationsSlice';\r\nimport { getAirplanePlacePrices, putAirplanePrices } from 'api/priceRequests';\r\nimport PlacesPriceEditableTable from 'components/shared/PlacesPriceEditableTable';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pricesDialogContent: {\r\n    minWidth: 400,\r\n  },\r\n  errorMessage: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst PlacesPriceDialogContent = ({ airplane, closeDialog }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [initialPrices, setInitialPrices] = useState([]);\r\n  const [prices, setPrices] = useState([]);\r\n\r\n  const [isPricesValid, setIsPricesValid] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const newPrices = await getAirplanePlacePrices(airplane?.id);\r\n\r\n      setInitialPrices(newPrices.map((x) => ({ ...x })));\r\n      setPrices(newPrices.map((x) => ({ ...x })));\r\n    };\r\n\r\n    fetchData();\r\n  }, [airplane.id]);\r\n\r\n  const handleCellEdit = (row) => {\r\n    const newPrices = prices.map((x) => ({ ...x }));\r\n    for (let i = 0; i < newPrices.length; i++) {\r\n      if (newPrices[i].id === row.id) {\r\n        newPrices[i].ticketPrice = parseInt(row.props.value);\r\n        break;\r\n      }\r\n    }\r\n    setPrices(newPrices.map((x) => ({ ...x })));\r\n  };\r\n\r\n  const handleSaveClick = async () => {\r\n    let isValid = true;\r\n    if (!isPricesValid) setIsPricesValid(true);\r\n\r\n    prices.forEach((price) => {\r\n      if (price.ticketPrice <= 0) {\r\n        isValid = false;\r\n        setIsPricesValid(false);\r\n      }\r\n    });\r\n\r\n    if (isValid) {\r\n      const pricesForUpdate = prices.map((value) => {\r\n        return {\r\n          id: value.id,\r\n          airplaneId: value.airplaneId,\r\n          placeTypeId: value.placeTypeId,\r\n          ticketPrice: parseInt(value.ticketPrice, 10),\r\n        };\r\n      });\r\n\r\n      await putAirplanePrices(pricesForUpdate);\r\n      dispatch(setIsSimpleSuccessNotificationActive(true));\r\n      dispatch(\r\n        setSimpleSuccessNotificationText('The prices were edited successfully!')\r\n      );\r\n      closeDialog();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogContent className={classes.pricesDialogContent}>\r\n        <PlacesPriceEditableTable\r\n          prices={prices}\r\n          handleCellEdit={handleCellEdit}\r\n        />\r\n        {!isPricesValid && (\r\n          <Typography\r\n            variant=\"h6\"\r\n            color=\"error\"\r\n            className={classes.errorMessage}\r\n          >\r\n            Prices can be only positive numbers\r\n          </Typography>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={() => setPrices(initialPrices.map((x) => ({ ...x })))}\r\n        >\r\n          Reset\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSaveClick}>\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlacesPriceDialogContent;\r\n","import React from 'react';\r\n\r\nimport CustomDialog from '../../CustomDialog';\r\nimport PlacesPriceDialogContent from './PlacesPriceDialogContent';\r\n\r\nconst PlacesPriceDialog = ({ airplane, isOpened, closeDialog }) => {\r\n  return (\r\n    <CustomDialog\r\n      title=\"Places price\"\r\n      isOpened={isOpened}\r\n      closeDialog={closeDialog}\r\n      DialogContent={\r\n        <PlacesPriceDialogContent\r\n          airplane={airplane}\r\n          closeDialog={closeDialog}\r\n        />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PlacesPriceDialog;\r\n","import PlacesPriceDialog from './PlacesPriceDialog';\r\nexport default PlacesPriceDialog;\r\n","import API, { bearerAuthorization } from 'api';\r\nimport store from 'reduxStore/store';\r\n\r\nimport {\r\n  elementsOnAdminTable,\r\n  allAirplaneTypesEndPoint,\r\n  allAirplanesEndPoint,\r\n  freeAirplanesEndPoint,\r\n  allAirplanesCountEndPoint,\r\n} from 'constants';\r\n\r\nconst getAirplaneTypes = async () => {\r\n  return await API.get(`${allAirplaneTypesEndPoint}`)\r\n    .then((response) => response.data)\r\n    .then((data) => data)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nconst getAirplanes = async (\r\n  offset,\r\n  airplaneTypeFilter,\r\n  companyFilter,\r\n  modelFilter\r\n) => {\r\n  return await API.get(`${allAirplanesEndPoint}`, {\r\n    params: {\r\n      offset: offset,\r\n      limit: elementsOnAdminTable,\r\n      airplaneType: airplaneTypeFilter,\r\n      companyName: companyFilter,\r\n      model: modelFilter,\r\n    },\r\n  })\r\n    .then((response) => response.data)\r\n    .then((data) => data)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nconst addAirplane = async (\r\n  airplaneTypeId,\r\n  companyId,\r\n  model,\r\n  registrationNumber,\r\n  rows,\r\n  columns,\r\n  baggageCapacity\r\n) => {\r\n  let token = store.getState().token;\r\n\r\n  return await API.post(\r\n    `${allAirplanesEndPoint}`,\r\n    {\r\n      airplaneTypeId: airplaneTypeId,\r\n      companyId: companyId,\r\n      model: model,\r\n      registrationNumber: parseInt(registrationNumber, 10),\r\n      rows: parseInt(rows, 10),\r\n      columns: parseInt(columns, 10),\r\n      baggageCapacityInKilograms: parseFloat(baggageCapacity, 10),\r\n    },\r\n    bearerAuthorization(token.jwtToken)\r\n  )\r\n    .then((response) => [response.data, null])\r\n    .catch((error) => [null, error]);\r\n};\r\n\r\nconst deleteAirplane = async (airplaneId) => {\r\n  let token = store.getState().token;\r\n\r\n  return await API.delete(\r\n    `${allAirplanesEndPoint}/${airplaneId}`,\r\n    bearerAuthorization(token.jwtToken)\r\n  )\r\n    .then((response) => [response, null])\r\n    .catch((error) => [null, error]);\r\n};\r\n\r\nconst getFreeAirplanes = async () => {\r\n  return await API.get(`${freeAirplanesEndPoint}`)\r\n    .then((response) => response.data)\r\n    .then((airplanes) => airplanes)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nconst getAirplanesCount = async (\r\n  airplaneTypeFilter,\r\n  companyFilter,\r\n  modelFilter\r\n) => {\r\n  return await API.get(`${allAirplanesCountEndPoint}`, {\r\n    params: {\r\n      airplaneType: airplaneTypeFilter,\r\n      company: companyFilter,\r\n      model: modelFilter,\r\n    },\r\n  })\r\n    .then((response) => response.data)\r\n    .then((data) => data)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nexport {\r\n  getAirplaneTypes,\r\n  getAirplanes,\r\n  addAirplane,\r\n  deleteAirplane,\r\n  getFreeAirplanes,\r\n  getAirplanesCount,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\n\r\nimport PlacesPriceDialog from 'components/shared/Dialogs/PlacesPriceDialog';\r\nimport Table from 'components/shared/Table';\r\nimport Filter from 'shared/Filter';\r\nimport { elementsOnAdminTable } from 'constants';\r\nimport { getAirplanes, getAirplanesCount } from 'api/airplaneRequests';\r\nimport { getAirplaneSearchHints } from 'api/searchHintsRequests';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  airplanesTable: {\r\n    minHeight: 400,\r\n  },\r\n  airplanesFilter: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst CompanyAirplanesTable = ({ companyName }) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  let timer = null;\r\n\r\n  const [airplaneTypeHints, setAirplaneTypeHints] = useState([]);\r\n  const [modelHints, setModelHints] = useState([]);\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [offset, setOffset] = useState(0);\r\n  const [modelFilter, setModelFilter] = useState('');\r\n  const [airplaneTypeFilter, setAirplaneTypeFilter] = useState('');\r\n\r\n  const [airplanes, setAirplanes] = useState([]);\r\n  const [airplanesCount, setAirplanesCount] = useState(0);\r\n\r\n  const [selectedAirplane, setSelectedAirplane] = useState(null);\r\n\r\n  const [isPlacesPriceDialogOpened, setIsPlacesPriceDialogOpened] =\r\n    useState(false);\r\n\r\n  const columns = [\r\n    { field: 'type', headerName: 'Type', width: 200 },\r\n    { field: 'model', headerName: 'Model', width: 200 },\r\n    {\r\n      field: 'registrationNumber',\r\n      headerName: 'Registration number',\r\n      width: 200,\r\n    },\r\n    {\r\n      field: 'baggageCapacity',\r\n      headerName: 'Baggage capacity',\r\n      width: 200,\r\n      type: 'number',\r\n      valueFormatter: (params) => {\r\n        return `${params.value} Kg`;\r\n      },\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 200,\r\n      renderCell: (row) => {\r\n        return (\r\n          <>\r\n            <Tooltip title=\"Places price\">\r\n              <IconButton\r\n                color=\"primary\"\r\n                onClick={() => openPlacesPriceDialog(row.row)}\r\n              >\r\n                <AttachMoneyIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const rows = airplanes.map((value) => ({\r\n    id: value.id,\r\n    type: value.airplaneType.typeName,\r\n    model: value.model,\r\n    registrationNumber: value.registrationNumber,\r\n    baggageCapacity: value.baggageCapacityInKilograms,\r\n  }));\r\n\r\n  const fetchAirplanes = async () => {\r\n    if (companyName) {\r\n      const filters = {\r\n        company: companyName,\r\n        airplaneType: airplaneTypeFilter,\r\n        model: modelFilter,\r\n      };\r\n      const airplanesResponse = await getAirplanes(\r\n        offset,\r\n        filters.airplaneType,\r\n        filters.company,\r\n        filters.model\r\n      );\r\n      if (airplanesResponse) setAirplanes(airplanesResponse);\r\n      const airplanesCount = await getAirplanesCount(\r\n        filters.airplaneType,\r\n        filters.company,\r\n        filters.model\r\n      );\r\n      if (airplanesCount) setAirplanesCount(airplanesCount);\r\n    }\r\n  };\r\n\r\n  const fetchHints = async () => {\r\n    const hints = await getAirplaneSearchHints({\r\n      airplaneType: airplaneTypeFilter,\r\n      companyName: companyName,\r\n      model: modelFilter,\r\n    });\r\n    const airplaneTypes = hints.map((value) => value.airplaneType);\r\n    const models = hints.map((value) => value.model);\r\n    setAirplaneTypeHints([...new Set(airplaneTypes)]);\r\n    setModelHints([...new Set(models)]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAirplanes();\r\n  }, [companyName, offset, page, airplaneTypeFilter, modelFilter]);\r\n\r\n  const onFilterConfirmed = (values) => {\r\n    clearTimeout(timer);\r\n    if (!values[0] && !values[1]) {\r\n      setAirplaneTypeHints([]);\r\n      setModelHints([]);\r\n    }\r\n    if (values[0] || values[1]) {\r\n      timer = setTimeout(() => fetchHints(), 500);\r\n    }\r\n  };\r\n\r\n  const onSearchClick = (values) => {\r\n    setAirplaneTypeFilter(values[0]);\r\n    setModelFilter(values[1]);\r\n    setPage(0);\r\n    setOffset(0);\r\n  };\r\n\r\n  const onPageChange = (page) => {\r\n    setPage(page);\r\n    setOffset(page * elementsOnAdminTable);\r\n  };\r\n\r\n  const openAddPage = () => {\r\n    history.push('/admin/airplanes/creation');\r\n  };\r\n\r\n  const openPlacesPriceDialog = (airplane) => {\r\n    setSelectedAirplane(airplane);\r\n    setIsPlacesPriceDialogOpened(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.airplanesFilter}>\r\n        <Filter\r\n          fields={['Airplane type', 'Model']}\r\n          fieldsOptions={[airplaneTypeHints, modelHints]}\r\n          onFilterConfirmed={onFilterConfirmed}\r\n          onSearchClick={onSearchClick}\r\n        />\r\n      </div>\r\n      <PlacesPriceDialog\r\n        airplane={selectedAirplane}\r\n        isOpened={isPlacesPriceDialogOpened}\r\n        closeDialog={() => setIsPlacesPriceDialogOpened(false)}\r\n      />\r\n      <Table\r\n        page={page}\r\n        rows={rows}\r\n        columns={columns}\r\n        onPageChange={onPageChange}\r\n        rowCount={airplanesCount}\r\n        onAddClick={openAddPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CompanyAirplanesTable;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useSelector } from 'react-redux';\r\nimport { Grid } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport { getCompanyId } from 'services/token-service';\r\nimport { getCompany } from 'api/companyRequests';\r\n\r\nimport CompanyAirportsTable from './tables/CompanyAirportsTable';\r\nimport CompanyAirplanesTable from './tables/CompanyAirplanesTable';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  companyInfo: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  largeAvatar: {\r\n    width: theme.spacing(20),\r\n    height: theme.spacing(20),\r\n  },\r\n  userEmail: {\r\n    alignSelf: 'flex-end',\r\n  },\r\n  userName: {\r\n    alignSelf: 'flex-start',\r\n  },\r\n  userNameText: {\r\n    fontSize: 'large',\r\n  },\r\n}));\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MyCompanyPage = () => {\r\n  const classes = useStyles();\r\n  const token = useSelector((state) => state.token);\r\n\r\n  const [company, setCompany] = useState(null);\r\n  const [currentTab, setCurrentTab] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const companyId = getCompanyId(token.jwtToken);\r\n      const [companyResponse, error] = await getCompany(companyId);\r\n      if (companyResponse) {\r\n        setCompany(companyResponse);\r\n      }\r\n      if (error) {\r\n        // handle error\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [token]);\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setCurrentTab(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography gutterBottom variant=\"h2\">\r\n        My company\r\n      </Typography>\r\n      <div className={classes.companyInfo}>\r\n        <Grid container justify=\"center\" spacing={2}>\r\n          <Grid item lg={2}>\r\n            <Avatar alt=\"test\" className={classes.largeAvatar} />\r\n          </Grid>\r\n          <Grid item lg={6}>\r\n            <Typography variant=\"h3\">{company?.name}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <Paper elevation={4}>\r\n        <Paper variant=\"outlined\">\r\n          <Tabs\r\n            centered\r\n            value={currentTab}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            onChange={handleTabChange}\r\n            aria-label=\"disabled tabs example\"\r\n          >\r\n            <Tab label=\"Airports\" />\r\n            <Tab label=\"Airplanes\" />\r\n          </Tabs>\r\n        </Paper>\r\n        <TabPanel value={currentTab} index={0}>\r\n          <CompanyAirportsTable company={company} />\r\n        </TabPanel>\r\n        <TabPanel value={currentTab} index={1}>\r\n          <CompanyAirplanesTable companyName={company?.name} />\r\n        </TabPanel>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyCompanyPage;\r\n","import MyCompanyPage from './MyCompanyPage';\r\nexport default MyCompanyPage;\r\n","import API, { bearerAuthorization } from 'api';\r\nimport store from 'reduxStore/store';\r\n\r\nimport { flightsEndPoint, flightsCountEndPoint } from 'constants';\r\n\r\nconst getFilteredFlights = async (\r\n  offset,\r\n  limit,\r\n  departureCityFilter,\r\n  arrivalCityFilter\r\n) => {\r\n  return await API.get(`${flightsEndPoint}`, {\r\n    params: {\r\n      offset: offset,\r\n      limit: limit,\r\n      departureCity: departureCityFilter,\r\n      arrivalCity: arrivalCityFilter,\r\n    },\r\n  })\r\n    .then((response) => response.data)\r\n    .then((data) => data)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nconst getFlightsCount = async (departureCityFilter, arrivalCityFilter) => {\r\n  return await API.get(`${flightsCountEndPoint}`, {\r\n    params: {\r\n      departureCity: departureCityFilter,\r\n      arrivalCity: arrivalCityFilter,\r\n    },\r\n  })\r\n    .then((response) => response.data)\r\n    .then((data) => data)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nconst getFlight = async (flightId) => {\r\n  return await API.get(`${flightsEndPoint}/${flightId}`)\r\n    .then((response) => response.data)\r\n    .then((data) => data)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nconst postFlight = async (\r\n  airplaneId,\r\n  flightNumber,\r\n  departureAirportId,\r\n  arrivalAirportId,\r\n  departureTimeWithoutTZ,\r\n  arrivalTimeWithoutTZ,\r\n  freeBaggageLimit,\r\n  overweightPrice\r\n) => {\r\n  let token = store.getState().token;\r\n\r\n  await API.post(\r\n    `${flightsEndPoint}`,\r\n    {\r\n      airplaneId: airplaneId,\r\n      flightNumber: flightNumber,\r\n      fromId: departureAirportId,\r\n      toId: arrivalAirportId,\r\n      departureTime: `${departureTimeWithoutTZ.toJSON()}`,\r\n      arrivalTime: `${arrivalTimeWithoutTZ.toJSON()}`,\r\n      freeBaggageLimitInKilograms: parseFloat(freeBaggageLimit),\r\n      overweightPrice: parseFloat(overweightPrice),\r\n    },\r\n    bearerAuthorization(token.jwtToken)\r\n  ).catch((error) => console.log(error));\r\n};\r\n\r\nconst putFlight = async (\r\n  flightId,\r\n  airplaneId,\r\n  flightNumber,\r\n  departureAirportId,\r\n  arrivalAirportId,\r\n  departureTimeWithoutTZ,\r\n  arrivalTimeWithoutTZ\r\n) => {\r\n  let token = store.getState().token;\r\n\r\n  await API.put(\r\n    `${flightsEndPoint}/${flightId}`,\r\n    {\r\n      airplaneId: airplaneId,\r\n      flightNumber: flightNumber,\r\n      fromId: departureAirportId,\r\n      toId: arrivalAirportId,\r\n      departureTime: `${departureTimeWithoutTZ.toJSON()}`,\r\n      arrivalTime: `${arrivalTimeWithoutTZ.toJSON()}`,\r\n    },\r\n    bearerAuthorization(token.jwtToken)\r\n  ).catch((error) => console.log(error));\r\n};\r\n\r\nexport {\r\n  getFilteredFlights,\r\n  getFlightsCount,\r\n  getFlight,\r\n  postFlight,\r\n  putFlight,\r\n};\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FlightIcon from '@material-ui/icons/Flight';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  companyName: {\r\n    alignSelf: 'center',\r\n  },\r\n  airplaneIcon: {\r\n    alignSelf: 'center',\r\n    transform: 'rotate(90deg)',\r\n  },\r\n  airplaneInfo: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst FlightsItemInfo = ({\r\n  flight: { airplane, from, to, arrivalTime, departureTime },\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item container spacing={3}>\r\n      <Grid item className={classes.companyName}>\r\n        <Typography variant=\"h3\" align=\"center\">\r\n          {airplane.company.name}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item className={classes.airplaneInfo}>\r\n        <Grid item container direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"subtitle1\" align=\"center\">\r\n              {airplane.model}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"body2\" align=\"center\">\r\n              ({airplane.airplaneType.typeName})\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>\r\n        <Grid item container direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"subtitle1\" align=\"center\">\r\n              {departureTime.split('T')[1]}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"body2\" align=\"center\">\r\n              {departureTime.split('T')[0]}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid container spacing={2}>\r\n              <Grid item>\r\n                <Typography variant=\"subtitle1\" align=\"center\">\r\n                  {from.city.name}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"subtitle1\" align=\"center\">\r\n                  \"{from.name}\"\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item className={classes.airplaneIcon}>\r\n        <FlightIcon />\r\n      </Grid>\r\n      <Grid item>\r\n        <Grid item container direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"subtitle1\" align=\"center\">\r\n              {arrivalTime.split('T')[1]}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"body2\" align=\"center\">\r\n              {arrivalTime.split('T')[0]}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid container spacing={1}>\r\n              <Grid item>\r\n                <Typography variant=\"subtitle1\" align=\"center\">\r\n                  {to.city.name}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"subtitle1\" align=\"center\">\r\n                  \"{to.name}\"\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FlightsItemInfo;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport FlightsItemInfo from './FlightsItemInfo';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  flightInfo: {\r\n    width: '800px',\r\n    margin: 'auto',\r\n    padding: '24px',\r\n  },\r\n  companyName: {\r\n    alignSelf: 'center',\r\n  },\r\n  airplaneIcon: {\r\n    alignSelf: 'center',\r\n    transform: 'rotate(90deg)',\r\n  },\r\n  bookButton: {\r\n    marginLeft: 'auto',\r\n  },\r\n  dividedLine: {\r\n    margin: '0',\r\n  },\r\n  airplaneInfo: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst FlightsItem = ({ flight }) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  const handleBookClick = () => {\r\n    history.push({\r\n      pathname: '/reservation',\r\n      state: { flight: flight },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid item container>\r\n      <Card className={classes.flightInfo} variant=\"outlined\">\r\n        <Grid container direction=\"column\" spacing={2}>\r\n          <hr className={classes.dividedLine}></hr>\r\n          <FlightsItemInfo flight={flight} />\r\n          <hr className={classes.dividedLine}></hr>\r\n          <Grid item container>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.bookButton}\r\n              onClick={handleBookClick}\r\n            >\r\n              Book\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FlightsItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Filter from 'shared/Filter';\r\nimport { getFilteredFlights, getFlightsCount } from 'api/flightRequests';\r\nimport { getFlightSearchHints } from 'api/searchHintsRequests';\r\nimport { flightsOnPage } from 'constants';\r\n\r\nimport FlightsItem from './FlightsItem';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  flightList: {\r\n    padding: '24px',\r\n  },\r\n  pagination: {\r\n    margin: 'auto',\r\n  },\r\n}));\r\n\r\nconst FlightsList = () => {\r\n  let timer = null;\r\n  const classes = useStyles();\r\n  const [offset, setOffset] = useState(0);\r\n  const [amountOfPages, setPagesAmount] = useState(1);\r\n  const [page, setPage] = useState(1);\r\n  const [flights, setFlights] = useState([]);\r\n\r\n  const [departureCity, setDepartureCity] = useState('');\r\n  const [arrivalCity, setArrivalCity] = useState('');\r\n\r\n  const [departureCityHints, setDepartureCityHints] = useState([]);\r\n  const [arrivalCityHints, setArrivalCityHints] = useState([]);\r\n\r\n  const fetchFlights = async () => {\r\n    const flights = await getFilteredFlights(\r\n      offset,\r\n      flightsOnPage,\r\n      departureCity,\r\n      arrivalCity\r\n    );\r\n    const flightsCount = await getFlightsCount(departureCity, arrivalCity);\r\n\r\n    if (flights) setFlights(flights);\r\n    setPagesAmount(Math.ceil(flightsCount / flightsOnPage));\r\n  };\r\n\r\n  const fetchHints = async () => {\r\n    const hints = await getFlightSearchHints({\r\n      departureCity: departureCity,\r\n      arrivalCity: arrivalCity,\r\n    });\r\n    const departureCities = hints.map((value) => value.departureCity);\r\n    const arrivalCities = hints.map((value) => value.arrivalCity);\r\n    setDepartureCityHints([...new Set(departureCities)]);\r\n    setArrivalCityHints([...new Set(arrivalCities)]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFlights();\r\n  }, [page, offset, departureCity, arrivalCity]);\r\n\r\n  const handlePageChange = (event, value) => {\r\n    setOffset((value - 1) * flightsOnPage);\r\n    setPage(value);\r\n  };\r\n\r\n  const onFilterChange = (values) => {\r\n    clearTimeout(timer);\r\n    if (!values[0] && !values[1]) {\r\n      setDepartureCityHints([]);\r\n      setArrivalCityHints([]);\r\n    }\r\n    if (values[0] || values[1]) {\r\n      timer = setTimeout(() => fetchHints(), 500);\r\n    }\r\n  };\r\n\r\n  const onSearchClick = (values) => {\r\n    setDepartureCity(values[0]);\r\n    setArrivalCity(values[1]);\r\n    setPage(1);\r\n    setOffset(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Filter\r\n        fields={['Departure city', 'Arrival city']}\r\n        fieldsOptions={[departureCityHints, arrivalCityHints]}\r\n        onFilterConfirmed={onFilterChange}\r\n        onSearchClick={onSearchClick}\r\n      />\r\n      {flights.length ? (\r\n        <div className={classes.flightList}>\r\n          <Grid container spacing={3}>\r\n            {flights.map((flight) => {\r\n              return (\r\n                <FlightsItem flight={flight} id={flight.id} key={flight.id} />\r\n              );\r\n            })}\r\n            <Grid item container lg={12}>\r\n              <Pagination\r\n                count={amountOfPages}\r\n                shape=\"rounded\"\r\n                className={classes.pagination}\r\n                page={page}\r\n                onChange={handlePageChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h1>No flights</h1>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FlightsList;\r\n","import FlightsPage from './FlightsPage';\r\nexport default FlightsPage;\r\n","import React from 'react';\r\n\r\nimport FlightsList from './FlightsList';\r\n\r\nconst FlightsPage = () => {\r\n  return (\r\n    <>\r\n      <FlightsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FlightsPage;\r\n","import FormTextField from './FormTextField';\r\nexport default FormTextField;\r\n","import React from 'react';\r\nimport { useField } from 'formik';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst FormTextField = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <TextField\r\n      {...field}\r\n      {...props}\r\n      label={label}\r\n      variant=\"outlined\"\r\n      error={meta.touched && meta.error != null}\r\n      helperText={meta.touched && meta.error ? meta.error : null}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormTextField;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport {\r\n  setIsSimpleSuccessNotificationActive,\r\n  setSimpleSuccessNotificationText,\r\n} from 'reduxStore/notificationsSlice';\r\nimport { postUser } from 'api/userRequests';\r\n\r\nimport FormTextField from '../../FormTextField';\r\n\r\nconst AdminUserCreationForm = ({ onSubmit }) => {\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmitRegistration = async (values) => {\r\n    const [token, errorRegistration] = await postUser(values);\r\n    if (errorRegistration) {\r\n      setErrorMessage(errorRegistration.response.data.message);\r\n    }\r\n    if (token) {\r\n      dispatch(setIsSimpleSuccessNotificationActive(true));\r\n      dispatch(\r\n        setSimpleSuccessNotificationText(\r\n          'The user was registered successfully!'\r\n        )\r\n      );\r\n      onSubmit();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        passwordConfirm: '',\r\n      }}\r\n      validationSchema={Yup.object({\r\n        firstName: Yup.string()\r\n          .max(15, 'Must be 15 characters or less')\r\n          .required('Required'),\r\n        lastName: Yup.string()\r\n          .max(20, 'Must be 20 characters or less')\r\n          .required('Required'),\r\n        email: Yup.string().email('Invalid email address').required('Required'),\r\n        password: Yup.string()\r\n          .min(6, 'At least 6 characters')\r\n          .matches(/(?=.*[0-9])(?=.*[a-zA-Z])/, 'Only Latin letters and digits')\r\n          .required('Required'),\r\n        passwordConfirm: Yup.string()\r\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n          .required('Required'),\r\n      })}\r\n      onSubmit={(values) => {\r\n        onSubmitRegistration(values);\r\n      }}\r\n    >\r\n      {({ handleSubmit, handleReset }) => (\r\n        <Form>\r\n          <Grid container spacing={2} justify=\"flex-end\">\r\n            <Grid item xs={12} lg={6}>\r\n              <FormTextField\r\n                required\r\n                fullWidth\r\n                label=\"First name\"\r\n                name=\"firstName\"\r\n                type=\"text\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} lg={6}>\r\n              <FormTextField\r\n                required\r\n                fullWidth\r\n                label=\"Last name\"\r\n                name=\"lastName\"\r\n                type=\"text\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormTextField\r\n                required\r\n                fullWidth\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormTextField\r\n                required\r\n                fullWidth\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormTextField\r\n                required\r\n                fullWidth\r\n                label=\"Repeat password\"\r\n                name=\"passwordConfirm\"\r\n                type=\"password\"\r\n              />\r\n            </Grid>\r\n            {errorMessage && (\r\n              <Grid item xs={12}>\r\n                <Typography color=\"error\" variant=\"h6\">\r\n                  {errorMessage}\r\n                </Typography>\r\n              </Grid>\r\n            )}\r\n            <Grid item>\r\n              <Button\r\n                type=\"reset\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  setErrorMessage('');\r\n                  handleReset();\r\n                }}\r\n              >\r\n                Clear\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={(event) => {\r\n                  event.preventDefault();\r\n                  handleSubmit();\r\n                }}\r\n              >\r\n                Register\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AdminUserCreationForm;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nimport AdminUserCreationForm from './AdminUserCreationForm';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogContent: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst UserCreateDialogContent = ({ closeDialog }) => {\r\n  const classes = useStyles();\r\n\r\n  const onSubmit = async (values) => {\r\n    closeDialog();\r\n  };\r\n\r\n  return (\r\n    <DialogContent className={classes.dialogContent}>\r\n      <AdminUserCreationForm onSubmit={onSubmit} />\r\n    </DialogContent>\r\n  );\r\n};\r\n\r\nexport default UserCreateDialogContent;\r\n","import React from 'react';\r\n\r\nimport CustomDialog from 'components/shared/CustomDialog';\r\n\r\nimport UserCreateDialogContent from './UserCreateDialogContent';\r\n\r\nconst UserCreateDialog = ({ isOpened, closeDialog }) => {\r\n  return (\r\n    <CustomDialog\r\n      title=\"User registration\"\r\n      isOpened={isOpened}\r\n      closeDialog={closeDialog}\r\n      DialogContent={<UserCreateDialogContent closeDialog={closeDialog} />}\r\n    ></CustomDialog>\r\n  );\r\n};\r\n\r\nexport default UserCreateDialog;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport UserCreateDialog from 'components/shared/Dialogs/UserCreateDialog/UserCreateDialog';\r\nimport Filter from 'shared/Filter';\r\nimport Table from 'components/shared/Table';\r\nimport { getFilteredUsers, getFilteredUsersCount } from 'api/userRequests';\r\nimport { getUserSearchHints } from 'api/searchHintsRequests';\r\nimport { elementsOnAdminTable } from 'constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  usersGrid: {\r\n    height: '500px',\r\n    width: '100%',\r\n  },\r\n  tableHeader: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst AdminUsersPage = () => {\r\n  let timer = null;\r\n  const classes = useStyles();\r\n  const token = useSelector((state) => state.token);\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [totalUsersNumber, setTotalUsersNumber] = useState(0);\r\n\r\n  const [emailHints, setEmailHints] = useState([]);\r\n  const [firstNameHints, setFirstNameHints] = useState([]);\r\n  const [lastNameHints, setLastNameHints] = useState([]);\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [offset, setOffset] = useState(0);\r\n  const [emailFilter, setEmailFilter] = useState('');\r\n  const [firstNameFilter, setFirstNameFilter] = useState('');\r\n  const [lastNameFilter, setLastNameFilter] = useState('');\r\n\r\n  const [isCreateDialogOpened, setIsCreateDialogOpened] = useState(false);\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 100 },\r\n    { field: 'email', headerName: 'Email', width: 150 },\r\n    { field: 'firstName', headerName: 'First name', width: 150 },\r\n    { field: 'lastName', headerName: 'Last name', width: 150 },\r\n    { field: 'roleName', headerName: 'Role', width: 150 },\r\n    { field: 'phoneNumber', headerName: 'Phone number', width: 200 },\r\n  ];\r\n\r\n  const fetchUsers = async () => {\r\n    const users = await getFilteredUsers(\r\n      offset,\r\n      emailFilter,\r\n      firstNameFilter,\r\n      lastNameFilter\r\n    );\r\n    const usersCount = await getFilteredUsersCount(\r\n      emailFilter,\r\n      firstNameFilter,\r\n      lastNameFilter\r\n    );\r\n\r\n    setUsers(users);\r\n    setTotalUsersNumber(usersCount);\r\n  };\r\n\r\n  const fetchHints = async () => {\r\n    const hints = await getUserSearchHints({\r\n      email: emailFilter,\r\n      firstName: firstNameFilter,\r\n      lastName: lastNameFilter,\r\n    });\r\n    const emails = hints.map((value) => value.email);\r\n    const firstNames = hints.map((value) => value.firstName);\r\n    const lastNames = hints.map((value) => value.lastName);\r\n    setEmailHints([...new Set(emails)]);\r\n    setFirstNameHints([...new Set(firstNames)]);\r\n    setLastNameHints([...new Set(lastNames)]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, [\r\n    token,\r\n    offset,\r\n    emailFilter,\r\n    firstNameFilter,\r\n    lastNameFilter,\r\n    isCreateDialogOpened,\r\n  ]);\r\n\r\n  const onFilterChange = (values) => {\r\n    clearTimeout(timer);\r\n    if (!values[0] && !values[1] && !values[2]) {\r\n      setEmailHints([]);\r\n      setFirstNameHints([]);\r\n      setLastNameHints([]);\r\n    }\r\n    if (values[0] || values[1] || values[2]) {\r\n      timer = setTimeout(() => fetchHints(), 500);\r\n    }\r\n  };\r\n\r\n  const onSearchClick = (values) => {\r\n    setEmailFilter(values[0]);\r\n    setFirstNameFilter(values[1]);\r\n    setLastNameFilter(values[2]);\r\n    setPage(0);\r\n    setOffset(0);\r\n  };\r\n\r\n  const onPageChange = (page) => {\r\n    setPage(page);\r\n    setOffset(page * elementsOnAdminTable);\r\n  };\r\n\r\n  const openCreateDialog = () => {\r\n    setIsCreateDialogOpened(true);\r\n  };\r\n\r\n  const closeCreateDialog = () => {\r\n    setIsCreateDialogOpened(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <UserCreateDialog\r\n        isOpened={isCreateDialogOpened}\r\n        closeDialog={closeCreateDialog}\r\n      />\r\n      <div className={classes.tableHeader}>\r\n        <Typography variant=\"h3\">Users</Typography>\r\n        <Filter\r\n          fields={['Email', 'First name', 'Last name']}\r\n          fieldsOptions={[emailHints, firstNameHints, lastNameHints]}\r\n          onFilterConfirmed={onFilterChange}\r\n          onSearchClick={onSearchClick}\r\n        />\r\n      </div>\r\n      <Table\r\n        page={page}\r\n        rows={users}\r\n        columns={columns}\r\n        onPageChange={onPageChange}\r\n        rowCount={totalUsersNumber}\r\n        onAddClick={openCreateDialog}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminUsersPage;\r\n","import AdminUsersPage from './AdminUsersPage';\nexport default AdminUsersPage;\n","import DeleteConfirmDialog from './DeleteConfirmDialog';\r\nexport default DeleteConfirmDialog;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst DeleteConfirmDialog = ({\r\n  isOpened,\r\n  handleConfirmation,\r\n  handleRejection,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Dialog open={isOpened} onClose={handleRejection}>\r\n        <DialogTitle>{'Do you really want to delete this?'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            If you delete it now you will not have an oportunity to restore this\r\n            data anymore\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleRejection} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleConfirmation} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteConfirmDialog;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {\r\n  setIsSimpleSuccessNotificationActive,\r\n  setSimpleSuccessNotificationText,\r\n} from 'reduxStore/notificationsSlice';\r\nimport { getCountries } from 'api/locationRequests';\r\nimport { putCompany } from 'api/companyRequests';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  countryNameField: {\r\n    marginBottom: theme.spacing(2),\r\n    minWidth: 300,\r\n  },\r\n}));\r\n\r\nconst CompanyEditDialogContent = ({\r\n  company,\r\n  company: { name, country },\r\n  closeDialog,\r\n}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  const [currentCompanyName, setCurrentCompanyName] = useState(name);\r\n  const [currentCompanyCountry, setCurrentCompanyCountry] = useState(country);\r\n\r\n  const [isCurrentCompanyNameValid, setIsCurrentCompanyNameValid] =\r\n    useState(true);\r\n  const [isCurrentCompanyCountryValid, setIsCurrentCompanyCountryValid] =\r\n    useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const [countriesResponse, countriesError] = await getCountries();\r\n      if (countriesResponse) setCountries(countriesResponse);\r\n      if (countriesError) {\r\n        // Handle error.\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleCompanyNameChange = (newValue) => {\r\n    setCurrentCompanyName(newValue);\r\n  };\r\n\r\n  const handleResetClick = () => {\r\n    setCurrentCompanyName(name);\r\n    setCurrentCompanyCountry(country);\r\n    setIsCurrentCompanyNameValid(true);\r\n    setIsCurrentCompanyCountryValid(true);\r\n  };\r\n\r\n  const handleSaveClick = async () => {\r\n    let isValid = true;\r\n\r\n    if (!currentCompanyName) {\r\n      setIsCurrentCompanyNameValid(false);\r\n      isValid = false;\r\n    } else setIsCurrentCompanyNameValid(true);\r\n\r\n    if (!currentCompanyCountry) {\r\n      setIsCurrentCompanyCountryValid(false);\r\n      isValid = false;\r\n    } else setIsCurrentCompanyCountryValid(true);\r\n\r\n    if (isValid) {\r\n      const updateCompanyVersion = {\r\n        id: company.id,\r\n        name: currentCompanyName,\r\n        countryId: currentCompanyCountry.id,\r\n      };\r\n      const [updateResponse, updateError] = await putCompany(\r\n        updateCompanyVersion\r\n      );\r\n      if (!updateError) {\r\n        dispatch(setIsSimpleSuccessNotificationActive(true));\r\n        dispatch(setSimpleSuccessNotificationText('The company was edited successfully!'));\r\n        closeDialog();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogContent>\r\n        <TextField\r\n          className={classes.countryNameField}\r\n          value={currentCompanyName}\r\n          onChange={(event) => handleCompanyNameChange(event.target.value)}\r\n          label=\"Company name\"\r\n          variant=\"outlined\"\r\n          error={!isCurrentCompanyNameValid}\r\n          helperText={!isCurrentCompanyNameValid && 'This field is required'}\r\n        />\r\n        <Autocomplete\r\n          value={currentCompanyCountry}\r\n          onChange={(event, newValue) => setCurrentCompanyCountry(newValue)}\r\n          getOptionSelected={(option) => option.id === currentCompanyCountry.id}\r\n          options={countries}\r\n          getOptionLabel={(option) => option.name}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              error={!isCurrentCompanyCountryValid}\r\n              helperText={\r\n                !isCurrentCompanyCountryValid && 'This field is required'\r\n              }\r\n              {...params}\r\n              label=\"Country\"\r\n              variant=\"outlined\"\r\n            />\r\n          )}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"outlined\" onClick={handleResetClick}>\r\n          Reset\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSaveClick}>\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CompanyEditDialogContent;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { getCountries } from 'api/locationRequests';\r\nimport { postCompany } from 'api/companyRequests';\r\nimport {\r\n  setIsSimpleSuccessNotificationActive,\r\n  setSimpleSuccessNotificationText,\r\n} from 'reduxStore/notificationsSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inputField: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst CompanyCreateDialogContent = ({ closeDialog }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  const [companyName, setCompanyName] = useState('');\r\n  const [companyCountry, setCompanyCountry] = useState(null);\r\n\r\n  const [isCompanyNameValid, setIsCompanyNameValid] = useState(true);\r\n  const [isCompanyCountryValid, setIsCompanyCountryValid] = useState(true);\r\n\r\n  const [isErrorResponse, setIsErrorResponse] = useState(false);\r\n  const [errorHelperText, setErrorHelperText] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const [countriesResponse, countriesError] = await getCountries();\r\n      if (countriesResponse) setCountries(countriesResponse);\r\n      if (countriesError) {\r\n        // Handle error.\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleClearClick = () => {\r\n    setCompanyName('');\r\n    setCompanyCountry(null);\r\n  };\r\n\r\n  const handleCreateClick = async () => {\r\n    setIsErrorResponse(false);\r\n    setErrorHelperText('');\r\n    let isValid = true;\r\n    if (!companyName) {\r\n      isValid = false;\r\n      setIsCompanyNameValid(false);\r\n    } else setIsCompanyNameValid(true);\r\n    if (!companyCountry || !companyCountry.id) {\r\n      isValid = false;\r\n      setIsCompanyCountryValid(false);\r\n    } else setIsCompanyCountryValid(true);\r\n\r\n    if (isValid) {\r\n      const [createdCompany, creationError] = await postCompany({\r\n        name: companyName,\r\n        countryId: companyCountry.id,\r\n      });\r\n      if (createdCompany) {\r\n        dispatch(setIsSimpleSuccessNotificationActive(true));\r\n        dispatch(\r\n          setSimpleSuccessNotificationText(\r\n            'The company was created successfully!'\r\n          )\r\n        );\r\n        closeDialog();\r\n      }\r\n      if (creationError) {\r\n        setIsErrorResponse(true);\r\n        setErrorHelperText(creationError.response.data.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              error={!isCompanyNameValid}\r\n              helperText={!isCompanyNameValid && 'This field is required'}\r\n              className={classes.inputField}\r\n              value={companyName}\r\n              onChange={(event) => setCompanyName(event.target.value)}\r\n              required\r\n              variant=\"outlined\"\r\n              label=\"Company name\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              options={countries}\r\n              getOptionLabel={(option) => option.name}\r\n              value={companyCountry}\r\n              onChange={(event, newValue) => setCompanyCountry(newValue)}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  error={!isCompanyCountryValid}\r\n                  helperText={\r\n                    !isCompanyCountryValid && 'This field is required'\r\n                  }\r\n                  required\r\n                  {...params}\r\n                  label=\"Country\"\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            {isErrorResponse && (\r\n              <Typography variant=\"body1\" color=\"error\">\r\n                {errorHelperText}\r\n              </Typography>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => handleClearClick()}>Clear</Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => handleCreateClick()}\r\n        >\r\n          Create\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CompanyCreateDialogContent;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridItem: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  deleteButton: {\r\n    color: red[500],\r\n  },\r\n}));\r\n\r\nconst ManagersListItem = ({ manager, handleDeleteManager }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleDeleteButtonClick = () => {\r\n    handleDeleteManager(manager);\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Paper variant=\"outlined\">\r\n        <Grid container>\r\n          <Grid item xs={3} className={classes.gridItem}>\r\n            <Typography variant=\"body1\">{manager?.email}</Typography>\r\n          </Grid>\r\n          <Grid item xs={5} className={classes.gridItem}>\r\n            <Typography variant=\"body1\">\r\n              {manager?.firstName} {manager?.lastName}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3} className={classes.gridItem}>\r\n            <Typography variant=\"body1\" noWrap>\r\n              {manager?.phoneNumber}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={1} className={classes.gridItem}>\r\n            <IconButton\r\n              className={classes.deleteButton}\r\n              onClick={() => handleDeleteButtonClick()}\r\n            >\r\n              <HighlightOffIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ManagersListItem;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ManagersListItem from './ManagersListItem';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  managersListPaper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst ManagersList = ({ managers, handleDeleteManager }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper variant=\"outlined\" className={classes.managersListPaper}>\r\n      <Grid container spacing={2}>\r\n        {managers.length === 0 && (\r\n          <Grid item>\r\n            <Typography>No managers</Typography>\r\n          </Grid>\r\n        )}\r\n        {managers?.map((manager) => {\r\n          return (\r\n            <ManagersListItem\r\n              key={manager.id}\r\n              manager={manager}\r\n              handleDeleteManager={handleDeleteManager}\r\n            />\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ManagersList;\r\n","import ManagersList from './ManagersList';\r\nexport default ManagersList;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  managerAdding: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst ManagerAdding = ({ freeUsers, handleAddManager }) => {\r\n  const classes = useStyles();\r\n  const [newManager, setNewManager] = useState(null);\r\n\r\n  const [isNewManagerValid, setIsNewManagerValid] = useState(true);\r\n\r\n  const onAddClick = () => {\r\n    let isValid = true;\r\n    if (!isNewManagerValid) setIsNewManagerValid(true);\r\n\r\n    if (!newManager) {\r\n      isValid = false;\r\n      setIsNewManagerValid(false);\r\n    }\r\n\r\n    if (isValid) {\r\n      setNewManager(null);\r\n      handleAddManager(newManager);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.managerAdding}>\r\n      <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs={6}>\r\n          <Autocomplete\r\n            options={freeUsers}\r\n            value={newManager}\r\n            onChange={(event, newValue) => {\r\n              setNewManager(newValue);\r\n            }}\r\n            getOptionLabel={(option) => option.email}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                error={!isNewManagerValid}\r\n                {...params}\r\n                label=\"Combo box\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={onAddClick}\r\n            startIcon={<PersonAddIcon />}\r\n          >\r\n            Add new manager\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManagerAdding;\r\n","import CompanyManagersDialogContent from './CompanyManagersDialogContent';\r\nexport default CompanyManagersDialogContent;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nimport {\r\n  setIsSimpleSuccessNotificationActive,\r\n  setSimpleSuccessNotificationText,\r\n} from 'reduxStore/notificationsSlice';\r\nimport {\r\n  getManagers,\r\n  getFreeUsers,\r\n  assignCompanyToUser,\r\n} from 'api/userRequests';\r\n\r\nimport ManagersList from './ManagersList';\r\nimport ManagerAdding from './ManagerAdding';\r\n\r\nconst CompanyManagersDialogContent = ({ companyId }) => {\r\n  const dispatch = useDispatch();\r\n  const [managers, setManagers] = useState([]);\r\n  const [freeUsers, setFreeUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const [freeUsersResponse, freeUsersError] = await getFreeUsers();\r\n      const [managersResponse, managersError] = await getManagers(companyId);\r\n      if (freeUsersResponse) setFreeUsers(freeUsersResponse);\r\n      if (freeUsersError) {\r\n        // Handle error.\r\n      }\r\n      if (managersResponse) setManagers(managersResponse);\r\n      if (managersError) {\r\n        // Handle error.\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [companyId]);\r\n\r\n  const handleAddManager = async (newManager) => {\r\n    const [adminResponse, adminError] = await assignCompanyToUser(newManager.id, companyId);\r\n\r\n    if (!adminError) {\r\n      dispatch(setIsSimpleSuccessNotificationActive(true));\r\n      dispatch(setSimpleSuccessNotificationText('The admin was assigned successfully!'));\r\n      setFreeUsers(() => {\r\n        let newFreeUsers = [];\r\n        freeUsers.forEach((user) => {\r\n          if (user.id !== newManager.id) {\r\n            newFreeUsers.push(user);\r\n          }\r\n        });\r\n        return newFreeUsers;\r\n      });\r\n      setManagers([...managers, newManager]);\r\n    };\r\n  };\r\n\r\n  const handleDeleteManager = async (manager) => {\r\n    const [adminResponse, adminError] = await assignCompanyToUser(manager.id, '');\r\n    \r\n    if (!adminError) {\r\n      dispatch(setIsSimpleSuccessNotificationActive(true));\r\n      dispatch(setSimpleSuccessNotificationText('The admin was unassigned successfully!'));\r\n      setFreeUsers([...freeUsers, manager]);\r\n      setManagers(() => {\r\n        let newManagers = [];\r\n        managers.forEach((user) => {\r\n          if (user.id !== manager.id) {\r\n            newManagers.push(user);\r\n          }\r\n        });\r\n        return newManagers;\r\n      });\r\n    };\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogContent>\r\n        <ManagersList\r\n          managers={managers}\r\n          handleDeleteManager={handleDeleteManager}\r\n        />\r\n        <ManagerAdding\r\n          freeUsers={freeUsers}\r\n          handleAddManager={handleAddManager}\r\n        />\r\n      </DialogContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CompanyManagersDialogContent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport red from '@material-ui/core/colors/red';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport {\r\n  setIsSimpleSuccessNotificationActive,\r\n  setSimpleSuccessNotificationText,\r\n} from 'reduxStore/notificationsSlice';\r\nimport Filter from 'shared/Filter';\r\nimport Table from 'components/shared/Table';\r\nimport CustomDialog from 'components/shared/CustomDialog';\r\nimport DeleteConfirmDialog from 'components/shared/DeleteConfirmDialog';\r\nimport {\r\n  getFilteredCompanies,\r\n  getCompaniesCount,\r\n  deleteCompany,\r\n} from 'api/companyRequests';\r\nimport { getCompanySearchHints } from 'api/searchHintsRequests';\r\nimport { elementsOnAdminTable } from 'constants';\r\n\r\nimport CompanyEditDialogContent from './CompanyEditDialogContent';\r\nimport CompanyCreateDialogContent from './CompanyCreateDialogContent';\r\nimport CompanyManagersDialogContent from './CompanyManagersDialogContent';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  companiesGrid: {\r\n    height: '500px',\r\n    width: '100%',\r\n  },\r\n  tableHeader: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  deleteButton: {\r\n    color: red[500],\r\n  },\r\n}));\r\n\r\nconst AdminCompaniesPage = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const token = useSelector((state) => state.token);\r\n  let timer = null;\r\n\r\n  const [companyHints, setCompanyHints] = useState([]);\r\n  const [countryHints, setCountryHints] = useState([]);\r\n\r\n  const [companies, setCompanies] = useState([]);\r\n  const [totalCompaniesNumber, setTotalCompaniesNumber] = useState(0);\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [offset, setOffset] = useState(0);\r\n  const [companyNameFilter, setCompanyNameFilter] = useState('');\r\n  const [countryNameFilter, setCountryNameFilter] = useState('');\r\n\r\n  const [isCreateDialogOpened, setIsCreateDialogOpened] = useState(false);\r\n  const [isEditDialogOpened, setIsEditDialogOpened] = useState(false);\r\n  const [isManagersDialogOpened, setIsManagersDialogOpened] = useState(false);\r\n  const [isDeleteConfirmDialogOpened, setIsDeleteConfirmDialogOpened] =\r\n    useState(false);\r\n\r\n  const [companyId, setCompanyId] = useState('');\r\n  const [companyForEditing, setCompanyForEditing] = useState(null);\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 300 },\r\n    { field: 'name', headerName: 'Company name', width: 200 },\r\n    { field: 'countryName', headerName: 'Country name', width: 200 },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 250,\r\n      renderCell: (row) => {\r\n        return (\r\n          <>\r\n            <Tooltip title=\"Edit\">\r\n              <IconButton\r\n                color=\"primary\"\r\n                onClick={() => openEditDialog(row.row)}\r\n              >\r\n                <EditIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Show managers\">\r\n              <IconButton\r\n                color=\"primary\"\r\n                onClick={() => openManagersDialog(row.id)}\r\n              >\r\n                <SupervisorAccountIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Delete\">\r\n              <IconButton\r\n                className={classes.deleteButton}\r\n                onClick={() => openDeleteConfirmDialog(row.id)}\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const rows = companies.map((value) => {\r\n    return {\r\n      id: value.id,\r\n      name: value.name,\r\n      countryName: value.country.name,\r\n      country: value.country,\r\n    };\r\n  });\r\n\r\n  const fetchCompanies = async () => {\r\n    const companies = await getFilteredCompanies(\r\n      offset,\r\n      companyNameFilter,\r\n      countryNameFilter\r\n    );\r\n    const companiesCount = await getCompaniesCount(\r\n      companyNameFilter,\r\n      countryNameFilter\r\n    );\r\n\r\n    setCompanies(companies);\r\n    setTotalCompaniesNumber(companiesCount);\r\n  };\r\n\r\n  const fetchHints = async () => {\r\n    const hints = await getCompanySearchHints({\r\n      companyName: companyNameFilter,\r\n      countryName: countryNameFilter,\r\n    });\r\n    const companies = hints.map((value) => value.companyName);\r\n    const countries = hints.map((value) => value.countryName);\r\n    setCompanyHints([...new Set(companies)]);\r\n    setCountryHints([...new Set(countries)]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCompanies();\r\n  }, [\r\n    token,\r\n    offset,\r\n    companyNameFilter,\r\n    countryNameFilter,\r\n    isEditDialogOpened,\r\n    isCreateDialogOpened,\r\n    isDeleteConfirmDialogOpened,\r\n  ]);\r\n\r\n  const onFilterChange = (values) => {\r\n    clearTimeout(timer);\r\n    if (!values[0] && !values[1]) {\r\n      setCompanyHints([]);\r\n      setCountryHints([]);\r\n    }\r\n    if (values[0] || values[1]) {\r\n      timer = setTimeout(() => fetchHints(), 500);\r\n    }\r\n  };\r\n\r\n  const onSearchClick = (values) => {\r\n    setCompanyNameFilter(values[0]);\r\n    setCountryNameFilter(values[1]);\r\n    setPage(0);\r\n    setOffset(0);\r\n  };\r\n\r\n  const onPageChange = (page) => {\r\n    setPage(page);\r\n    setOffset(page * elementsOnAdminTable);\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    setIsCreateDialogOpened(true);\r\n  };\r\n\r\n  const closeCreateDialog = () => {\r\n    setIsCreateDialogOpened(false);\r\n  };\r\n\r\n  const openManagersDialog = (id) => {\r\n    setCompanyId(id);\r\n    setIsManagersDialogOpened(true);\r\n  };\r\n\r\n  const openEditDialog = (company) => {\r\n    setCompanyForEditing(company);\r\n    setIsEditDialogOpened(true);\r\n  };\r\n\r\n  const openDeleteConfirmDialog = (companyId) => {\r\n    setCompanyId(companyId);\r\n    setIsDeleteConfirmDialogOpened(true);\r\n  };\r\n\r\n  const handleDeleteRejection = () => {\r\n    setIsDeleteConfirmDialogOpened(false);\r\n  };\r\n\r\n  const handleDeleteConfirmation = async () => {\r\n    const [deleteResponse, deleteError] = await deleteCompany(companyId);\r\n\r\n    if (!deleteError) {\r\n      dispatch(setIsSimpleSuccessNotificationActive(true));\r\n      dispatch(setSimpleSuccessNotificationText('The company was deleted successfully!'));\r\n      setIsDeleteConfirmDialogOpened(false);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DeleteConfirmDialog\r\n        isOpened={isDeleteConfirmDialogOpened}\r\n        handleConfirmation={handleDeleteConfirmation}\r\n        handleRejection={handleDeleteRejection}\r\n      />\r\n      <CustomDialog\r\n        title=\"Edit company\"\r\n        isOpened={isEditDialogOpened}\r\n        closeDialog={() => setIsEditDialogOpened(false)}\r\n        DialogContent={\r\n          <CompanyEditDialogContent\r\n            company={companyForEditing}\r\n            closeDialog={() => setIsEditDialogOpened(false)}\r\n          />\r\n        }\r\n      />\r\n      <CustomDialog\r\n        fullWidth={true}\r\n        maxWidth=\"md\"\r\n        title=\"Managers\"\r\n        isOpened={isManagersDialogOpened}\r\n        closeDialog={() => setIsManagersDialogOpened(false)}\r\n        DialogContent={<CompanyManagersDialogContent companyId={companyId} />}\r\n      />\r\n      <CustomDialog\r\n        title=\"Company registration\"\r\n        isOpened={isCreateDialogOpened}\r\n        closeDialog={closeCreateDialog}\r\n        DialogContent={\r\n          <CompanyCreateDialogContent closeDialog={closeCreateDialog} />\r\n        }\r\n      />\r\n      <div className={classes.tableHeader}>\r\n        <Typography variant=\"h3\">Companies</Typography>\r\n        <Filter\r\n          fields={['Company name', 'Country']}\r\n          fieldsOptions={[companyHints, countryHints]}\r\n          onFilterConfirmed={onFilterChange}\r\n          onSearchClick={onSearchClick}\r\n        />\r\n      </div>\r\n      <Table\r\n        page={page}\r\n        rows={rows}\r\n        columns={columns}\r\n        onPageChange={onPageChange}\r\n        rowCount={totalCompaniesNumber}\r\n        onAddClick={handleAddClick}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default AdminCompaniesPage;\r\n","import AdminCompaniesPage from './AdminCompaniesPage';\nexport default AdminCompaniesPage;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    // minWidth: 650,\n  },\n});\n\nconst PriceTable = ({ prices }) => {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\" aria-label=\"price table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Place type</TableCell>\n            <TableCell align=\"right\">Ticket price</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {prices?.map((price) => (\n            <TableRow key={price.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {price.placeType}\n              </TableCell>\n              <TableCell align=\"right\">{price.ticketPrice}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default PriceTable;\n","import PriceTable from './PriceTable';\nexport default PriceTable;\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\nimport FlightIcon from '@material-ui/icons/Flight';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { getFlight } from 'api/flightRequests';\r\nimport PriceTable from 'components/shared/PriceTable';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  infoDialog: {\r\n    padding: theme.spacing(3),\r\n    paddingTop: 0,\r\n  },\r\n  infoPaper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  airplaneIcon: {\r\n    alignSelf: 'center',\r\n    transform: 'rotate(90deg)',\r\n  },\r\n  loading: {\r\n    margin: theme.spacing(5),\r\n  },\r\n}));\r\n\r\nconst FlightInfoDialogContent = ({ flightId }) => {\r\n  const classes = useStyles();\r\n  const token = useSelector((state) => state.token);\r\n\r\n  const [flight, setFlight] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const flight = await getFlight(flightId);\r\n\r\n      setFlight(flight);\r\n    };\r\n\r\n    fetchData();\r\n  }, [token, flightId]);\r\n\r\n  return (\r\n    <DialogContent className={classes.infoDialog}>\r\n      <Paper variant=\"outlined\" className={classes.infoPaper}>\r\n        {flight ? (\r\n          <Grid container spacing={1}>\r\n            <Grid item lg={12} className={classes.flightTitle}>\r\n              <Typography component=\"h1\" variant=\"h3\" align=\"center\">\r\n                Flight: {flight?.flightNumber}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item lg={12}>\r\n              <Typography component=\"h1\" variant=\"h5\" align=\"center\">\r\n                Airplane ({flight?.airplane.model})\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item lg={12}>\r\n              <Typography variant=\"overline\" display=\"block\" align=\"center\">\r\n                Registration number: {flight?.airplane.registrationNumber}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item lg={12}>\r\n              <Typography variant=\"overline\" display=\"block\" align=\"center\">\r\n                Airplane type: {flight?.airplane.airplaneType.typeName}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item lg={12}>\r\n              <Typography variant=\"overline\" display=\"block\" align=\"center\">\r\n                Company: {flight?.airplane.company.name}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item lg={12}>\r\n              <PriceTable prices={flight?.airplane.prices} />\r\n            </Grid>\r\n            <Grid item container direction=\"column\" lg={5} justify=\"center\">\r\n              <Grid item>\r\n                <Typography variant=\"overline\" display=\"block\" align=\"center\">\r\n                  {flight?.from.name} ({flight?.from.city.name})\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"overline\" display=\"block\" align=\"center\">\r\n                  {flight?.departureTime}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item lg={2}>\r\n              <FlightIcon className={classes.airplaneIcon} />\r\n            </Grid>\r\n            <Grid item container direction=\"column\" lg={5} justify=\"center\">\r\n              <Grid item>\r\n                <Typography variant=\"overline\" display=\"block\" align=\"center\">\r\n                  {flight?.to.name} ({flight?.to.city.name})\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"overline\" display=\"block\" align=\"center\">\r\n                  {flight?.arrivalTime}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        ) : (\r\n          <CircularProgress className={classes.loading} />\r\n        )}\r\n      </Paper>\r\n    </DialogContent>\r\n  );\r\n};\r\n\r\nexport default FlightInfoDialogContent;\r\n","import FlightInfoDialogContent from './FlightInfoDialogContent';\nexport default FlightInfoDialogContent;\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useSelector } from 'react-redux';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  Grid,\r\n  OutlinedInput,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nimport { getAllAirports } from 'api/airportRequests';\r\nimport { putFlight } from 'api/flightRequests';\r\nimport { getFreeAirplanes } from 'api/airplaneRequests';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogContent: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst FlightEditDialogContent = ({ flightForEditing, closeDialog }) => {\r\n  const classes = useStyles();\r\n  const token = useSelector((state) => state.token);\r\n\r\n  \r\n  const [freeAirplanes, setFreeAirplanes] = useState([]);\r\n  const [airports, setAirports] = useState([]);\r\n  \r\n  const [flightNumber, setFlightNumber] = useState(\r\n    flightForEditing?.flightNumber\r\n  );\r\n  const [airplaneId, setAirplaneId] = useState(flightForEditing?.airplaneId);\r\n  const [fromAirportId, setFromAirportId] = useState(\r\n    flightForEditing?.fromAirportId\r\n  );\r\n  const [toAirportId, setToAirportId] = useState(flightForEditing?.toAirportId);\r\n  const [departureDate, setDepartureDate] = useState(\r\n    new Date(flightForEditing?.departureTime)\r\n  );\r\n\r\n  console.log(flightForEditing?.departureTime);\r\n  console.log(departureDate);\r\n  \r\n  const [arrivalDate, setArrivalDate] = useState(\r\n    new Date(flightForEditing?.arrivalTime)\r\n  );\r\n\r\n  const [airplane, setAirplane] = useState(flightForEditing?.airplaneModel);\r\n  const [departureAirport, setDepartureAirport] = useState(\r\n    flightForEditing?.fromAirportName\r\n  );\r\n  const [arrivalAirport, setArrivalAirport] = useState(\r\n    flightForEditing?.toAirportName\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const freeAirplanes = await getFreeAirplanes();\r\n      const allAirports = await getAllAirports();\r\n\r\n      setFreeAirplanes(freeAirplanes);\r\n      setAirports(allAirports);\r\n    };\r\n\r\n    fetchData();\r\n  }, [token]);\r\n\r\n  const onResetClick = () => {\r\n    setFlightNumber(flightForEditing?.flightNumber);\r\n    setAirplaneId(flightForEditing?.airplaneId);\r\n    setFromAirportId(flightForEditing?.fromAirportId);\r\n    setToAirportId(flightForEditing?.toAirportId);\r\n    setArrivalDate(new Date(flightForEditing?.arrivalTime));\r\n    setDepartureDate(new Date(flightForEditing?.departureTime));\r\n    setAirplane(flightForEditing?.airplaneModel);\r\n    setDepartureAirport(flightForEditing?.fromAirportName);\r\n    setArrivalAirport(flightForEditing?.toAirportName);\r\n  };\r\n\r\n  const saveFlight = async () => {\r\n    let departureTimeWithoutTZ = departureDate;\r\n    let hoursDiff =\r\n      departureTimeWithoutTZ.getHours() -\r\n      departureTimeWithoutTZ.getTimezoneOffset() / 60;\r\n    departureTimeWithoutTZ.setHours(hoursDiff);\r\n\r\n    let arrivalTimeWithoutTZ = arrivalDate;\r\n    hoursDiff =\r\n      arrivalTimeWithoutTZ.getHours() -\r\n      arrivalTimeWithoutTZ.getTimezoneOffset() / 60;\r\n    arrivalTimeWithoutTZ.setHours(hoursDiff);\r\n\r\n    await putFlight(\r\n      flightForEditing?.id,\r\n      airplaneId,\r\n      flightNumber,\r\n      fromAirportId,\r\n      toAirportId,\r\n      departureTimeWithoutTZ,\r\n      arrivalTimeWithoutTZ\r\n    );\r\n  };\r\n\r\n  const onSaveClick = async () => {\r\n    await saveFlight();\r\n    closeDialog();\r\n  };\r\n\r\n  const onAirplaneChange = (event, child) => {\r\n    setAirplane(event.target.value);\r\n    setAirplaneId(child.props.id);\r\n  };\r\n\r\n  const onDepartureAirportChange = (event, child) => {\r\n    setDepartureAirport(event.target.value);\r\n    setFromAirportId(child.props.id);\r\n  };\r\n\r\n  const onArrivalAirportChange = (event, child) => {\r\n    setArrivalAirport(event.target.value);\r\n    setToAirportId(child.props.id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogContent className={classes.dialogContent}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              required\r\n              variant=\"outlined\"\r\n              label=\"Flight number\"\r\n              value={flightNumber}\r\n              onChange={(event) => setFlightNumber(event.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <FormControl fullWidth variant=\"outlined\">\r\n              <InputLabel>Airplane</InputLabel>\r\n              <Select\r\n                value={airplane}\r\n                onChange={onAirplaneChange}\r\n                input={<OutlinedInput label=\"Airplane\" />}\r\n              >\r\n                <MenuItem value={flightForEditing?.airplaneModel}>\r\n                  {flightForEditing?.airplaneModel}\r\n                </MenuItem>\r\n                {freeAirplanes.map((airplane) => (\r\n                  <MenuItem\r\n                    key={airplane.id}\r\n                    id={airplane.id}\r\n                    value={airplane.model}\r\n                  >\r\n                    {airplane.model}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <FormControl fullWidth variant=\"outlined\">\r\n              <InputLabel>Departure airport</InputLabel>\r\n              <Select\r\n                value={departureAirport}\r\n                onChange={onDepartureAirportChange}\r\n                input={<OutlinedInput label=\"Departure airport\" />}\r\n              >\r\n                <MenuItem value={flightForEditing?.fromAirportName}>\r\n                  {flightForEditing?.fromAirportName}\r\n                </MenuItem>\r\n                {airports.map((airport) => (\r\n                  <MenuItem\r\n                    key={airport.id}\r\n                    id={airport.id}\r\n                    value={airport.name}\r\n                  >\r\n                    {airport.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <FormControl fullWidth variant=\"outlined\">\r\n              <InputLabel>Arrival airport</InputLabel>\r\n              <Select\r\n                value={arrivalAirport}\r\n                onChange={onArrivalAirportChange}\r\n                input={<OutlinedInput label=\"Arrival airport\" />}\r\n              >\r\n                <MenuItem value={flightForEditing?.toAirportName}>\r\n                  {flightForEditing?.toAirportName}\r\n                </MenuItem>\r\n                {airports.map((airport) => (\r\n                  <MenuItem\r\n                    key={airport.id}\r\n                    id={airport.id}\r\n                    value={airport.name}\r\n                  >\r\n                    {airport.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <DateTimePicker\r\n                label=\"Departure time\"\r\n                inputVariant=\"outlined\"\r\n                fullWidth\r\n                variant=\"inline\"\r\n                value={departureDate}\r\n                onChange={(value) => setDepartureDate(value)}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <DateTimePicker\r\n                label=\"Arrival time\"\r\n                inputVariant=\"outlined\"\r\n                fullWidth\r\n                variant=\"inline\"\r\n                value={arrivalDate}\r\n                onChange={(value) => setArrivalDate(value)}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"outlined\" onClick={onResetClick}>\r\n          Reset\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          onClick={onSaveClick}\r\n        >\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FlightEditDialogContent;\r\n","import FlightEditDialogContent from './FlightEditDialogContent';\nexport default FlightEditDialogContent;\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport { Grid } from '@material-ui/core';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nimport { getAllAirports } from 'api/airportRequests';\r\nimport { postFlight } from 'api/flightRequests';\r\nimport { getFreeAirplanes } from 'api/airplaneRequests';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formField: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst FlightCreateDialogContent = ({ closeDialog }) => {\r\n  const classes = useStyles();\r\n  const token = useSelector((state) => state.token);\r\n\r\n  const [freeAirplanes, setFreeAirplanes] = useState([]);\r\n  const [airports, setAirports] = useState([]);\r\n\r\n  const [flightNumber, setFlightNumber] = useState();\r\n  const [airplaneId, setAirplaneId] = useState();\r\n  const [departureAirportId, setDepartureAirportId] = useState();\r\n  const [arrivalAirportId, setArrivalAirportId] = useState();\r\n  const [departureTime, setDepartureTime] = useState(new Date());\r\n  const [arrivalTime, setArrivalTime] = useState(new Date());\r\n  const [freeBaggageLimit, setFreeBaggageLimit] = useState();\r\n  const [overweightPrice, setOverweightPrice] = useState();\r\n\r\n  const [airplane, setAirplane] = useState('');\r\n  const [departureAirport, setDepartureAirport] = useState('');\r\n  const [arrivalAirport, setArrivalAirport] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const freeAirplanes = await getFreeAirplanes();\r\n      const allAirports = await getAllAirports();\r\n\r\n      setFreeAirplanes(freeAirplanes);\r\n      setAirports(allAirports);\r\n    };\r\n\r\n    fetchData();\r\n  }, [token]);\r\n\r\n  const createFlight = async () => {\r\n    await postFlight(\r\n      airplaneId,\r\n      flightNumber,\r\n      departureAirportId,\r\n      arrivalAirportId,\r\n      departureTime,\r\n      arrivalTime,\r\n      freeBaggageLimit,\r\n      overweightPrice\r\n    );\r\n  };\r\n\r\n  const handleCreate = async () => {\r\n    await createFlight();\r\n    closeDialog();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogContent>\r\n        <form>\r\n          <Grid container spacing={2}>\r\n            <Grid item lg={12}>\r\n              <TextField\r\n                className={classes.formField}\r\n                variant=\"outlined\"\r\n                label=\"Flight number\"\r\n                onChange={(e) => setFlightNumber(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={12}>\r\n              <FormControl fullWidth variant='outlined'>\r\n                <InputLabel>Airplane</InputLabel>\r\n                <Select\r\n                  value={airplane}\r\n                  onChange={(e) => setAirplane(e.target.value)}\r\n                  input={<OutlinedInput label='Airplane'/>}\r\n                >\r\n                  {freeAirplanes?.length !== 0 ? freeAirplanes?.map((item) => (\r\n                    <MenuItem\r\n                      key={item.id}\r\n                      value={item.model}\r\n                      onClick={() => setAirplaneId(item.id)}\r\n                    >\r\n                      {item.model}\r\n                    </MenuItem>\r\n                  )) : (\r\n                    <MenuItem\r\n                      disabled\r\n                    >\r\n                      No free airplanes\r\n                    </MenuItem>\r\n                  )}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item container spacing={2}>\r\n              <Grid item lg={6}>\r\n                <FormControl fullWidth variant='outlined'>\r\n                  <InputLabel>Departure airport</InputLabel>\r\n                  <Select\r\n                    value={departureAirport}\r\n                    onChange={(e) => setDepartureAirport(e.target.value)}\r\n                    input={<OutlinedInput label='Departure airport'/>}\r\n                  >\r\n                    {airports?.map((item) => (\r\n                      <MenuItem\r\n                        key={item.id}\r\n                        value={item.name}\r\n                        onClick={() => setDepartureAirportId(item.id)}\r\n                      >\r\n                        {item.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item lg={6}>\r\n                <FormControl fullWidth variant='outlined'>\r\n                  <InputLabel>Arrival airport</InputLabel>\r\n                  <Select\r\n                    value={arrivalAirport}\r\n                    onChange={(e) => setArrivalAirport(e.target.value)}\r\n                    input={<OutlinedInput label='Arrival airport'/>}\r\n                  >\r\n                    {airports?.map((item) => (\r\n                      <MenuItem\r\n                        key={item.id}\r\n                        value={item.name}\r\n                        onClick={() => setArrivalAirportId(item.id)}\r\n                      >\r\n                        {item.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item container spacing={2}>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <Grid item lg={6}>\r\n                  <DateTimePicker\r\n                    inputVariant='outlined'\r\n                    className={classes.formField}\r\n                    disablePast\r\n                    value={departureTime}\r\n                    onChange={(value) => setDepartureTime(value)}\r\n                    variant=\"inline\"\r\n                    label=\"Departure date\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6}>\r\n                  <DateTimePicker\r\n                    inputVariant='outlined'\r\n                    className={classes.formField}\r\n                    value={arrivalTime}\r\n                    onChange={(value) => setArrivalTime(value)}\r\n                    variant=\"inline\"\r\n                    label=\"Arrival date\"\r\n                  />\r\n                </Grid>\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item lg={6}>\r\n              <TextField\r\n                className={classes.formField}\r\n                variant=\"outlined\"\r\n                label=\"Free baggage limit\"\r\n                type=\"number\"\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">Kg</InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={(e) => setFreeBaggageLimit(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={6}>\r\n              <TextField\r\n                className={classes.formField}\r\n                variant=\"outlined\"\r\n                label=\"Overweight price for 1 Kg\"\r\n                type=\"number\"\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">$</InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={(e) => setOverweightPrice(e.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<KeyboardArrowRightIcon />}\r\n          onClick={handleCreate}\r\n        >\r\n          Create\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FlightCreateDialogContent;\r\n","import FlightCreateDialogContent from './FlightCreateDialogContent';\r\nexport default FlightCreateDialogContent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nimport CustomDialog from 'components/shared/CustomDialog';\r\nimport Filter from 'shared/Filter';\r\nimport Table from 'components/shared/Table';\r\nimport { getFilteredFlights, getFlightsCount } from 'api/flightRequests';\r\nimport { elementsOnAdminTable } from 'constants';\r\n\r\nimport FlightInfoDialogContent from './FlightInfoDialogContent';\r\nimport FlightEditDialogContent from './FlightEditDialogContent';\r\nimport FlightCreateDialogContent from './FlightCreateDialogContent';\r\nimport { getFlightSearchHints } from 'api/searchHintsRequests';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  flightsGrid: {\r\n    height: '500px',\r\n    width: '100%',\r\n  },\r\n  tableHeader: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst AdminFlightsPage = () => {\r\n  const classes = useStyles();\r\n  let timer = null;\r\n  const token = useSelector((state) => state.token);\r\n\r\n  const [departureCityHints, setDepartureCityHints] = useState([]);\r\n  const [arrivalCityHints, setArrivalCityHints] = useState([]);\r\n\r\n  const [flights, setFlights] = useState([]);\r\n  const [totalFlightsNumber, setTotalFlightsNumber] = useState(0);\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [offset, setOffset] = useState(0);\r\n  const [departureCityFilter, setDepartureCityFilter] = useState('');\r\n  const [arrivalCityFilter, setArrivalCityFilter] = useState('');\r\n\r\n  const [flightForEditing, setFlightForEditing] = useState();\r\n  const [isEditDialogOpened, setIsEditDialogOpened] = useState(false);\r\n\r\n  const [flightIdEdit, setFlightIdInfo] = useState();\r\n  const [isMoreInfoDialogOpened, setIsMoreInfoDialogOpened] = useState(false);\r\n\r\n  const [isCreateDialogOpened, setIsCreateDialogOpened] = useState(false);\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 100 },\r\n    { field: 'flightNumber', headerName: 'Flight number', width: 150 },\r\n    { field: 'airplaneModel', headerName: 'Airplane model', width: 200 },\r\n    {\r\n      field: 'airplaneRegistartionNumber',\r\n      headerName: 'Airplane registration number',\r\n      width: 300,\r\n    },\r\n    {\r\n      field: 'fromAirportName',\r\n      headerName: 'Departure airport',\r\n      width: 200,\r\n    },\r\n    { field: 'toAirportName', headerName: 'Arrival airport', width: 150 },\r\n    { field: 'departureTime', headerName: 'Departure time', width: 200 },\r\n    { field: 'arrivalTime', headerName: 'Arrival time', width: 200 },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 200,\r\n      renderCell: (row) => {\r\n        return (\r\n          <>\r\n            <Tooltip title=\"Edit\">\r\n              <IconButton\r\n                onClick={() => openEditInfoDialog(row.row)}\r\n                color=\"primary\"\r\n              >\r\n                <EditIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"More info\">\r\n              <IconButton\r\n                color=\"primary\"\r\n                onClick={() => openMoreInfoDialog(row.id)}\r\n              >\r\n                <InfoOutlinedIcon className={classes.moreInfoIcon} />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const rows = flights.map((value) => {\r\n    return {\r\n      id: value.id,\r\n      flightNumber: value.flightNumber,\r\n      airplaneId: value.airplane.id,\r\n      airplaneModel: value.airplane.model,\r\n      airplaneRegistartionNumber: value.airplane.registrationNumber,\r\n      fromAirportName: value.from.name,\r\n      fromAirportId: value.from.id,\r\n      toAirportName: value.to.name,\r\n      toAirportId: value.to.id,\r\n      departureTime: value.departureTime,\r\n      arrivalTime: value.arrivalTime,\r\n    };\r\n  });\r\n\r\n  const fetchFlights = async () => {\r\n    const flights = await getFilteredFlights(\r\n      offset,\r\n      elementsOnAdminTable,\r\n      departureCityFilter,\r\n      arrivalCityFilter\r\n    );\r\n    const flightsCount = await getFlightsCount(\r\n      departureCityFilter,\r\n      arrivalCityFilter\r\n    );\r\n\r\n    setFlights(flights);\r\n    setTotalFlightsNumber(flightsCount);\r\n  };\r\n\r\n  const fetchHints = async () => {\r\n    const hints = await getFlightSearchHints({\r\n      departureCity: departureCityFilter,\r\n      arrivalCity: arrivalCityFilter,\r\n    });\r\n    const departureCities = hints.map((value) => value.departureCity);\r\n    const arrivalCities = hints.map((value) => value.arrivalCity);\r\n    setDepartureCityHints([...new Set(departureCities)]);\r\n    setArrivalCityHints([...new Set(arrivalCities)]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFlights();\r\n  }, [\r\n    token,\r\n    offset,\r\n    departureCityFilter,\r\n    arrivalCityFilter,\r\n    isEditDialogOpened,\r\n    isCreateDialogOpened,\r\n  ]);\r\n\r\n  const onFilterChange = (values) => {\r\n    clearTimeout(timer);\r\n    if (!values[0] && !values[1]) {\r\n      setDepartureCityHints([]);\r\n      setArrivalCityHints([]);\r\n    }\r\n    if (values[0] || values[1]) {\r\n      timer = setTimeout(() => fetchHints(), 500);\r\n    }\r\n  };\r\n\r\n  const onSearchClick = (values) => {\r\n    setDepartureCityFilter(values[0]);\r\n    setArrivalCityFilter(values[1]);\r\n    setPage(0);\r\n    setOffset(0);\r\n  };\r\n\r\n  const onPageChange = (page) => {\r\n    setPage(page);\r\n    setOffset(page * elementsOnAdminTable);\r\n  };\r\n\r\n  const openMoreInfoDialog = (id) => {\r\n    setFlightIdInfo(id);\r\n    setIsMoreInfoDialogOpened(true);\r\n  };\r\n\r\n  const openEditInfoDialog = (row) => {\r\n    setFlightForEditing(row);\r\n    setIsEditDialogOpened(true);\r\n  };\r\n\r\n  const closeCreateFlightDialog = () => {\r\n    setIsCreateDialogOpened(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CustomDialog\r\n        title=\"Create flight\"\r\n        isOpened={isCreateDialogOpened}\r\n        DialogContent={\r\n          <FlightCreateDialogContent closeDialog={closeCreateFlightDialog} />\r\n        }\r\n        closeDialog={closeCreateFlightDialog}\r\n      />\r\n      <CustomDialog\r\n        title=\"More info\"\r\n        isOpened={isMoreInfoDialogOpened}\r\n        DialogContent={<FlightInfoDialogContent flightId={flightIdEdit} />}\r\n        closeDialog={() => setIsMoreInfoDialogOpened(false)}\r\n      />\r\n      <CustomDialog\r\n        title=\"Edit flight\"\r\n        isOpened={isEditDialogOpened}\r\n        DialogContent={\r\n          <FlightEditDialogContent\r\n            flightForEditing={flightForEditing}\r\n            closeDialog={() => setIsEditDialogOpened(false)}\r\n          />\r\n        }\r\n        closeDialog={() => setIsEditDialogOpened(false)}\r\n      />\r\n      <div className={classes.tableHeader}>\r\n        <Typography variant=\"h3\">Flights</Typography>\r\n        <Filter\r\n          fields={['Departure city', 'Arrival city']}\r\n          fieldsOptions={[departureCityHints, arrivalCityHints]}\r\n          onFilterConfirmed={onFilterChange}\r\n          onSearchClick={onSearchClick}\r\n        />\r\n      </div>\r\n      <Table\r\n        page={page}\r\n        rows={rows}\r\n        columns={columns}\r\n        onPageChange={onPageChange}\r\n        rowCount={totalFlightsNumber}\r\n        onAddClick={() => setIsCreateDialogOpened(true)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminFlightsPage;\r\n","import AdminFlightsPage from './AdminFlightsPage';\nexport default AdminFlightsPage;\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport { Grid } from '@material-ui/core';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {\r\n  setIsSimpleSuccessNotificationActive,\r\n  setSimpleSuccessNotificationText,\r\n} from 'reduxStore/notificationsSlice';\r\nimport { getAirplaneTypes, addAirplane } from 'api/airplaneRequests';\r\nimport { getAllCompanies } from 'api/companyRequests';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formField: {\r\n    width: '100%',\r\n  },\r\n  airplaneCreationForm: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst AirplaneCreationStep = ({ handleNext, handleAirplaneCreation }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [airplaneTypeId, setAirplaneTypeId] = useState();\r\n  const [companyId, setCompanyId] = useState();\r\n  const [model, setModel] = useState('');\r\n  const [registrationNumber, setRegistrationNumber] = useState();\r\n  const [rowsAmount, setRowsAmount] = useState();\r\n  const [columnsAmount, setColumnsAmount] = useState();\r\n  const [baggageCapacity, setBaggageCapacity] = useState();\r\n\r\n  const [airplaneType, setAirplaneType] = useState('');\r\n  const [company, setCompany] = useState('');\r\n\r\n  const [airplaneTypes, setAirplaneTypes] = useState([]);\r\n  const [companies, setCompanies] = useState([]);\r\n\r\n  const [isModelValid, setIsModelValid] = useState(true);\r\n  const [isRegistrationNumberValid, setIsRegistrationNumberValid] =\r\n    useState(true);\r\n  const [isAirplaneTypeValid, setIsAirplaneTypeValid] = useState(true);\r\n  const [isRowsNumberValid, setIsRowsNumberValid] = useState(true);\r\n  const [isColumnsNumberValid, setIsColumnsNumberValid] = useState(true);\r\n  const [isBaggageCapacityValid, setIsBaggageCapacityValid] = useState(true);\r\n  const [isCompanyValid, setIsCompanyValid] = useState(true);\r\n\r\n  const [serverError, setServerError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const airplaneTypes = await getAirplaneTypes();\r\n      const companies = await getAllCompanies();\r\n\r\n      setAirplaneTypes(airplaneTypes);\r\n      setCompanies(companies);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleSave = async () => {\r\n    setServerError('');\r\n    let isValid = true;\r\n    if (!model) {\r\n      setIsModelValid(false);\r\n      isValid = false;\r\n    } else setIsModelValid(true);\r\n    if (!registrationNumber || registrationNumber.length > 7) {\r\n      setIsRegistrationNumberValid(false);\r\n      isValid = false;\r\n    } else setIsRegistrationNumberValid(true);\r\n    if (!airplaneTypeId) {\r\n      setIsAirplaneTypeValid(false);\r\n      isValid = false;\r\n    } else setIsAirplaneTypeValid(true);\r\n    if (!rowsAmount || parseInt(rowsAmount, 10) <= 0) {\r\n      setIsRowsNumberValid(false);\r\n      isValid = false;\r\n    } else setIsRowsNumberValid(true);\r\n    if (!columnsAmount || parseInt(columnsAmount, 10) <= 0) {\r\n      setIsColumnsNumberValid(false);\r\n      isValid = false;\r\n    } else setIsColumnsNumberValid(true);\r\n    if (!baggageCapacity || parseInt(baggageCapacity, 10) <= 0) {\r\n      setIsBaggageCapacityValid(false);\r\n      isValid = false;\r\n    } else setIsBaggageCapacityValid(true);\r\n    if (!companyId) {\r\n      setIsCompanyValid(false);\r\n      isValid = false;\r\n    } else setIsCompanyValid(true);\r\n\r\n    if (isValid) {\r\n      const [createdAirplane, error] = await addAirplane(\r\n        airplaneTypeId,\r\n        companyId,\r\n        model,\r\n        registrationNumber,\r\n        rowsAmount,\r\n        columnsAmount,\r\n        baggageCapacity\r\n      );\r\n\r\n      if (error) {\r\n        setServerError(error.response?.data?.message);\r\n      } else {\r\n        dispatch(setIsSimpleSuccessNotificationActive(true));\r\n        dispatch(\r\n          setSimpleSuccessNotificationText(\r\n            'The airplane was registered successfully!'\r\n          )\r\n        );\r\n        handleAirplaneCreation(createdAirplane);\r\n        handleNext();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className={classes.airplaneCreationForm}>\r\n        <Grid container direction=\"column\" spacing={1}>\r\n          <Grid item lg={12}>\r\n            <TextField\r\n              required\r\n              className={classes.formField}\r\n              error={!isModelValid}\r\n              helperText={!isModelValid && \"It's required field\"}\r\n              variant=\"outlined\"\r\n              label=\"Model\"\r\n              onChange={(e) => setModel(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={12}>\r\n            <TextField\r\n              required\r\n              className={classes.formField}\r\n              error={!isRegistrationNumberValid}\r\n              helperText={\r\n                !isRegistrationNumberValid &&\r\n                \"It's required field and containes less 7 symbols\"\r\n              }\r\n              variant=\"outlined\"\r\n              label=\"Registration number\"\r\n              onChange={(e) => setRegistrationNumber(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={12}>\r\n            <FormControl\r\n              className={classes.formField}\r\n              error={!isAirplaneTypeValid}\r\n              required\r\n            >\r\n              <InputLabel>Airplane type</InputLabel>\r\n              <Select\r\n                value={airplaneType}\r\n                onChange={(event) => setAirplaneType(event.target.value)}\r\n              >\r\n                {airplaneTypes.map((item) => (\r\n                  <MenuItem\r\n                    key={item.id}\r\n                    value={item.typeName}\r\n                    onClick={() => setAirplaneTypeId(item.id)}\r\n                  >\r\n                    {item.typeName}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              <FormHelperText>\r\n                {!isAirplaneTypeValid && \"It's required field\"}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item container spacing={1}>\r\n            <Grid item lg={6}>\r\n              <TextField\r\n                required\r\n                className={classes.formField}\r\n                type=\"number\"\r\n                error={!isRowsNumberValid}\r\n                helperText={\r\n                  !isRowsNumberValid &&\r\n                  \"It's required field (Only positive value)\"\r\n                }\r\n                variant=\"outlined\"\r\n                label=\"Rows number\"\r\n                onChange={(e) => setRowsAmount(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={6}>\r\n              <TextField\r\n                required\r\n                className={classes.formField}\r\n                type=\"number\"\r\n                error={!isColumnsNumberValid}\r\n                helperText={\r\n                  !isColumnsNumberValid &&\r\n                  \"It's required field (Only positive value)\"\r\n                }\r\n                variant=\"outlined\"\r\n                label=\"Places number in a row\"\r\n                onChange={(e) => setColumnsAmount(e.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item lg={12}>\r\n            <TextField\r\n              required\r\n              className={classes.formField}\r\n              type=\"number\"\r\n              error={!isBaggageCapacityValid}\r\n              helperText={\r\n                !isBaggageCapacityValid &&\r\n                \"It's required field (Only positive value)\"\r\n              }\r\n              variant=\"outlined\"\r\n              label=\"Baggage capacity\"\r\n              onChange={(e) => setBaggageCapacity(e.target.value)}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">Kg</InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={12}>\r\n            <FormControl\r\n              className={classes.formField}\r\n              error={!isCompanyValid}\r\n              required\r\n            >\r\n              <InputLabel>Company</InputLabel>\r\n              <Select\r\n                value={company}\r\n                onChange={(event) => setCompany(event.target.value)}\r\n              >\r\n                {companies.map((item) => (\r\n                  <MenuItem\r\n                    key={item.id}\r\n                    value={item.name}\r\n                    onClick={() => setCompanyId(item.id)}\r\n                  >\r\n                    {item.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              <FormHelperText>\r\n                {!isCompanyValid && \"It's required field\"}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item lg={12}>\r\n            <Typography variant=\"subtitle1\" color=\"error\">\r\n              {serverError}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <div className={classes.actionsContainer}>\r\n        <div>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleSave}\r\n            className={classes.button}\r\n          >\r\n            Create\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AirplaneCreationStep;\r\n","import API, { bearerAuthorization } from 'api';\r\nimport store from 'reduxStore/store';\r\n\r\nimport { placeTypesEndPoint, placesEndPoint } from 'constants';\r\n\r\nconst getPlaceTypes = async () => {\r\n  return await API.get(`${placeTypesEndPoint}`)\r\n    .then((response) => response.data)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nconst postPlacesList = async (requestModel) => {\r\n  let token = store.getState().token;\r\n\r\n  await API.post(\r\n    `${placesEndPoint}`,\r\n    requestModel,\r\n    bearerAuthorization(token.jwtToken)\r\n  ).catch((error) => console.log(error));\r\n};\r\n\r\nconst blockPlace = async (placeId, userId) => {\r\n  await API.put(\r\n    `${placesEndPoint}/${placeId}/block?blockingByUserId=${\r\n      userId ? userId : ''\r\n    }`\r\n  );\r\n};\r\n\r\nconst unblockPlace = async (placeId) => {\r\n  await API.put(`${placesEndPoint}/${placeId}/unblock`);\r\n};\r\n\r\nexport { getPlaceTypes, postPlacesList, blockPlace, unblockPlace };\r\n","import React, { useEffect, useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete, {\r\n  createFilterOptions,\r\n} from '@material-ui/lab/Autocomplete';\r\n\r\nimport { getPlaceTypes } from 'api/placeRequests';\r\n\r\nconst filter = createFilterOptions();\r\n\r\nconst AirplaneTypesAutocomplete = ({ placeType, index, handleChange }) => {\r\n  const [placeTypes, setPlaceTypes] = useState([]);\r\n\r\n  const [selectedPlaceType, setSelectedPlaceType] = useState(placeType);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n\r\n  const [dialogValue, setDialogValue] = useState({\r\n    placeTypeName: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const placeTypes = await getPlaceTypes();\r\n\r\n      setPlaceTypes(placeTypes);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setDialogValue({\r\n      placeTypeName: '',\r\n    });\r\n\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  const handleTypeSubmitCreation = (event) => {\r\n    event.preventDefault();\r\n    const prevType = selectedPlaceType;\r\n    prevType.id = '';\r\n    prevType.name = dialogValue.placeTypeName;\r\n\r\n    setSelectedPlaceType(prevType);\r\n    handleChange(index, prevType);\r\n\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Autocomplete\r\n        value={selectedPlaceType}\r\n        onChange={(event, newValue) => {\r\n          if (typeof newValue === 'string') {\r\n            setTimeout(() => {\r\n              setIsDialogOpen(true);\r\n              setDialogValue({\r\n                placeTypeName: newValue,\r\n              });\r\n            });\r\n          } else if (newValue && newValue.inputValue) {\r\n            setIsDialogOpen(true);\r\n            setDialogValue({\r\n              placeTypeName: newValue.inputValue,\r\n            });\r\n          } else {\r\n            let prevType = selectedPlaceType;\r\n            if (!prevType) {\r\n              prevType = {\r\n                id: '',\r\n                name: '',\r\n                amount: '',\r\n                isTypeValid: true,\r\n                isAmountValid: true,\r\n              };\r\n            }\r\n            prevType.id = newValue?.id;\r\n            prevType.name = newValue?.name;\r\n            setSelectedPlaceType(prevType);\r\n            handleChange(index, prevType);\r\n          }\r\n        }}\r\n        filterOptions={(options, params) => {\r\n          const filtered = filter(options, params);\r\n\r\n          if (params.inputValue !== '') {\r\n            filtered.push({\r\n              inputValue: params.inputValue,\r\n              name: `Add \"${params.inputValue}\"`,\r\n            });\r\n          }\r\n\r\n          return filtered;\r\n        }}\r\n        options={placeTypes}\r\n        getOptionLabel={(option) => {\r\n          if (typeof option === 'string') {\r\n            return option;\r\n          }\r\n          if (option.inputValue) {\r\n            return option.inputValue;\r\n          }\r\n          return option.name || '';\r\n        }}\r\n        selectOnFocus\r\n        clearOnBlur\r\n        renderOption={(option) => option.name}\r\n        freeSolo\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label=\"Place type\"\r\n            variant=\"outlined\"\r\n            required\r\n            error={placeType ? !placeType.isTypeValid : false}\r\n          />\r\n        )}\r\n      />\r\n      <Dialog\r\n        open={isDialogOpen}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <form onSubmit={handleTypeSubmitCreation}>\r\n          <DialogTitle id=\"form-dialog-title\">Add a new place type</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Did we miss any type in our list? Please, add it!\r\n            </DialogContentText>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              value={dialogValue.placeTypeName}\r\n              onChange={(event) =>\r\n                setDialogValue({\r\n                  ...dialogValue,\r\n                  placeTypeName: event.target.value,\r\n                })\r\n              }\r\n              label=\"Type name\"\r\n              type=\"text\"\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button type=\"submit\" color=\"primary\">\r\n              Add\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AirplaneTypesAutocomplete;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Grid } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport AirplaneTypesAutocomplete from './AirplaneTypesAutocomplete';\r\nimport { postPlacesList } from 'api/placeRequests';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  textField: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst FulfillAirplaneStep = ({\r\n  airplane: { id, rows, columns },\r\n  handleNext,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const [placeTypes, setPlaceTypes] = useState([]);\r\n\r\n  const handleFulfillAirplane = async () => {\r\n    let isValid = true;\r\n    const newPlaceTypes = [...placeTypes];\r\n    newPlaceTypes.forEach((placeType, index) => {\r\n      let isValidValue = true;\r\n      if (!placeType) {\r\n        console.log('hehe');\r\n        placeType = {\r\n          isTypeValid: false,\r\n          isAmountValid: false,\r\n        };\r\n        isValidValue = false;\r\n        isValid = false;\r\n      }\r\n      if (isValidValue) {\r\n        if (!placeType.name) {\r\n          placeType.isTypeValid = false;\r\n          isValidValue = false;\r\n          isValid = false;\r\n        } else {\r\n          placeType.isTypeValid = true;\r\n        }\r\n        if (!placeType.amount || parseInt(placeType.amount, 10) < 0) {\r\n          placeType.isAmountValid = false;\r\n          isValidValue = false;\r\n          isValid = false;\r\n        } else {\r\n          placeType.isAmountValid = true;\r\n        }\r\n      }\r\n      newPlaceTypes[index] = placeType;\r\n    });\r\n\r\n    setPlaceTypes(newPlaceTypes);\r\n\r\n    if (isValid) {\r\n      const requestPlaces = placeTypes.map((value) => {\r\n        return {\r\n          placeTypeId: value.id ?? null,\r\n          placeTypeName: value.name,\r\n          placeAmount: parseInt(value.amount, 10),\r\n        };\r\n      });\r\n      console.log('he');\r\n      await postPlacesList({\r\n        airplaneId: id,\r\n        places: requestPlaces,\r\n      });\r\n      console.log('he');\r\n\r\n      handleNext();\r\n    }\r\n  };\r\n\r\n  const handleAddPlaceType = (newValue) => {\r\n    const updatePlaceTypes = [\r\n      ...placeTypes,\r\n      {\r\n        id: '',\r\n        name: '',\r\n        amount: '',\r\n        isTypeValid: true,\r\n        isAmountValid: true,\r\n      },\r\n    ];\r\n\r\n    setPlaceTypes(updatePlaceTypes);\r\n  };\r\n\r\n  const handleChangeSomePlaceType = (key, newValue) => {\r\n    const updatePlaceTypes = [...placeTypes];\r\n    updatePlaceTypes[key] = newValue;\r\n\r\n    setPlaceTypes(updatePlaceTypes);\r\n  };\r\n\r\n  const handleChangeAmountOfPlaces = (key, newValue) => {\r\n    const updatePlaceTypes = [...placeTypes];\r\n    updatePlaceTypes[key].amount = newValue;\r\n\r\n    setPlaceTypes(updatePlaceTypes);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={2}>\r\n        {placeTypes.map((value, key) => {\r\n          return (\r\n            <Grid key={key} item container lg={12} spacing={1}>\r\n              <Grid item lg={6}>\r\n                <AirplaneTypesAutocomplete\r\n                  placeType={value}\r\n                  index={key}\r\n                  handleChange={handleChangeSomePlaceType}\r\n                  className={classes.textField}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6}>\r\n                <TextField\r\n                  required\r\n                  error={value ? !value.isAmountValid : false}\r\n                  className={classes.textField}\r\n                  onChange={(event) =>\r\n                    handleChangeAmountOfPlaces(key, event.target.value)\r\n                  }\r\n                  variant=\"outlined\"\r\n                  label=\"Amount of such places\"\r\n                  type=\"number\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n      <Button\r\n        variant=\"outlined\"\r\n        onClick={handleAddPlaceType}\r\n        startIcon={<AddIcon />}\r\n      >\r\n        Add new place type\r\n      </Button>\r\n      <div className={classes.actionsContainer}>\r\n        <div>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleFulfillAirplane}\r\n            className={classes.button}\r\n          >\r\n            Fulfill\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FulfillAirplaneStep;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { getAirplanePlacePrices, putAirplanePrices } from 'api/priceRequests';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  textField: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst columns = [\r\n  { field: 'placeType', headerName: 'Place type', flex: 1 },\r\n  {\r\n    field: 'ticketPrice',\r\n    headerName: 'Price',\r\n    flex: 1,\r\n    type: 'number',\r\n    editable: true,\r\n    valueFormatter: (params) => {\r\n      return `${params.value} $`;\r\n    },\r\n  },\r\n];\r\n\r\nconst PricesCreationStep = ({ airplaneId, handleBackToAdminTable }) => {\r\n  const classes = useStyles();\r\n  const [prices, setPrices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const newPrices = await getAirplanePlacePrices(airplaneId);\r\n\r\n      setPrices(newPrices);\r\n    };\r\n\r\n    fetchData();\r\n  }, [airplaneId]);\r\n\r\n  const handleCellEdit = (row) => {\r\n    const newPrices = prices;\r\n    for (let i = 0; i < newPrices.length; i++) {\r\n      if (newPrices[i].id === row.id) {\r\n        newPrices[i].ticketPrice = row.props.value;\r\n        break;\r\n      }\r\n    }\r\n\r\n    setPrices(newPrices);\r\n  };\r\n\r\n  const handlePricesSave = async () => {\r\n    const pricesForUpdate = prices.map((value) => {\r\n      return {\r\n        id: value.id,\r\n        airplaneId: value.airplaneId,\r\n        placeTypeId: value.placeTypeId,\r\n        ticketPrice: parseInt(value.ticketPrice, 10),\r\n      };\r\n    });\r\n\r\n    await putAirplanePrices(pricesForUpdate);\r\n    handleBackToAdminTable();\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: 400, width: '100%' }}>\r\n      <DataGrid\r\n        rows={prices}\r\n        columns={columns}\r\n        pageSize={5}\r\n        disableColumnMenu\r\n        onEditCellChange={handleCellEdit}\r\n      />\r\n      <div className={classes.actionsContainer}>\r\n        <div>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handlePricesSave}\r\n            className={classes.button}\r\n          >\r\n            Save prices\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PricesCreationStep;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\nimport AirplaneCreationStep from './steps/AirplaneCreationStep';\r\nimport FulfillAirplaneStep from './steps/FulfillAirplanesStep/FulfillAirplaneStep';\r\nimport PricesCreationStep from './steps/PricesCreationStep';\r\n\r\nconst getSteps = () => {\r\n  return ['Create airplane', 'Fulfill created airplane', 'Create prices'];\r\n};\r\n\r\nconst getStepContent = (\r\n  step,\r\n  handleNext,\r\n  handleBackToAdminTable,\r\n  createdAirplane,\r\n  createdAirplaneId,\r\n  handleAirplaneCreation\r\n) => {\r\n  switch (step) {\r\n    case 0:\r\n      return (\r\n        <AirplaneCreationStep\r\n          handleNext={handleNext}\r\n          handleAirplaneCreation={handleAirplaneCreation}\r\n        />\r\n      );\r\n    case 1:\r\n      return (\r\n        <FulfillAirplaneStep\r\n          airplane={createdAirplane}\r\n          handleNext={handleNext}\r\n        />\r\n      );\r\n    case 2:\r\n      return (\r\n        <PricesCreationStep\r\n          airplaneId={createdAirplaneId}\r\n          handleBackToAdminTable={handleBackToAdminTable}\r\n        />\r\n      );\r\n    default:\r\n      return <></>;\r\n  }\r\n};\r\n\r\nconst AirplaneCreationStepper = () => {\r\n  let history = useHistory();\r\n\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const steps = getSteps();\r\n\r\n  const [createdAirplaneId, setCreatedAirplaneId] = useState();\r\n  const [createdAirplane, setCreatedAirplane] = useState();\r\n\r\n  const handleAirplaneCreation = (airplane) => {\r\n    setCreatedAirplane(airplane);\r\n    setCreatedAirplaneId(airplane?.id);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBackToAdminTable = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"inherit\"\r\n        onClick={handleBackToAdminTable}\r\n        startIcon={<ArrowBackIosIcon />}\r\n      >\r\n        Back\r\n      </Button>\r\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n        {steps.map((label, index) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n            <StepContent>\r\n              {getStepContent(\r\n                index,\r\n                handleNext,\r\n                handleBackToAdminTable,\r\n                createdAirplane,\r\n                createdAirplaneId,\r\n                handleAirplaneCreation\r\n              )}\r\n            </StepContent>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AirplaneCreationStepper;\r\n","import AirplaneCreationStepper from './AirplaneCreationStepper';\r\nexport default AirplaneCreationStepper;\r\n","import AirplaneCreationPage from './AirplaneCreationPage';\r\nexport default AirplaneCreationPage;\r\n","import React from 'react';\r\n\r\nimport AirplaneCreationStepper from './AirplaneCreationStepper';\r\n\r\nconst AirplaneCreationPage = () => {\r\n  return (\r\n    <>\r\n      <AirplaneCreationStepper />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AirplaneCreationPage;\r\n","import API, { bearerAuthorization } from 'api';\r\nimport store from 'reduxStore/store';\r\n\r\nimport { bookingsEndPoint } from 'constants';\r\n\r\nconst postBooking = async (booking) => {\r\n  let token = store.getState().token;\r\n\r\n  return await API.post(\r\n    `${bookingsEndPoint}`,\r\n    booking,\r\n    bearerAuthorization(token.jwtToken)\r\n  )\r\n    .then((response) => [response.data, null])\r\n    .catch((error) => [null, error]);\r\n};\r\n\r\nexport { postBooking };\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport FlightsItemInfo from 'components/FlightsPage/FlightsItemInfo';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  selectedFlightPaper: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst SelectedFlightStep = ({ selectedFlight }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.selectedFlightPaper}>\r\n      <FlightsItemInfo flight={selectedFlight} />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SelectedFlightStep;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { getId } from 'services/token-service';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  placeButton: {\r\n    margin: 2,\r\n    height: 25,\r\n    width: 25,\r\n    minWidth: 0,\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nconst PlaceItem = ({\r\n  selectedPlaces,\r\n  place,\r\n  handlePlaceSelection,\r\n  handlePlaceRejection,\r\n}) => {\r\n  const classes = useStyles();\r\n  const token = useSelector((state) => state.token);\r\n  const userId = getId(token.jwtToken);\r\n\r\n  const [selectedPlace, setSelectedPlace] = useState(() => {\r\n    let isSelected = false;\r\n\r\n    selectedPlaces.forEach((selectedPlace) => {\r\n      if (selectedPlace.id === place.id) {\r\n        isSelected = true;\r\n      }\r\n    });\r\n\r\n    if (!place.isFree) {\r\n      isSelected = true;\r\n    }\r\n\r\n    return {\r\n      ...place,\r\n      isSelected: isSelected,\r\n    };\r\n  });\r\n\r\n  const handlePlaceClick = () => {\r\n    if (selectedPlace.isSelected) {\r\n      setSelectedPlace({\r\n        ...selectedPlace,\r\n        isSelected: false,\r\n      });\r\n      handlePlaceRejection(place);\r\n    } else {\r\n      setSelectedPlace({\r\n        ...selectedPlace,\r\n        isSelected: true,\r\n      });\r\n      handlePlaceSelection(place);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {place.bookingId ||\r\n      (!place.isFree &&\r\n        (!place.lastBlockedByUserId ||\r\n          place.lastBlockedByUserId !== userId)) ? (\r\n        <IconButton disabled className={classes.placeButton}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : (\r\n        <Button\r\n          variant=\"contained\"\r\n          color={!selectedPlace.isSelected ? 'primary' : 'default'}\r\n          key={place.id}\r\n          className={classes.placeButton}\r\n          onClick={handlePlaceClick}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  baggageService: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  baggageWeightField: {\r\n    width: '100%',\r\n  },\r\n  baggageServices: {\r\n    padding: '15px',\r\n  },\r\n}));\r\n\r\nconst BaggageRegistration = ({\r\n  selectedFlight,\r\n  isBaggageServiceChecked,\r\n  handleBaggageChecked,\r\n  baggageWeight,\r\n  handleBaggageWeightChange,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const [isBaggageWeightValid, setIsBaggageWeightValid] = useState(true);\r\n  const [baggageWeightHelperText, setBaggageWeightHelperText] = useState('');\r\n\r\n  const onBaggageWeightChange = (event) => {\r\n    if (event.target.value < 0) {\r\n      setIsBaggageWeightValid(false);\r\n      setBaggageWeightHelperText('Value must be greater than or equal to 0 Kg');\r\n    } else if (\r\n      event.target.value >\r\n      selectedFlight?.airplane?.onePersonBaggageLimitInKilograms\r\n    ) {\r\n      setIsBaggageWeightValid(false);\r\n      setBaggageWeightHelperText(\r\n        `Value must be less than or equal to ${selectedFlight?.airplane?.onePersonBaggageLimitInKilograms} Kg`\r\n      );\r\n    } else if (!isBaggageWeightValid) {\r\n      setIsBaggageWeightValid(true);\r\n    }\r\n    handleBaggageWeightChange(event);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.baggageService}>\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={isBaggageServiceChecked}\r\n            onChange={handleBaggageChecked}\r\n          />\r\n        }\r\n        label=\"Will you have baggage?\"\r\n      />\r\n      {isBaggageServiceChecked ? (\r\n        <Grid container spacing={2}>\r\n          <Grid item lg>\r\n            <TextField\r\n              error={!isBaggageWeightValid}\r\n              helperText={!isBaggageWeightValid && baggageWeightHelperText}\r\n              className={classes.baggageWeightField}\r\n              required\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              label=\"Your baggage weight\"\r\n              defaultValue={baggageWeight}\r\n              onChange={onBaggageWeightChange}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">Kg</InputAdornment>\r\n                ),\r\n                inputProps: {\r\n                  min: 0,\r\n                  max: selectedFlight?.airplane\r\n                    ?.onePersonBaggageLimitInKilograms,\r\n                },\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={8}>\r\n            <Paper className={classes.baggageServices} variant=\"outlined\">\r\n              <Grid container>\r\n                <Grid item lg={12}>\r\n                  <Typography align=\"right\">\r\n                    Price for 1 Kg overweight: {selectedFlight?.overweightPrice}{' '}\r\n                    $\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item lg={12}>\r\n                  <Typography align=\"right\">\r\n                    Free Baggage Limit:{' '}\r\n                    {selectedFlight?.freeBaggageLimitInKilograms} Kg\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item lg={12}>\r\n                  <Typography align=\"right\">\r\n                    Maximum Baggage Limit:{' '}\r\n                    {selectedFlight?.airplane?.onePersonBaggageLimitInKilograms}{' '}\r\n                    Kg\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      ) : null}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default BaggageRegistration;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nimport PlaceItem from './PlaceItem';\r\nimport BaggageRegistration from './BaggageRegistration';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  placeSelectionPapper: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  placesSection: {\r\n    display: 'inline',\r\n  },\r\n  placeButton: {\r\n    margin: 2,\r\n    height: 25,\r\n    width: 25,\r\n    minWidth: 0,\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nconst columns = [\r\n  { field: 'placeType', headerName: 'Place type', flex: 1 },\r\n  { field: 'row', headerName: 'Place row', flex: 1 },\r\n  { field: 'column', headerName: 'Place column', flex: 1 },\r\n  {\r\n    field: 'price',\r\n    headerName: 'Price',\r\n    flex: 1,\r\n    valueFormatter: (params) => {\r\n      return `${params.value} $`;\r\n    },\r\n  },\r\n];\r\n\r\nconst PlaceSelectionStep = ({\r\n  selectedPlaces,\r\n  selectedFlight,\r\n  handlePlaceSelection,\r\n  handlePlaceRejection,\r\n  isBaggageServiceChecked,\r\n  handleBaggageChecked,\r\n  baggageWeight,\r\n  handleBaggageWeightChange,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const dataGridRows = selectedPlaces.map((value) => {\r\n    let ticketPrice;\r\n\r\n    selectedFlight.airplane.prices.forEach((price) => {\r\n      if (price.placeType === value.placeType) {\r\n        ticketPrice = price.ticketPrice;\r\n      }\r\n    });\r\n\r\n    return {\r\n      id: value.id,\r\n      placeType: value.placeType,\r\n      row: value.row,\r\n      column: value.column,\r\n      price: ticketPrice,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Paper className={classes.placeSelectionPapper}>\r\n      <Grid container justify=\"center\" spacing={3}>\r\n        <Grid item>\r\n          <Paper>\r\n            <div className={classes.placesSection}>\r\n              {selectedFlight.airplane.places.map((value) => {\r\n                return (\r\n                  <>\r\n                    <PlaceItem\r\n                      selectedPlaces={selectedPlaces}\r\n                      key={value.id}\r\n                      place={value}\r\n                      handlePlaceSelection={handlePlaceSelection}\r\n                      handlePlaceRejection={handlePlaceRejection}\r\n                    />\r\n                    {value.column === selectedFlight.airplane.columns - 1 ? (\r\n                      <br />\r\n                    ) : null}\r\n                  </>\r\n                );\r\n              })}\r\n            </div>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item lg={8}>\r\n          <DataGrid rows={dataGridRows} columns={columns} disableColumnMenu />\r\n        </Grid>\r\n        <Grid item lg={9}>\r\n          <BaggageRegistration\r\n            selectedFlight={selectedFlight}\r\n            isBaggageServiceChecked={isBaggageServiceChecked}\r\n            handleBaggageChecked={handleBaggageChecked}\r\n            baggageWeight={baggageWeight}\r\n            handleBaggageWeightChange={handleBaggageWeightChange}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PlaceSelectionStep;\r\n","import PlaceSelectionStep from './PlaceSelectionStep';\r\nexport default PlaceSelectionStep;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport {\r\n  setFirstName,\r\n  setFirstNameValid,\r\n  setLastName,\r\n  setLastNameValid,\r\n  setEmail,\r\n  setEmailValid,\r\n  setPhone,\r\n} from 'reduxStore/customerInfoSlice';\r\nimport {\r\n  checkEmail,\r\n  checkFirstName,\r\n  checkLastName,\r\n} from 'services/authorizationValidation';\r\nimport { getEmail } from 'services/token-service';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  contactDetailsPaper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  contactDetailsField: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst ContactDetailsStep = () => {\r\n  const classes = useStyles();\r\n  const customerInfo = useSelector((state) => state.customerInfo);\r\n  const token = useSelector((state) => state.token);\r\n  const userEmail = getEmail(token.jwtToken);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (userEmail && userEmail !== customerInfo.email) {\r\n      console.log(userEmail);\r\n      dispatch(setEmail(userEmail));\r\n    }\r\n  }, [customerInfo.email, userEmail, dispatch]);\r\n\r\n  const handleFirstNameChange = async (event) => {\r\n    dispatch(setFirstName(event.target.value));\r\n\r\n    const validationResult = await checkFirstName(event.target.value);\r\n    if (validationResult.isNotValid) dispatch(setFirstNameValid(false));\r\n    else dispatch(setFirstNameValid(true));\r\n  };\r\n\r\n  const handleLastNameChange = async (event) => {\r\n    dispatch(setLastName(event.target.value));\r\n\r\n    const validationResult = await checkLastName(event.target.value);\r\n    if (validationResult.isNotValid) dispatch(setLastNameValid(false));\r\n    else dispatch(setLastNameValid(true));\r\n  };\r\n\r\n  const handleEmailChange = async (event) => {\r\n    dispatch(setEmail(event.target.value));\r\n\r\n    const validationResult = await checkEmail(event.target.value);\r\n    setEmailErrorHelperText(validationResult.errorMessage);\r\n    if (validationResult.isNotValid) dispatch(setEmailValid(false));\r\n    else dispatch(setEmailValid(true));\r\n  };\r\n\r\n  const handlePhoneChange = async (event) => {\r\n    dispatch(setPhone(event.target.value));\r\n  };\r\n\r\n  const [emailErrorHelperText, setEmailErrorHelperText] = useState('');\r\n\r\n  return (\r\n    <Paper className={classes.contactDetailsPaper}>\r\n      <Grid container spacing={2}>\r\n        <Grid item lg={12}>\r\n          <TextField\r\n            className={classes.contactDetailsField}\r\n            error={!customerInfo.email.isValid}\r\n            helperText={!customerInfo.email.isValid && emailErrorHelperText}\r\n            variant=\"outlined\"\r\n            required\r\n            label=\"Email\"\r\n            disabled={userEmail ? true : false}\r\n            value={customerInfo.email.value}\r\n            onChange={(event) => handleEmailChange(event)}\r\n          />\r\n        </Grid>\r\n        <Grid item lg={6}>\r\n          <TextField\r\n            className={classes.contactDetailsField}\r\n            error={!customerInfo.firstName.isValid}\r\n            helperText={\r\n              !customerInfo.firstName.isValid && 'This field is required'\r\n            }\r\n            variant=\"outlined\"\r\n            required\r\n            label=\"First name\"\r\n            value={customerInfo.firstName.value}\r\n            onChange={(event) => handleFirstNameChange(event)}\r\n          />\r\n        </Grid>\r\n        <Grid item lg={6}>\r\n          <TextField\r\n            className={classes.contactDetailsField}\r\n            error={!customerInfo.lastName.isValid}\r\n            helperText={\r\n              !customerInfo.lastName.isValid && 'This field is required'\r\n            }\r\n            variant=\"outlined\"\r\n            required\r\n            label=\"Last Name\"\r\n            value={customerInfo.lastName.value}\r\n            onChange={(event) => handleLastNameChange(event)}\r\n          />\r\n        </Grid>\r\n        <Grid item lg={12}>\r\n          <TextField\r\n            className={classes.contactDetailsField}\r\n            variant=\"outlined\"\r\n            label=\"Phone number\"\r\n            value={customerInfo.phone}\r\n            onChange={(event) => handlePhoneChange(event)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ContactDetailsStep;\r\n","const getUniquePlacesInfo = (places, prices) => {\r\n  let uniquePlacesInfo = [];\r\n  places.forEach((place) => {\r\n    let isAlreadyMarked = false;\r\n    uniquePlacesInfo.forEach((element) => {\r\n      if (element.placeType === place.placeType) isAlreadyMarked = true;\r\n    });\r\n    if (!isAlreadyMarked) {\r\n      const amountOfIdenticalPlaces = getAmountOfIdenticalPlaces(\r\n        place.placeType,\r\n        places\r\n      );\r\n      let onePlacePrice = getPlacePrice(place, prices);\r\n      let totalPrice = onePlacePrice * amountOfIdenticalPlaces;\r\n\r\n      uniquePlacesInfo = [\r\n        ...uniquePlacesInfo,\r\n        {\r\n          amount: amountOfIdenticalPlaces,\r\n          placeType: place.placeType,\r\n          totalPrice: totalPrice,\r\n          onePlacePrice: onePlacePrice,\r\n        },\r\n      ];\r\n    }\r\n  });\r\n  return uniquePlacesInfo;\r\n};\r\n\r\nconst getPlacePrice = (place, prices) => {\r\n  for (let i = 0; i < prices.length; i++) {\r\n    if (prices[i].placeType === place.placeType) return prices[i].ticketPrice;\r\n  }\r\n};\r\n\r\nconst getAmountOfIdenticalPlaces = (placeType, places) => {\r\n  const identicalPlaces = places.filter(\r\n    (currentPlace) => currentPlace.placeType === placeType\r\n  );\r\n  return identicalPlaces.length;\r\n};\r\n\r\nexport { getUniquePlacesInfo };\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { getUniquePlacesInfo } from 'services/bookingPlacesService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  finalPricePaper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst FinalPriceStep = ({\r\n  placesTotalPrice,\r\n  baggageTotalPrice,\r\n  flight,\r\n  flight: {\r\n    airplane: { prices },\r\n    freeBaggageLimitInKilograms,\r\n    overweightPrice,\r\n  },\r\n  places,\r\n  baggageWeight,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const [uniquePlacesInfo] = useState(() =>\r\n    getUniquePlacesInfo(places, prices)\r\n  );\r\n\r\n  return (\r\n    <Paper className={classes.finalPricePaper}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h4\">\r\n            Total price: {placesTotalPrice + baggageTotalPrice || 0} $\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper variant=\"outlined\" className={classes.finalPricePaper}>\r\n            <Typography variant=\"h6\">Places: {placesTotalPrice} $</Typography>\r\n            <hr />\r\n            {uniquePlacesInfo.map((value) => {\r\n              return (\r\n                <Typography key={value.placeType}>\r\n                  {value.amount} x {value.placeType}: {value.totalPrice} $ (\r\n                  {value.onePlacePrice} $ per 1 place)\r\n                </Typography>\r\n              );\r\n            })}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper variant=\"outlined\" className={classes.finalPricePaper}>\r\n            <Typography variant=\"h6\">Baggage: {baggageTotalPrice} $</Typography>\r\n            <hr />\r\n            <Typography>\r\n              Your baggage: {baggageWeight} Kg (Free limit:{' '}\r\n              {freeBaggageLimitInKilograms} Kg)\r\n            </Typography>\r\n            {baggageWeight > freeBaggageLimitInKilograms && (\r\n              <Typography>\r\n                Overweight: {baggageWeight - freeBaggageLimitInKilograms} Kg\r\n              </Typography>\r\n            )}\r\n            <Typography>\r\n              Overweight price:{' '}\r\n              {baggageWeight > freeBaggageLimitInKilograms\r\n                ? (baggageWeight - freeBaggageLimitInKilograms) *\r\n                  overweightPrice\r\n                : 0}{' '}\r\n              $ ({overweightPrice} $ per 1 Kg)\r\n            </Typography>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default FinalPriceStep;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { postBooking } from 'api/bookingRequests';\r\nimport { blockPlace, unblockPlace } from 'api/placeRequests';\r\nimport { getId } from 'services/token-service';\r\nimport {\r\n  setFirstNameValid,\r\n  setLastNameValid,\r\n  setEmailValid,\r\n} from 'reduxStore/customerInfoSlice';\r\nimport { setIsBookingCreationActive } from 'reduxStore/notificationsSlice';\r\n\r\nimport SelectedFlightStep from './steps/SelectedFlightStep';\r\nimport PlaceSelectionStep from './steps/PlaceSelectionStep';\r\nimport ContactDetailsStep from './steps/ContactDetailsStep';\r\nimport FinalPriceStep from './steps/FinalPriceStep';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  errorMessage: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst selectedFlightStepTitle = 'Selected flight';\r\nconst placeSelectionStepTitle = 'Select places';\r\nconst contactDetailsStepTitle = 'Contact details';\r\nconst finalPriceStepTitle = 'Final price';\r\n\r\nconst getSteps = () => {\r\n  return [\r\n    selectedFlightStepTitle,\r\n    placeSelectionStepTitle,\r\n    contactDetailsStepTitle,\r\n    finalPriceStepTitle,\r\n  ];\r\n};\r\n\r\nconst FlightReservationStepper = ({ flight }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const customerInfo = useSelector((state) => state.customerInfo);\r\n  const dispatch = useDispatch();\r\n  const token = useSelector((state) => state.token);\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const [placesTotalPrice, setPlacesTotalPrice] = useState(0);\r\n  const [selectedPlaces, setSelectedPlaces] = useState(() => {\r\n    let places = [];\r\n    flight?.airplane?.places?.forEach((place) => {\r\n      if (\r\n        !place.isFree &&\r\n        !place.bookingId &&\r\n        place.lastBlockedByUserId === getId(token.jwtToken)\r\n      ) {\r\n        places = [...places, place];\r\n        setPlacesTotalPrice(\r\n          () => placesTotalPrice + getPlacePrice(place, flight.airplane.prices)\r\n        );\r\n      }\r\n    });\r\n    return places;\r\n  });\r\n  const [baggageWeight, setBaggageWeight] = useState(0);\r\n  const [isBaggageServiceChecked, setIsBaggageServiceChecked] = useState(false);\r\n\r\n  const [isReservationValid, setIsReservationValid] = useState(true);\r\n  const [errorHelperText, setErrorHelperText] = useState('');\r\n\r\n  const [baggageTotalPrice, setBaggageTotalPrice] = useState(0);\r\n\r\n  const handleBaggageWeightChange = (event) => {\r\n    if (event.target.value > flight.freeBaggageLimitInKilograms) {\r\n      setBaggageTotalPrice(\r\n        Math.ceil(event.target.value - flight.freeBaggageLimitInKilograms) *\r\n          flight.overweightPrice\r\n      );\r\n    } else {\r\n      setBaggageTotalPrice(0);\r\n    }\r\n    if (event.target.value) {\r\n      setBaggageWeight(event.target.value);\r\n    } else {\r\n      setBaggageWeight(0);\r\n    }\r\n  };\r\n\r\n  const handleBaggageChecked = (event) => {\r\n    setIsBaggageServiceChecked(event.target.checked);\r\n  };\r\n\r\n  const getPlacePrice = (place, prices) => {\r\n    for (let i = 0; i < prices.length; i++) {\r\n      if (place.placeType === prices[i].placeType) return prices[i].ticketPrice;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const handlePlaceSelection = (place) => {\r\n    blockPlace(place.id, getId(token.jwtToken));\r\n    setPlacesTotalPrice(\r\n      () => placesTotalPrice + getPlacePrice(place, flight.airplane.prices)\r\n    );\r\n    setSelectedPlaces([...selectedPlaces, place]);\r\n  };\r\n\r\n  const handlePlaceRejection = (place) => {\r\n    unblockPlace(place.id);\r\n    const newSelectedPlaces = selectedPlaces.filter(\r\n      (value) => value.id !== place.id\r\n    );\r\n    setPlacesTotalPrice(\r\n      () => placesTotalPrice - getPlacePrice(place, flight.airplane.prices)\r\n    );\r\n    setSelectedPlaces(newSelectedPlaces);\r\n  };\r\n\r\n  const handleNext = async () => {\r\n    if (steps[activeStep] === placeSelectionStepTitle) {\r\n      if (selectedPlaces.length === 0) {\r\n        setIsReservationValid(false);\r\n        setErrorHelperText('You have to choose places in airplane');\r\n      } else if (\r\n        baggageWeight < 0 ||\r\n        baggageWeight > flight?.airplane?.onePersonBaggageLimitInKilograms\r\n      ) {\r\n        setIsReservationValid(false);\r\n        setErrorHelperText('You have to enter correct baggage weight');\r\n      } else {\r\n        setIsReservationValid(true);\r\n        setErrorHelperText('');\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      }\r\n    } else if (steps[activeStep] === contactDetailsStepTitle) {\r\n      let isCustomInfoValid = true;\r\n      if (!customerInfo.firstName.value) {\r\n        dispatch(setFirstNameValid(false));\r\n        isCustomInfoValid = false;\r\n      }\r\n      if (!customerInfo.lastName.value) {\r\n        dispatch(setLastNameValid(false));\r\n        isCustomInfoValid = false;\r\n      }\r\n      if (!customerInfo.email.value) {\r\n        dispatch(setEmailValid(false));\r\n        isCustomInfoValid = false;\r\n      }\r\n      if (isCustomInfoValid) {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      }\r\n    } else {\r\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleFinish = async () => {\r\n    const placesId = selectedPlaces.map((value) => value.id);\r\n    const [createdBookingId, error] = await postBooking({\r\n      flightId: flight.id,\r\n      userId: getId(token.jwtToken),\r\n      placesId: placesId,\r\n      baggageWeightInKilograms: isBaggageServiceChecked\r\n        ? parseFloat(baggageWeight)\r\n        : 0,\r\n      customerFirstName: customerInfo.firstName.value,\r\n      customerLastName: customerInfo.lastName.value,\r\n      customerEmail: customerInfo.email.value,\r\n      customerPhone: customerInfo.phone,\r\n      placesTotalPrice: placesTotalPrice,\r\n      baggageTotalPrice: baggageTotalPrice,\r\n    });\r\n    if (createdBookingId) {\r\n      dispatch(setIsBookingCreationActive(true));\r\n      history.goBack();\r\n    } else {\r\n      setIsReservationValid(false);\r\n      setErrorHelperText(error.response?.data?.message);\r\n    }\r\n  };\r\n\r\n  const getStepContent = (step) => {\r\n    switch (step) {\r\n      case 0:\r\n        return <SelectedFlightStep selectedFlight={flight} />;\r\n      case 1:\r\n        return (\r\n          <PlaceSelectionStep\r\n            selectedPlaces={selectedPlaces}\r\n            selectedFlight={flight}\r\n            handlePlaceSelection={handlePlaceSelection}\r\n            handlePlaceRejection={handlePlaceRejection}\r\n            isBaggageServiceChecked={isBaggageServiceChecked}\r\n            handleBaggageChecked={handleBaggageChecked}\r\n            baggageWeight={baggageWeight}\r\n            handleBaggageWeightChange={handleBaggageWeightChange}\r\n          />\r\n        );\r\n      case 2:\r\n        return <ContactDetailsStep />;\r\n      case 3:\r\n        return (\r\n          <FinalPriceStep\r\n            placesTotalPrice={placesTotalPrice}\r\n            baggageTotalPrice={baggageTotalPrice}\r\n            flight={flight}\r\n            places={selectedPlaces}\r\n            baggageWeight={baggageWeight}\r\n          />\r\n        );\r\n      default:\r\n        return 'Unknown step';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n        {steps.map((label, index) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n            <StepContent>\r\n              {getStepContent(index)}\r\n              {!isReservationValid && (\r\n                <Typography\r\n                  className={classes.errorMessage}\r\n                  variant=\"h6\"\r\n                  color=\"error\"\r\n                >\r\n                  {errorHelperText}\r\n                </Typography>\r\n              )}\r\n              <div className={classes.actionsContainer}>\r\n                <div>\r\n                  <Button\r\n                    disabled={activeStep === 0}\r\n                    onClick={handleBack}\r\n                    className={classes.button}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                  {activeStep === steps.length - 1 ? (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={handleFinish}\r\n                      className={classes.button}\r\n                    >\r\n                      Finish\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={handleNext}\r\n                      className={classes.button}\r\n                    >\r\n                      Next\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </StepContent>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlightReservationStepper;\r\n","import FlightReservationStepper from './FlightReservationStepper';\r\nexport default FlightReservationStepper;\r\n","import FLightReservationPage from './FlightReservationPage';\r\nexport default FLightReservationPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\nimport { getFlight } from 'api/flightRequests';\r\n\r\nimport FlightReservationStepper from './FlightReservationStepper';\r\n\r\nconst FLightReservationPage = () => {\r\n  const location = useLocation();\r\n  let history = useHistory();\r\n\r\n  const [flight, setFlight] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const responseFlight = await getFlight(location.state?.flight.id);\r\n      setFlight(responseFlight);\r\n    };\r\n\r\n    fetchData();\r\n  }, [location.state?.flight.id]);\r\n\r\n  const handleBackToFlights = () => {\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"inherit\"\r\n        onClick={handleBackToFlights}\r\n        startIcon={<ArrowBackIosIcon />}\r\n      >\r\n        Back\r\n      </Button>\r\n      <FlightReservationStepper flight={flight || location.state?.flight} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FLightReservationPage;\r\n","import Alert from './Alert';\r\nexport default Alert;\r\n","import React from 'react';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst Alert = (props) => {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport SnackBar from '@material-ui/core/Snackbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {\r\n  setIsSimpleSuccessNotificationActive,\r\n  setSimpleSuccessNotificationText,\r\n} from 'reduxStore/notificationsSlice';\r\n\r\nimport Alert from 'shared/Alert';\r\n\r\nconst SuccessNotification = () => {\r\n  const notifications = useSelector((state) => state.notifications);\r\n  let timer = null;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const autoHide = async () => {\r\n      timer = await setTimeout(() => {\r\n        dispatch(setIsSimpleSuccessNotificationActive(false));\r\n        dispatch(setSimpleSuccessNotificationText(''));\r\n      }, 3000);\r\n    };\r\n\r\n    if (notifications.isSimpleSuccessNotificationActive) {\r\n      autoHide();\r\n    }\r\n  }, [notifications.isSimpleSuccessNotificationActive]);\r\n\r\n  const handleClose = () => {\r\n    dispatch(setIsSimpleSuccessNotificationActive(false));\r\n    dispatch(setSimpleSuccessNotificationText(''));\r\n  };\r\n\r\n  return (\r\n    <SnackBar open={notifications.isSimpleSuccessNotificationActive}>\r\n      <Alert onClose={handleClose} severity=\"success\">\r\n        <Typography variant=\"body1\">\r\n          {notifications.simpleSuccessNotificationText}\r\n        </Typography>\r\n      </Alert>\r\n    </SnackBar>\r\n  );\r\n};\r\n\r\nexport default SuccessNotification;\r\n","import React from 'react';\r\nimport { useLocation, useHistory } from 'react-router';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport SnackBar from '@material-ui/core/Snackbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { setIsBookingCreationActive } from 'reduxStore/notificationsSlice';\r\n\r\nimport Alert from 'shared/Alert';\r\n\r\nconst BookingCreationNotification = () => {\r\n  const notifications = useSelector((state) => state.notifications);\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    dispatch(setIsBookingCreationActive(false));\r\n  };\r\n\r\n  const handleGoToMyBookingsClick = () => {\r\n    history.push('/account');\r\n    dispatch(setIsBookingCreationActive(false));\r\n  };\r\n\r\n  return (\r\n    <SnackBar\r\n      open={notifications.isBookingCreationActive}\r\n      autoHideDuration={6000}\r\n    >\r\n      <Alert onClose={handleClose} severity=\"success\">\r\n        <Typography gutterBottom variant=\"body1\">\r\n          The ticket was booked successfully!\r\n        </Typography>\r\n        {location.pathname !== '/account' && (\r\n          <Button variant=\"outlined\" onClick={handleGoToMyBookingsClick}>\r\n            Go to my bookings\r\n          </Button>\r\n        )}\r\n      </Alert>\r\n    </SnackBar>\r\n  );\r\n};\r\n\r\nexport default BookingCreationNotification;\r\n","import Notifications from './Notifications';\r\nexport default Notifications;\r\n","import React from 'react';\r\n\r\nimport SuccessNotification from './SuccessNotification';\r\nimport BookingCreationNotification from './BookingCreationNotification';\r\n\r\nconst Notifications = () => {\r\n  return (\r\n    <>\r\n      <SuccessNotification />\r\n      <BookingCreationNotification />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { IconButton, Typography } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport red from '@material-ui/core/colors/red';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport {\r\n  setIsSimpleSuccessNotificationActive,\r\n  setSimpleSuccessNotificationText,\r\n} from 'reduxStore/notificationsSlice';\r\nimport {\r\n  getAirplanes,\r\n  deleteAirplane,\r\n  getAirplanesCount,\r\n} from 'api/airplaneRequests';\r\nimport { getAirplaneSearchHints } from 'api/searchHintsRequests';\r\nimport Table from 'components/shared/Table';\r\nimport CustomDialog from 'components/shared/CustomDialog';\r\nimport DeleteConfirmDialog from 'components/shared/DeleteConfirmDialog';\r\nimport Filter from 'shared/Filter';\r\nimport { elementsOnAdminTable } from 'constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  deleteButton: {\r\n    color: red[500],\r\n  },\r\n  tableHeader: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst AdminAirplanesPage = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  let timer = null;\r\n  let history = useHistory();\r\n  const [airplanes, setAirplanes] = useState([]);\r\n  const [airplanesCount, setAirplanesCount] = useState(0);\r\n  const [airplaneIdToDelete, setAirplaneIdToDelete] = useState();\r\n\r\n  const [airplaneTypeHints, setAirplaneTypeHints] = useState([]);\r\n  const [companyNameHints, setCompanyNameHints] = useState([]);\r\n  const [modelHints, setModelHints] = useState([]);\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [offset, setOffset] = useState(0);\r\n\r\n  const [airplaneTypeFilter, setAirplaneTypeFilter] = useState('');\r\n  const [companyFilter, setCompanyFilter] = useState('');\r\n  const [modelFilter, setModelFilter] = useState('');\r\n\r\n  const [isEditDialogOpened, setIsEditDialogOpened] = useState(false);\r\n  const [isMoreInfoDialogOpened, setIsMoreInfoDialogOpened] = useState(false);\r\n  const [isDeleteConfirmDialogOpened, setIsDeleteConfirmDialogOpened] =\r\n    useState(false);\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 100 },\r\n    { field: 'airplaneType', headerName: 'Type', width: 150 },\r\n    { field: 'companyName', headerName: 'Company', width: 150 },\r\n    { field: 'model', headerName: 'Model', width: 150 },\r\n    {\r\n      field: 'registrationNumber',\r\n      headerName: 'Registration number',\r\n      width: 200,\r\n    },\r\n    {\r\n      field: 'baggageCapacity',\r\n      headerName: 'Baggage capacity',\r\n      width: 200,\r\n      type: 'number',\r\n      valueFormatter: (params) => {\r\n        return `${params.value} Kg`;\r\n      },\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 200,\r\n      renderCell: (row) => {\r\n        return (\r\n          <>\r\n            <Tooltip title=\"Delete\">\r\n              <IconButton\r\n                className={classes.deleteButton}\r\n                onClick={() => openDeleteConfirmDialog(row.id)}\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const rows = airplanes.map((value) => {\r\n    return {\r\n      id: value.id,\r\n      airplaneType: value.airplaneType.typeName,\r\n      companyName: value.company.name,\r\n      model: value.model,\r\n      registrationNumber: value.registrationNumber,\r\n      baggageCapacity: value.baggageCapacityInKilograms,\r\n    };\r\n  });\r\n\r\n  const fetchAirplanes = async () => {\r\n    const airplanes = await getAirplanes(\r\n      offset,\r\n      airplaneTypeFilter,\r\n      companyFilter,\r\n      modelFilter\r\n    );\r\n    const airplanesCount = await getAirplanesCount(\r\n      airplaneTypeFilter,\r\n      companyFilter,\r\n      modelFilter\r\n    );\r\n\r\n    setAirplanes(airplanes);\r\n    setAirplanesCount(airplanesCount);\r\n  };\r\n\r\n  const fetchHints = async () => {\r\n    const hints = await getAirplaneSearchHints({\r\n      airplaneType: airplaneTypeFilter,\r\n      companyName: companyFilter,\r\n      model: modelFilter,\r\n    });\r\n    const airplaneTypes = hints.map((value) => value.airplaneType);\r\n    const companyNames = hints.map((value) => value.companyName);\r\n    const models = hints.map((value) => value.model);\r\n    setAirplaneTypeHints([...new Set(airplaneTypes)]);\r\n    setCompanyNameHints([...new Set(companyNames)]);\r\n    setModelHints([...new Set(models)]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAirplanes();\r\n  }, [\r\n    offset,\r\n    airplaneTypeFilter,\r\n    companyFilter,\r\n    modelFilter,\r\n    isDeleteConfirmDialogOpened,\r\n    isEditDialogOpened,\r\n  ]);\r\n\r\n  const onFilterChange = (values) => {\r\n    clearTimeout(timer);\r\n    if (!values[0] && !values[1] && !values[2]) {\r\n      setAirplaneTypeHints([]);\r\n      setCompanyNameHints([]);\r\n      setModelHints([]);\r\n    }\r\n    if (values[0] || values[1] || values[2]) {\r\n      timer = setTimeout(() => fetchHints(), 500);\r\n    }\r\n  };\r\n\r\n  const onSearchClick = (values) => {\r\n    setAirplaneTypeFilter(values[0]);\r\n    setCompanyFilter(values[1]);\r\n    setModelFilter(values[2]);\r\n    setPage(0);\r\n    setOffset(0);\r\n  };\r\n\r\n  const onPageChange = (page) => {\r\n    setPage(page);\r\n    setOffset(page * elementsOnAdminTable);\r\n  };\r\n\r\n  const openMoreInfoDialog = () => {\r\n    setIsMoreInfoDialogOpened(true);\r\n  };\r\n\r\n  const closeMoreInfoDialog = () => {\r\n    setIsMoreInfoDialogOpened(false);\r\n  };\r\n\r\n  const openEditInfoDialog = () => {\r\n    setIsEditDialogOpened(true);\r\n  };\r\n\r\n  const closeEditInfoDialog = () => {\r\n    setIsEditDialogOpened(false);\r\n  };\r\n\r\n  const openDeleteConfirmDialog = (airplaneId) => {\r\n    setAirplaneIdToDelete(airplaneId);\r\n    setIsDeleteConfirmDialogOpened(true);\r\n  };\r\n\r\n  const handleDeleteRejection = () => {\r\n    setIsDeleteConfirmDialogOpened(false);\r\n  };\r\n\r\n  const handleDeleteConfirmation = async () => {\r\n    const [deleteResponse, deleteError] = await deleteAirplane(airplaneIdToDelete);\r\n     \r\n    if (!deleteError) {\r\n      dispatch(setIsSimpleSuccessNotificationActive(true));\r\n      dispatch(setSimpleSuccessNotificationText('The airplanes was deleted successfully!'));\r\n      setIsDeleteConfirmDialogOpened(false);\r\n    }\r\n  };\r\n\r\n  const openAddPage = () => {\r\n    history.push('/admin/airplanes/creation');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DeleteConfirmDialog\r\n        isOpened={isDeleteConfirmDialogOpened}\r\n        handleConfirmation={handleDeleteConfirmation}\r\n        handleRejection={handleDeleteRejection}\r\n      />\r\n      <CustomDialog\r\n        title=\"Edit\"\r\n        isOpened={isEditDialogOpened}\r\n        closeDialog={closeEditInfoDialog}\r\n      />\r\n      <CustomDialog\r\n        title=\"More info\"\r\n        isOpened={isMoreInfoDialogOpened}\r\n        closeDialog={closeMoreInfoDialog}\r\n      />\r\n      <div className={classes.tableHeader}>\r\n        <Typography variant=\"h3\">Airplanes</Typography>\r\n        <Filter\r\n          fields={['Airplane type', 'Company name', 'Airplane model']}\r\n          fieldsOptions={[airplaneTypeHints, companyNameHints, modelHints]}\r\n          onFilterConfirmed={onFilterChange}\r\n          onSearchClick={onSearchClick}\r\n        />\r\n      </div>\r\n      <Table\r\n        page={page}\r\n        rows={rows}\r\n        columns={columns}\r\n        onPageChange={onPageChange}\r\n        rowCount={airplanesCount}\r\n        onAddClick={openAddPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminAirplanesPage;\r\n","export const AdminApp = 'AdminApp';\r\nexport const Admin = 'Admin';\r\nexport const User = 'User';\r\n","import CustomRoute from './CustomRoute';\r\nexport default CustomRoute;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { getRole } from 'services/token-service';\r\n\r\nconst CustomRoute = ({ path, children, requiredRoles }) => {\r\n  const token = useSelector((state) => state.token);\r\n  const role = getRole(token.jwtToken);\r\n\r\n  return (\r\n    <Route path={path}>\r\n      {requiredRoles.includes(role) ? children : <Redirect to=\"/\" />}\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default CustomRoute;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport AdminPanel from 'components/Admin/AdminPanel';\r\nimport Header from 'components/shared/Header';\r\nimport Footer from 'components/shared/Footer';\r\nimport SignIn from 'components/Authorization/SignIn';\r\nimport SignUp from 'components/Authorization/SignUp';\r\nimport AccountPage from 'components/AccountPage';\r\nimport MyCompanyPage from 'components/MyCompanyPage';\r\nimport FlightsPage from 'components/FlightsPage';\r\nimport AdminUsersPage from 'components/Admin/AdminPages/AdminUsersPage';\r\nimport AdminCompaniesPage from 'components/Admin/AdminPages/AdminCompaniesPage';\r\nimport AdminFlightsPage from 'components/Admin/AdminPages/AdminFlightsPage';\r\nimport AirplaneCreationPage from 'components/AirplaneCreationPage';\r\nimport FLightReservationPage from 'components/FlightReservationPage';\r\nimport Notifications from 'components/Notifications';\r\nimport { getRole } from 'services/token-service';\r\nimport AdminAirplanesPage from 'components/Admin/AdminPages/AdminAirplanesPage/AdminAirplanesPage';\r\nimport { AdminApp, Admin, User } from 'constants/appRoles';\r\nimport CustomRoute from 'shared/CustomRoute';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  main: {\r\n    display: 'flex',\r\n  },\r\n  mainPage: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    padding: '25px',\r\n  },\r\n  toolBar: theme.mixins.toolbar,\r\n}));\r\n\r\nconst AdminAppOpportunities = [AdminApp];\r\nconst AdminOpportunities = [AdminApp, Admin];\r\nconst UserOportunities = [AdminApp, Admin, User];\r\n\r\nfunction App() {\r\n  const token = useSelector((state) => state.token);\r\n  const classes = useStyles();\r\n\r\n  const [role, setRole] = useState('');\r\n\r\n  useEffect(() => {\r\n    setRole(getRole(token.jwtToken));\r\n  }, [token.jwtToken]);\r\n\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className={classes.main}>\r\n        <div className={classes.mainPage}>\r\n          {role === AdminApp ? <AdminPanel /> : <></>}\r\n          <Container>\r\n            <div className={classes.toolBar}></div>\r\n            <Switch>\r\n              <Route path=\"/SignIn\">\r\n                <SignIn />\r\n              </Route>\r\n              <Route path=\"/SignUp\">\r\n                <SignUp />\r\n              </Route>\r\n              <CustomRoute\r\n                path=\"/admin/users\"\r\n                requiredRoles={AdminAppOpportunities}\r\n              >\r\n                <AdminUsersPage />\r\n              </CustomRoute>\r\n              <CustomRoute\r\n                path=\"/admin/companies\"\r\n                requiredRoles={AdminAppOpportunities}\r\n              >\r\n                <AdminCompaniesPage />\r\n              </CustomRoute>\r\n              <CustomRoute\r\n                path=\"/admin/airplanes/creation\"\r\n                requiredRoles={AdminAppOpportunities}\r\n              >\r\n                <AirplaneCreationPage />\r\n              </CustomRoute>\r\n              <CustomRoute\r\n                path=\"/admin/airplanes\"\r\n                requiredRoles={AdminAppOpportunities}\r\n              >\r\n                <AdminAirplanesPage />\r\n              </CustomRoute>\r\n              <CustomRoute\r\n                path=\"/admin/flights\"\r\n                requiredRoles={AdminAppOpportunities}\r\n              >\r\n                <AdminFlightsPage />\r\n              </CustomRoute>\r\n              <CustomRoute path=\"/account\" requiredRoles={UserOportunities}>\r\n                <AccountPage />\r\n              </CustomRoute>\r\n              <CustomRoute path=\"/myCompany\" requiredRoles={AdminOpportunities}>\r\n                <MyCompanyPage />\r\n              </CustomRoute>\r\n              <Route path=\"/reservation\">\r\n                <FLightReservationPage />\r\n              </Route>\r\n              <Route exact path=\"/\">\r\n                <FlightsPage />\r\n              </Route>\r\n            </Switch>\r\n          </Container>\r\n          <Notifications />\r\n        </div>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import App from './App';\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App/';\nimport store from './redux/store';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}